//
//  UNIT      : Contains language text.
//  AUTHOR    : Grant Nyland (PDNA)
//  DATE      : 2002/01/23
//  COPYRIGHT : Copyright © 2003 DWAF
//
unit ULanguageText_ENG_ModelAgentMessages;

interface

type TTextItemAddFunction = procedure (AContext, AConstant, AText: string) of object;

procedure LoadLanguageText(AAdd: TTextItemAddFunction);

implementation

procedure LoadLanguageText(AAdd: TTextItemAddFunction);
const OPNAME = 'LoadLanguageText';
begin
  AAdd('TAbstractYieldNetworkVisualiserLinkAgent','strReadEnded','Completed updating Network Visualiser data successfully.');
  AAdd('TAbstractYieldNetworkVisualiserLinkAgent','strReadStarted','Started updating Network Visualiser data.');
  AAdd('TAbstractYieldNetworkVisualiserLinkAgent','strWriteEnded','Writing Network Visualiser data to database completed successfully.');
  AAdd('TAbstractYieldNetworkVisualiserLinkAgent','strWriteStarted','Started writing Network Visualiser data to database.');
  AAdd('TFilesActionYieldManager','strYieldModelFileNoExist','File (%s) was not found. This file is needed for the yield model to be valid.');
  AAdd('TFilesActionAbstractManager','strBatchRead','Import Files');
  AAdd('TFilesActionAbstractManager','strBatchWrite','Export Files');
  AAdd('TFilesActionAbstractManager','strClearModelData','Clear Model Data');
  AAdd('TFilesActionAbstractManager','strImportSumOut','Import Sum.out File');
  AAdd('TFilesActionAbstractManager','strLoadModelDataFromDB','Loading Model Data From the Database');
  AAdd('TFilesActionAbstractManager','strLoadModelDataFromFiles','Loading Model Data From Files');
  AAdd('TFilesActionAbstractManager','strReadYRCDataFromFile','Reading YRC data from SUM.OUT');
  AAdd('TFilesActionAbstractManager','strRunModel','Run Model Application');
  AAdd('TFilesActionAbstractManager','strSaveModelDataToDB','Saving Model Data to the Database');
  AAdd('TFilesActionAbstractManager','strSaveModelDataToFiles','Saving Model Data to Files');
  AAdd('TFilesActionAbstractManager','strSaveOutputFiles','Saving Output Files');
  AAdd('TFilesActionAbstractManager','strValidateModelFiles','Validating Model Files');
  AAdd('TFilesActionAbstractManager','strValidateModelData','Validating Model Data');
  AAdd('TFilesActionAbstractManager','strRunOptions','Run Options');
  AAdd('TFileObjectsContainer','strFileNoReadAgent','File (%s) does not have a reading agent implemented yet.');
  AAdd('TFileObjectsContainer','strFileNoWriteAgent','File (%s) does not have a writing agent implemented yet.');
  AAdd('TFileSelectionDataSheet','ButtonDirSelectorCaption','---');
  AAdd('TFileSelectionDataSheet','ButtonGenerateCaption','Generate');
  AAdd('TFileSelectionDataSheet','ButtonSelectCaption','Select');
  AAdd('TFileSelectionDataSheet','DirectorySelectionCaption','Select files directory');
  AAdd('TFileSelectionDataSheet','FButtonExpandAllCaption','Expand');
  AAdd('TFileSelectionDataSheet','FileNoExist','The selected file does not exists.');
  AAdd('TFileSelectionDataSheet','FilePathTooLong','Directory path cannot be more than 50 characters.');
  AAdd('TFileSelectionDataSheet','FileTooBig','The selected file is not completely displayed as it is too big. Only the top part of the file is shown.');
  AAdd('TFileSelectionDataSheet','LabelPrefixCaption','Prefix:');
  AAdd('TFileSelectionDataSheet','LabelStartDirectoryCaption','Files Directory:');
  AAdd('TFileSelectionDataSheet','strNoFileSelected','None');
  AAdd('TFileWRSM2000DatabaseAgent','strNoDataReturned','There is no data for file type DWS.NET  in the database.');
  AAdd('TFileWRSM2000DatabaseAgent','strReadEnded','Updating WRSM2000 data completed successfully');
  AAdd('TFileWRSM2000DatabaseAgent','strReadStarted','Started updating WRSM2000 file data.');
  AAdd('TFileWRSM2000DatabaseAgent','strWriteEnded','Writing WRSM2000 file data to database completed successfully.');
  AAdd('TFileWRSM2000DatabaseAgent','strWriteStarted','Started writing WRSM2000  file data to database.');
  AAdd('TGridEditorDialog','strGridColumns','Fields');
  AAdd('TGridEditorDialog','strGridData','Data');
  AAdd('TGUIValidatorYieldFilesAction','ReadWrymPathFileStart','Started reading paths file(WRYM.dat).');
  AAdd('TGUIValidatorYieldFilesAction','ReadWrymPathFileCompleted','Completed reading paths file(WRYM.dat).');
  AAdd('TGUIValidatorYieldFilesAction','strNoFilesToSave','There are no output files to save to the database.');
  AAdd('TGUIValidatorYieldFilesAction','strImportSumOutStarted','Started importing SUM.OUT File data.');
  AAdd('TGUIValidatorYieldFilesAction','strImportSumOutCompleted','Completed importing SUM.OUT File data.');
  AAdd('TGUIValidatorYieldFilesAction','strImportSumOutFailed','Importing SUM.OUT File data has failed.');

  AAdd('TRunYieldModelAgent','strCheckInputFilesStart','Started checking input files.');
  AAdd('TRunYieldModelAgent','strCheckInputFilesEnd','Completed checking input files.');
  AAdd('TRunYieldModelAgent','strCheckOutputFilesStart','Started checking output files.');
  AAdd('TRunYieldModelAgent','strWrymDataFileNotLoaded','WRYM.dat file not yet loaded into memory.');
  AAdd('TRunYieldModelAgent','strCheckOutputFilesEnd','Completed checking output files.');
  AAdd('TRunYieldModelAgent','strCopyFilesStart','Started copying executable file to data files directory.');
  AAdd('TRunYieldModelAgent','strErrFilesNotFound','Lf90.eer file not found in the dos directory.');
  AAdd('TRunYieldModelAgent','strAppFilesNotFound','WRYM-6.exe file not found in the dos directory.');
  AAdd('TRunYieldModelAgent','strDataDirectoryNotFound','Imput files directory not found.');
  AAdd('TRunYieldModelAgent','strCopyFilesComplete','Completed copying executable file to data files directory.');
  AAdd('TRunYieldModelAgent','strRunStart','Started running model.');
  AAdd('TRunYieldModelAgent','strCreateShortCutFailed','Creating a shortcut to WRYM-6.exe failed.');
  AAdd('TRunYieldModelAgent','strWaitModelRunning','Running model, please wait for the DOS window to close');
  AAdd('TRunYieldModelAgent','strModelRunningFailed','Model did not complete run.');
  AAdd('TRunYieldModelAgent','strRunCompleted','Completed running model.');

  AAdd('TRunPlanningModelAgent','strCheckInputFilesStart','Started checking input files.');
  AAdd('TRunPlanningModelAgent','strCheckInputFilesEnd','Completed checking input files.');
  AAdd('TRunPlanningModelAgent','strCheckOutputFilesStart','Started checking output files.');
  AAdd('TRunPlanningModelAgent','strWrymDataFileNotLoaded','WRPM.dat file not yet loaded into memory.');
  AAdd('TRunPlanningModelAgent','strCheckOutputFilesEnd','Completed checking output files.');
  AAdd('TRunPlanningModelAgent','strCopyFilesStart','Started copying executable file to data files directory.');
  AAdd('TRunPlanningModelAgent','strErrFilesNotFound','Lf90.eer file not found in the dos directory.');
  AAdd('TRunPlanningModelAgent','strAppFilesNotFound','WRPM*.exe file not found in the dos directory.');
  AAdd('TRunPlanningModelAgent','strDataDirectoryNotFound','Imput files directory not found.');
  AAdd('TRunPlanningModelAgent','strCopyFilesComplete','Completed copying executable file to data files directory.');
  AAdd('TRunPlanningModelAgent','strRunStart','Started running model.');
  AAdd('TRunPlanningModelAgent','strCreateShortCutFailed','Creating a shortcut to WRPM*.exe failed.');
  AAdd('TRunPlanningModelAgent','strWaitModelRunning','Running model, please wait for the DOS window to close');
  AAdd('TRunPlanningModelAgent','strModelRunningFailed','Model did not complete run.');
  AAdd('TRunPlanningModelAgent','strRunCompleted','Completed running model.');

  AAdd('TDemandFileAgent','strReadingCompleted','Validating Demand File (%s) completed successfully.');
  AAdd('TDemandFileAgent','strReadingStarted','Started validating Demand File (%s)');
  AAdd('TDemandFileAgent','strWritingCompleted','Writing Demand File (%s) completed successfully.');
  AAdd('TDemandFileAgent','strWritingStarted','Started writing Demand File (%s)');
  AAdd('TDemandFileAgent','strYearErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (a Year).');
  AAdd('TDemandFileAgent','strMonthvalueErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (a Month value).');
  AAdd('TDemandFileAgent','strAverageErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (a Average/Total value).');
  AAdd('TDemandFileAgent','strFileNoExist','File (%s)  does not exist. Reading from file failed.');
  AAdd('TDemandFileAgent','strFileStartYearError','The start date in file (%s) is not the same as in the first file (%s)');
  AAdd('TDemandFileAgent','strFileEndYearError','The end date in file (%s) is not the same as in the first file (%s)');
  AAdd('TDemandFileAgent','strFileLengthError','The length of file (%s) is not the same as that of the first file (%s)');

  AAdd('TDemandDatabaseAgent','strNoDataReturned','There is no demand file data in the database.');
  AAdd('TDemandDatabaseAgent','strReadEnded','Completed reading demand file (%s) data from database successfully.');
  AAdd('TDemandDatabaseAgent','strReadStarted','Started reading demand file (%s) data from database.');
  AAdd('TDemandDatabaseAgent','strWriteStarted' ,'Started writing demand file (%s) data into database.');
  AAdd('TDemandDatabaseAgent','strWriteEnded','Completed writing demand file (%s) data into database successfully.');

  AAdd('THydrologyFileAgent','strYearErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (a Year).');
  AAdd('THydrologyFileAgent','strReadingCompleted','Validating of Hydrology file (%s)  completed successfully.');
  AAdd('THydrologyFileAgent','strReadingStarted','Started validating Hydrology file (%s)');
  AAdd('THydrologyFileAgent','strWritingCompleted','Writing of file (%s)  completed successfully.');
  AAdd('THydrologyFileAgent','strWritingStarted','Started Writing file (%s) .');
  AAdd('THydrologyFileAgent','strFileNoExist','File (%s)  does not exist. Reading from file failed.');
  AAdd('THydrologyFileAgent','strAverageErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (an Average for a Year).');
  AAdd('THydrologyFileAgent','strMonthvalueErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (a Month value).');
  AAdd('THydrologyFileAgent','strFileStartYearError','The start date in file (%s) is not the same as in the first file (%s)');
  AAdd('THydrologyFileAgent','strFileEndYearError','The end date in file (%s) is not the same as in the first file (%s)');
  AAdd('THydrologyFileAgent','strFileLengthError','The length of file (%s) is not the same as that of the first file (%s)');

  AAdd('THydrologyDatabaseAgent','strReadEnded','Completed reading Hydrology file (%s) data from database successfully.');
  AAdd('THydrologyDatabaseAgent','strReadStarted','Started reading Hydrology file (%s) data from database.');
  AAdd('THydrologyDatabaseAgent','strWriteEnded','Completed writing Hydrology file (%s) data into database successfully.');
  AAdd('THydrologyDatabaseAgent','strWriteStarted','Started writing Hydrology file (%s) data into database.');
  AAdd('THydrologyDatabaseAgent','strNoDataReturned','There is no hydrology file data in the database.');

  AAdd('THydrologyFileNamesDatabaseAgent','strReadEnded','Reading Hydrology File names  completed successfully');
  AAdd('TNetworkVisualiserLinkDatabaseAgent','strReadEnded','Completed updating Network Visualiser data successfully.');
  AAdd('TNetworkVisualiserLinkDatabaseAgent','strReadStarted','Started updating Network Visualiser data.');
  AAdd('TNetworkVisualiserLinkDatabaseAgent','strWriteEnded','Writing Network Visualiser data to database completed successfully.');
  AAdd('TNetworkVisualiserLinkDatabaseAgent','strWriteStarted','Started writing Network Visualiser data to database.');
  AAdd('TReservoirDefinitionsValidator','strLine1IntegerInvalid','The first Integer in line 1 of Reservoir Definitions file is not valid.');
  AAdd('TReservoirDefinitionsValidator','strLine1Invalid','The first line  of Reservoir Definitions file does not contain an integer,2 Spaces and 3 characters.');
  AAdd('TReservoirDefinitionsValidator','strLine1StringInvalid1','The  String in line 1 of Reservoir Definitions file is not valid.');
  AAdd('TReservoirDefinitionsValidator','strLine1StringInvalid2','The  String in line 1 of Reservoir Definitions file is not valid.');
  AAdd('TReservoirDefinitionsValidator','strLine2floatInvalid','The first float in line 2 of Reservoir Definitions file is not valid.');
  AAdd('TReservoirDefinitionsValidator','strLine2IntegerInvalid','The first integer in line 2 of Reservoir Definitions file is not valid.');
  AAdd('TReservoirDefinitionsValidator','strLine2Invalid','The second line  of Reservoir Definitions does not contain 36 Characters,3 Spaces,4 integers of 5 characters each,1 Character and 3 floats');
  AAdd('TReservoirDefinitionsValidator','strLine2Spaces','The  String in line 2 of Reservoir Definitions file is not valid because it doesn''t have 3 space.');
  AAdd('TReservoirDefinitionsValidator','strLine2StringInvalid1','The  String in line 2 of Reservoir Definitions file is not valid');
  AAdd('TReservoirDefinitionsValidator','strLine2StringInvalid2','The  String in line 2 of Reservoir Definitions file is not valid.');
  AAdd('TStructureDefinitionsValidator','strLine1IntegerInvalid','The first Integer in line 1 of Structure Definitions file is not valid.');
  AAdd('TStructureDefinitionsValidator','strLine1Invalid','The first line  of Structure Definitions file does not contain an integer of  5 characters.');
  AAdd('TStructureDefinitionsValidator','strLine2floatInvalid1','The first float in line 2 of Structure Definitions file is not valid.');
  AAdd('TStructureDefinitionsValidator','strLine2floatInvalid2','The  float in line 2 of Structure Definitions file is not valid.');
  AAdd('TStructureDefinitionsValidator','strLine2IntegerInvalid1','The first integer in line 2 of Structure definitions file is not valid2 floats of 10 characters each 3 Spaces,an integer and 2 floats of 10 characters each.');
  AAdd('TStructureDefinitionsValidator','strLine2IntegerInvalid2','The fifth integer in line 2 of Structure Definitions file is not valid.');
  AAdd('TStructureDefinitionsValidator','strLine2Invalid','The second line  of Structure Definitions does not contain 4 integers of 5 characters each,2 floats of 10 characters each 3 Spaces,an integer and 2 floats of 10 characters each.');
  AAdd('TStructureDefinitionsValidator','strLine2Spaces','The  String in line 2 of Structure Definitions file is not valid because it does not contain 3 spaces.');
  AAdd('TSumOutFileManager','strReadYRCDataStarted','Started reading graph data from SUM.OUT.');
  AAdd('TSumOutFileManager','strReadYRCDataCompleted','Reading graph data from SUM.OUT completed successfully.');
  AAdd('TSumOutFileManager','strValidationStarted','Started validating output files.');
  AAdd('TSumOutFileManager','strValidationCompleted','Validating output files completed successfully.');
  AAdd('TSumOutFileManager','strImportStarted','Started importing output files.');
  AAdd('TSumOutFileManager','strImportCompleted','Importing output files completed successfully.');
  AAdd('TSumOutFileManager','strExportStarted','Started exporting output files.');
  AAdd('TSumOutFileManager','strExportCompleted','Exporting output files completed successfully.');
  AAdd('TSumOutFileManager','strFileNoExist','File (%s)  does not exist. Reading from file failed.');
  AAdd('TSumOutFileManager','strFileValidationStarted','Started validating file (%s)');
  AAdd('TSumOutFileManager','strFileImportStarted','Started importing file (%s)');
  AAdd('TSumOutFileManager','strFileExportStarted','Started exporting file (%s)');
  AAdd('TSumOutFileManager','strFileValidationCompleted','Validating of file (%s) completed successfully');
  AAdd('TSumOutFileManager','strFileImportCompleted','Importing of file (%s) completed successfully');
  AAdd('TSumOutFileManager','strFileExportCompleted','Exporting of file (%s) completed successfully');
  AAdd('TUknownDatabaseAgent','strNoDataReturned','There is no data for file (%s) in the database.');
  AAdd('TUknownDatabaseAgent','strReadEnded','Reading of file (%s) completed successfully');
  AAdd('TUknownDatabaseAgent','strReadStarted','Started reading file (%s)');
  AAdd('TUknownDatabaseAgent','strWriteEnded','Writing of file (%s)  to database completed successfully');
  AAdd('TUknownDatabaseAgent','strWriteStarted','Started Writing file (%s) to the database');
  AAdd('TUnKnownFileAgent','str','Started Writing of file (%s)  completed successfully.');
  AAdd('TUnKnownFileAgent','strFile1NoExist','File (%s)  does not exist. Writing from file failed.');
  AAdd('TUnKnownFileAgent','strFileNoExist','File (%s)  does not exist. Reading from file failed.');
  AAdd('TUnKnownFileAgent','strReadingCompleted','Validating of file (%s) completed successfully.');
  AAdd('TUnKnownFileAgent','strReadStarted','Started validating file (%s)');
  AAdd('TUnKnownFileAgent','strWritingCompleted','Writing of file (%s) completed successfully.');
  AAdd('TUnKnownFileAgent','strWritingStarted','Started Writing file (%s)');
  AAdd('TUknownOutputFilesDatabaseAgent','strNoDataReturned','There is no data for file (%s) in the database.');
  AAdd('TUknownOutputFilesDatabaseAgent','strReadEnded','Reading of file (%s) completed successfully');
  AAdd('TUknownOutputFilesDatabaseAgent','strReadStarted','Started reading file (%s)');
  AAdd('TUknownOutputFilesDatabaseAgent','strWriteEnded','Writing of file (%s)  to database completed successfully');
  AAdd('TUknownOutputFilesDatabaseAgent','strWriteStarted','Started Writing file (%s) to the database');
  AAdd('TWRSM2000FileAgent','strChar1Err','Error: Line No:(%d) is not valid.Column %d to %d should contain a string.');
  AAdd('TWRSM2000FileAgent','strChar2Err','Error: Line No:(%d) is not valid.Column %d to %d should contain a string.');
  AAdd('TWRSM2000FileAgent','strDirectoryErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a string that represents (The file directory).');
  AAdd('TWRSM2000FileAgent','strFileNameErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a string that represents a File name.');
  AAdd('TWRSM2000FileAgent','strFileNoExist','File (%s)  does not exist. Reading from file failed.');
  AAdd('TWRSM2000FileAgent','strFlowGaugeErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a string that represents a Flow Gauge');
  AAdd('TWRSM2000FileAgent','strFlowGaugesCountErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents the FlowGauges count');
  AAdd('TWRSM2000FileAgent','strFromSubModuleNumberErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents the submodule number.');
  AAdd('TWRSM2000FileAgent','strNumberErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer.');
  AAdd('TWRSM2000FileAgent','strProjectNumErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a string that represents (Project Identifier).');
  AAdd('TWRSM2000FileAgent','strReadingCompleted','Validating of file (%s)  completed successfully.');
  AAdd('TWRSM2000FileAgent','strReadingStarted','Started validating file (%s) as file DWS.NET');
  AAdd('TWRSM2000FileAgent','strRouteErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents the route.');
  AAdd('TWRSM2000FileAgent','strRouteNumberErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents the route number.');
  AAdd('TWRSM2000FileAgent','strRoutesCountErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents the routes count.');
  AAdd('TWRSM2000FileAgent','strShapeErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents the shape of the drawing.');
  AAdd('TWRSM2000FileAgent','strSubModuleCountErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents the submodule count.');
  AAdd('TWRSM2000FileAgent','strSubModuleTypeErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a string that represents the submodule type.');
  AAdd('TWRSM2000FileAgent','strToSubModuleNumberErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents the submodule number.');
  AAdd('TWRSM2000FileAgent','strWritingCompleted','Writing of file (%s)   as  WRSM2000 file completed successfully.');
  AAdd('TWRSM2000FileAgent','strWritingStarted','Started Writing file (%s)  as WRSM2000 file.');
  AAdd('TWRSM2000FileAgent','strYCharErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a string.');
  AAdd('TWRSM2000FileAgent','strYear1Err','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents a year');
  AAdd('TWRSM2000FileAgent','strYear2Err','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents a year');
  AAdd('TWRSM2000FileAgent','strZeroValueErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer.');
  AAdd('TYieldModelIOContainer','strCopying1Completed','Copying Control Data file to database completed.');
  AAdd('TYieldModelIOContainer','strCopying1Failed','Copying Control Data file to database failed.');
  AAdd('TYieldModelIOContainer','strCopying1Started','Copying Control Data file to database started.');
  AAdd('TYieldModelIOContainer','strCopying2Completed','Copying Reservoir Definitions file to database completed.');
  AAdd('TYieldModelIOContainer','strCopying2Failed','Copying Reservoir Definitions file to database failed.');
  AAdd('TYieldModelIOContainer','strCopying2Started','Copying Reservoir Definitions file to database started.');
  AAdd('TYieldModelIOContainer','strCopying3Completed','Copying Channel Type Geometry file to database completed.');
  AAdd('TYieldModelIOContainer','strCopying3Failed','Copying Channel Type Geometry  file to database failed.');
  AAdd('TYieldModelIOContainer','strCopying3Started','Copying Channel Type Geometry file to database started.');
  AAdd('TYieldModelIOContainer','strCopying4Completed','Copying Structure Definitions file to database completed.');
  AAdd('TYieldModelIOContainer','strCopying4Failed','Copying Structure Definitions file to database failed.');
  AAdd('TYieldModelIOContainer','strCopying4Started','Copying Structure Definitions file to database started.');
  AAdd('TYieldModelIOContainer','strCopying5Completed','Copying Zone Policy file to database completed.');
  AAdd('TYieldModelIOContainer','strCopying5Failed','Copying Zone Policy file to database failed.');
  AAdd('TYieldModelIOContainer','strCopying5Started','Copying Zone Policy file to database started.');
  AAdd('TYieldModelIOContainer','strCopyingFile1Completed','Copying Control Data file from database completed');
  AAdd('TYieldModelIOContainer','strCopyingFile1Failed','Copying Control Data file from database failed');
  AAdd('TYieldModelIOContainer','strCopyingFile1Started','Copying Control Data file from database started');
  AAdd('TYieldModelIOContainer','strCopyingFile2Completed','Copying Reservoir Definitions file to database Completed');
  AAdd('TYieldModelIOContainer','strCopyingFile2Failed','Copying Reservoir Definitions file from database failed');
  AAdd('TYieldModelIOContainer','strCopyingFile2Started','Copying Reservoir Definitions file to database started');
  AAdd('TYieldModelIOContainer','strCopyingFile3Completed','Copying Channel Type Geometry file to database completed');
  AAdd('TYieldModelIOContainer','strCopyingFile3Failed','Copying Channel Type Geometry  file to database failed');
  AAdd('TYieldModelIOContainer','strCopyingFile3Started','Copying Channel Type Geometry file to database started.');
  AAdd('TYieldModelIOContainer','strCopyingFile4Completed','Copying Structure Definition file to database Completed.');
  AAdd('TYieldModelIOContainer','strCopyingFile4Failed','Copying   file to database failed');
  AAdd('TYieldModelIOContainer','strCopyingFile4Started','Copying Structure Definition file to database started.');
  AAdd('TYieldModelIOContainer','strCopyingFilesFromDBStarted','Copying files to database started');
  AAdd('TYieldModelIOContainer','strCopyingFileToDBStarted','Copying files to database started.');
  AAdd('TYieldModelIOContainer','strFilesCopied','Copying files completed successfully');
  AAdd('TYieldModelIOContainer','strFilesNotCopied','Copying files did not complete successfully');
  AAdd('TYieldModelIOContainer','strNoFilesCopied','No file name has been specified. No file was copied');
  AAdd('TYieldModelManager','strUnassignedDatasetContainer','Cannot assign system dataset container from an unassigned dataset container.');
  AAdd('TYieldModelValidatorContainer','strChannelTypeGeometryValidFailed','Channel type geometry data validation did not completed successfully.');
  AAdd('TYieldModelValidatorContainer','strChannelTypeGeometryValidPassed','Channel type geometry validation completed successfully.');
  AAdd('TYieldModelValidatorContainer','strChannelTypeGeometryValidStarted','Channel type geometry data validation started.');
  AAdd('TYieldModelValidatorContainer','strControldataValidationFailed','Control data validation did not completed successfully.');
  AAdd('TYieldModelValidatorContainer','strControldataValidationPassed','Controldata validation completed successfully.');
  AAdd('TYieldModelValidatorContainer','strControldataValidationStarted','Controldata data validation started.');
  AAdd('TYieldModelValidatorContainer','strReservoirDefinitionsValidFailed','Reservoir definitions data validation did not completed successfully.');
  AAdd('TYieldModelValidatorContainer','strReservoirDefinitionsValidPassed','Reservoir definitions data validation completed successfully.');
  AAdd('TYieldModelValidatorContainer','strReservoirDefinitionsValidStarted','Reservoir definitions data validation started.');
  AAdd('TYieldModelValidatorContainer','strStructureDefinitionsValidFailed','Structure definitions data validation did not completed successfully.');
  AAdd('TYieldModelValidatorContainer','strStructureDefinitionsValidPassed','Structure definitions data validation completed successfully.');
  AAdd('TYieldModelValidatorContainer','strStructureDefinitionsValidStarted','Structure definitions data validation started.');
  AAdd('TYieldModelValidatorContainer','strValidationFailed','Validation completed. Some data has errors.');
  AAdd('TYieldModelValidatorContainer','strValidationPassed','Validation completed. No error in data.');
  AAdd('TYieldModelValidatorContainer','strValidationStarted','Validation started.');
  AAdd('TYieldModelValidatorContainer','strZonePolicyValidFailed','Zone policy data validation did not completed successfully.');
  AAdd('TYieldModelValidatorContainer','strZonePolicyValidPassed','Zone Policy  data validation completed successfully.');
  AAdd('TYieldModelValidatorContainer','strZonePolicyValidStarted','Zone policy data validation started.');
  AAdd('TZonePolicyValidator','strLine1IntegerInvalid','The integer  in line 1 of zone/policy file is not valid.');
  AAdd('TZonePolicyValidator','strLine1Invalid','The first line  of zone/policy does not contain 3 integers of 5 characters each.');
  AAdd('TZonePolicyValidator','strLine2floatInvalid','The first float in line 2 of zone/policy file is not valid.');
  AAdd('TZonePolicyValidator','strLine2IntegerInvalid','The first integer in line 2 of zone/policy file is not valid.');
  AAdd('TZonePolicyValidator','strLine2Invalid','The second line  of zone/policy does not contain 4 Spaces,6 Characters,3 integers of 5 characters each and Floats of 10 Characters each.');
  AAdd('TZonePolicyValidator','strLine2StringInvalid','The first String in line 2 of zone/policy file is not valid.');

  AAdd('TFrmMain','strGaugesNotLoaded','No Gauges have been loaded.');
  AAdd('DatabaseBuilder','AppendTable','Append table named(');
  AAdd('DatabaseBuilder','Failed',' Failed.');

  AAdd('DialogCaption','Time','Time');
  AAdd('DialogCaption','DemandFileMonthly','Demand File (million m3/month)');
  AAdd('DialogCaption','DemandFile','Demand File (million m3)');
  AAdd('DialogCaption','DamLevel','Dam Level File');
  AAdd('DialogCaption','InflowFileMonthly','Inflow File (million m3/month)');
  AAdd('DialogCaption','InflowFile','Inflow File (million m3)');

  AAdd('StudySelection','MAIN','MAIN_');
  AAdd('StudySelection','DOCS','DOCS_');
  AAdd('StudySelection','SystemData','System_Data');
  AAdd('StudySelection','Covers','Covers\StudySelectionView.gvf');
  AAdd('StudySelection','Caption','GIS Viewer not installed.');
  AAdd('StudySelection','AModel','Dummy Model');
  AAdd('StudySelection','ShapeFileExt','.shp');
  AAdd('StudySelection','Caption1','GIS Viewer not installed.');
  AAdd('StudySelection','FormCaption','Import Study');
  AAdd('StudySelection','LabelCaption1','Start Directory');
  AAdd('StudySelection','CoversPath','Covers\Study Area\');
  AAdd('StudySelection','StudySubPath','Covers\Study Sub-Areas\');
  AAdd('StudySelection','StudyCaption','Study');
  AAdd('StudySelection','StudyNoCaption','Study No');
  AAdd('StudySelection','ModelCaption','Model');
  AAdd('StudySelection','ImportAllStudyData','Import All Study Data');
  AAdd('StudySelection','DateCaption','Date');
  AAdd('StudySelection','ClientCaption','Client');
  AAdd('StudySelection','ConsultantCaption','Consultant');
  AAdd('StudySelection','DescriptionCaption','Description');
  AAdd('StudySelection','DecDegCoordUnits','(All in dec deg)');
  AAdd('StudySelection','TopLeftCoordCaption','Top Lon:');
  AAdd('StudySelection','TopRightCoordCaption','Top Lat:');
  AAdd('StudySelection','BottomLeftCaption','Bottom Lon:');
  AAdd('StudySelection','BottomRightCaption','Bottom Lat:');
  AAdd('StudySelection','BtnUpdateFromGISCaption','Update From GIS');
  AAdd('StudySelection','BtnUpdateDBCaption','Save Data');
  AAdd('StudySelection','SubAreaCaption','SubArea');
  AAdd('StudySelection','ScenarioCaption','Scenario');
  AAdd('StudySelection','WrcDataPath','wrcdata\');
  AAdd('StudySelection','ProjectGauge','Project Gauge');
  AAdd('StudySelection','SubAreaName','SubArea Name');
  AAdd('StudySelection','RainfallZone','Rainfall Zone');
  AAdd('StudySelection','ZoneName','Zone Name');
  AAdd('StudySelection','ScenarioName','Scenario Name');
  AAdd('StudySelection','ShapeFilesFilter','Shape files (*.shp)|*.SHP');
  AAdd('StudySelection','YRCModel','YRC Model');
  AAdd('StudySelection','YRCPost','YRC Post processor model');
  AAdd('StudySelection','PlanningModel','Planning Model');
  AAdd('StudySelection','DailyDiversionPreProcessor','Daily Diversion PreProcessor');
  AAdd('StudySelection','IFRPreProcessor','Instream Flow Requirement');
  AAdd('StudySelection','RecreateFile','Could not recreate file ');
  AAdd('StudySelection','AddToStudyManually','. Please add it to the study manually.');
  AAdd('StudySelection','NetworkDiagrams','Network diagrams from version 2.10.1 and earlier ');
  AAdd('StudySelection','UpgradeToVersion','can not be upgraded to version 2.11.0. Please redraw network diagrams.');

  AAdd('VisioNetwork','MsgNotExist',' does not exist');
  AAdd('VisioNetwork','MsgSelectText','Select text type');
  AAdd('VisioNetwork','General','General');
  AAdd('VisioNetwork','DemandFile','DemandFile');
  AAdd('VisioNetwork','Inflow','Inflow');
  AAdd('VisioNetwork','ChannelFlow','ChannelFlow');
  AAdd('VisioNetwork','NetBasinRunoff','NetBasinRunoff');
  AAdd('VisioNetwork','Elevation','Elevation');
  AAdd('VisioNetwork','Volume','Volume');
  AAdd('VisioNetwork','PercentageFull','PercentageFull');
  AAdd('VisioNetwork','Rainfall','Rainfall');
  AAdd('VisioNetwork','Evaporation','Evaporation');
  AAdd('VisioNetwork','SFRASubCatchment','SFRASubCatchment');
  AAdd('VisioNetwork','AvgChannelFlow','AvgChannelFlow');
  AAdd('VisioNetwork','AvgElevation','AvgElevation');
  AAdd('VisioNetwork','AvgVolume','AvgVolume');
  AAdd('VisioNetwork','AvgNetBasinRunoff','AvgNetBasinRunoff');
  AAdd('VisioNetwork','AvgRainfall','AvgRainfall');
  AAdd('VisioNetwork','AvgEvaporation','AvgEvaporation');
  AAdd('VisioNetwork','ReservoirStorageChange','ReservoirStorageChange');
  AAdd('VisioNetwork','StringNoValue','No value');
  AAdd('VisioNetwork','Stringm3','m3/s');
  AAdd('VisioNetwork','StringFail','Fail');
  AAdd('VisioNetwork','StringMcm','mcm');
  AAdd('VisioNetwork','StringFull','Full');
  AAdd('VisioNetwork','StringEmpty','Empty');
  AAdd('VisioNetwork','MsgAddedVersion','Added version for ');
  AAdd('VisioNetwork','MsgSetVersion','Set version for ');
  AAdd('VisioNetwork','MshNotImplemented',' Not yet implemented.');

  AAdd('LabelText','RainGaugeNumber','Rain gauge number : ');
  AAdd('LabelText','DistanceInKM','Distance in km : ');
  AAdd('LabelText','SearchStationNumber','Search for station number...(Wildcards Allowed)');
  AAdd('LabelText','SearchStationName','Search for station name...(Wildcards Allowed)');
  AAdd('LabelText','NameOfStation','Station name: ');
  AAdd('LabelText','EnterBuffer','Enter buffer range: ');
  AAdd('LabelText','LongitudePoint','Longitude of point: ');
  AAdd('LabelText','LatitudePoint','Latitude of point: ');
  AAdd('LabelText','DwafURL','        www.dwaf.gov.za');
  AAdd('LabelText','DwafEmail','        icm@dwaf.gov.za');
  AAdd('LabelText','PrefixIsEmpty','File Name Prefix is empty.');
  AAdd('LabelText','PathIsEmpty','Input Files Path is empty.');
  AAdd('LabelText','PathDoesNotExist','Input Files Path does not exist.');
  AAdd('LabelText','CompatibleWithDos','Input Files Path is not compatible with dos applications.');
  AAdd('LabelText','FilesPathEmpty','Output Files Path is empty.');
  AAdd('LabelText','FilesPathNotExist','Output Files Path does not exist.');
  AAdd('LabelText','OutputFilesNotCompatible','Output Files Path is not compatible with dos applications.');
  AAdd('LabelText','ParamFileEmpty','Param file is empty.');
  AAdd('LabelText','ParamFileNotExist','Param file does not exist.');
  AAdd('LabelText','PathBracket','Path (');
  AAdd('LabelText','DosApplications',')is not compatible with dos applications');
  AAdd('LabelText','DirectoryNotExist','Directory does not exist(');
  AAdd('LabelText','CreatingIt',') Do you want to create it');
  AAdd('LabelText','PleaseSpecify',')is not valid. Please respecify');
  AAdd('LabelText','AssuranceInterval','Assurance Interval');
  AAdd('LabelText','LabelDischarge',' Discharge  (m3/s)');
  AAdd('LabelText','ParameterFile','Parameter file :');
  AAdd('LabelText','ThreeDots','...');
  AAdd('LabelText','LabelDownstream','Downstream reservoir elevations');
  AAdd('LabelText','ViewData','View data :');
  AAdd('LabelText','SelectData','Select Data');
  AAdd('LabelText','LoadCase','Load case :');
  AAdd('LabelText','DecisionMonth','Decision Month :');
  AAdd('LabelText','Sequence','Sequence :');
  AAdd('LabelText','Month','Month :');
  AAdd('LabelText','SelectMonth','Select Month :');
  AAdd('LabelText','More','More >>>');
  AAdd('LabelText','Less','<<< Less');
  AAdd('LabelText','Units','Units :');
  AAdd('LabelText','TimeStep','Time step :');
  AAdd('LabelText','ValueType','Value type :');
  AAdd('LabelText','Highlight','Highlight deficits');
  AAdd('LabelText','Millionm3','Million m³/month');
  AAdd('LabelText','MillionInYear','Million m³/year');
  AAdd('LabelText','MeterPerSec','m³/s');

  AAdd('LabelText','PeriodSequence','Sequence');
  AAdd('LabelText','PeriodSelection','Period Selection');
  AAdd('LabelText','AveragePeriod','Average Period');
  AAdd('LabelText','StartDate','Start Date');
  AAdd('LabelText','EndDate','End Date');
  AAdd('LabelText','Sequence','Sequence');


  AAdd('LabelText','NodeNumber','Node Number');
  AAdd('LabelText','PenaltyStructure','Penalty Structure');
  AAdd('LabelText','PrintOutPut','Print OutPut');
  AAdd('LabelText','DrainageArea','Drainage Area Scaling Factor');
  AAdd('LabelText','ScalingFactor','Afforestation Scaling Factor');
  AAdd('LabelText','IrrigationScaling','Irrigation Scaling Factor');
  AAdd('LabelText','ReferenceNumber','Catchment Reference Number');
  AAdd('LabelText','SupplyLevel','Full Supply Level');
  AAdd('LabelText','StorageLevel','Dead Storage Level');
  AAdd('LabelText','LevelOfReservoir','Bottom Level of Reservoir');
  AAdd('LabelText','PenaltyStructure','Penalty Structure');
  AAdd('GeneralTabCaption','General','General');

  AAdd('GrBox','Penalty','Penalty');
  AAdd('GrBox','Zone','Zone');
  AAdd('RandMode','View','View');
  AAdd('FrmCaption','AddPenalty','Add Penalty');
  AAdd('FrmCaption','DeletePenalty','Delete Penalty');
  AAdd('FrmCaption','AssuranceIntervals','Select the requred Assurance intervals');
  AAdd('FrmCaption','Interval','Assurance Interval');

  AAdd('ComplienceString','SupplyVolume','Full Supply Volume (FSV)');
  AAdd('ComplienceString','StorageVolume','Dead Storage Volume (DSV)');
  AAdd('ComplienceString','SupplyLevel','Full Supply Level (FSL)');
  AAdd('ComplienceString','StorageLevel','Dead Storage Level (DSL)');

  AAdd('DistributionCurve','Supply','Supply (%)');
  AAdd('DistributionCurve','SupplyMillion','Supply (million m3/a)');
  AAdd('DistributionCurve','SupplyMillionPerMonth','Supply (million m3/m)');
  AAdd('DistributionCurve','Supplym3','Supply (m3/s)');
  AAdd('DistributionCurve','SupplyMegaL','Supply (ML/d)');
  AAdd('DistributionCurve','Sequences','Sequences (as % of total number analysed)');

  AAdd('Weather','StartDate','Start date :');
  AAdd('Weather','EndDate','End date :');
  AAdd('Weather','Area','Area :');
  AAdd('Weather','Refresh','Refresh');
  AAdd('Weather','CellNr','Nr');
  AAdd('Weather','CellStartDate','Start date');
  AAdd('Weather','CellEndDate','End date');
  AAdd('Weather','CellArea','Area');
  AAdd('Weather','CellEvent','Event');
  AAdd('Weather','CellComment','Comment');
  AAdd('Weather','TabCaptionKey','WeatherEvents');

  AAdd('YieldReliability','MarkText',' Mm³/a');
  AAdd('YieldReliability','ResultTabCaption','Result Graph');
  AAdd('YieldReliability','FormCaption','Select the requred Assurance intervals');
  AAdd('YieldReliability','InputEditYvalue','Edit Y-Value');
  AAdd('YieldReliability','ErrorHistoricMode','  The model was run in Historic mode, must be run in Stochastic mode.');
  AAdd('YieldReliability','ErrorHistoricFirm','  Calculate the historic firm yield option must be set to zero.');
  AAdd('YieldReliability','ErrorYRCUtility','YRC utility will not run because:');
  AAdd('YieldReliability','WarningLength','  Multiple period length must be set to one.');
  AAdd('YieldReliability','HintLength','  Hint: Multiple period length can only be set to one if number of years in the hydrological sequence is ten or less.');
  AAdd('YieldReliability','HintNumberOfLoad','  Hint: Number of load cases should be greater than 3(preferably 4 or more, max 10) to get a reasonable definition to the firm yield line.');
  AAdd('YieldReliability','WarningPlotPlane','Plot plane conversion will not run because:');
  AAdd('YieldReliability','PanelCaption','No Target Draft Selected');
  AAdd('YieldReliability','HintStr','Recurrence Interval = %8.2f');
  AAdd('YieldReliability','Caption','Hide all raw data lines');
  AAdd('YieldReliability','Caption1','When X=100% Y=');
  AAdd('YieldReliability','LabelCaption','Show Target Draft');
  AAdd('YieldReliability','ItemAllTarget','All target drafts');
  AAdd('YieldReliability','ItemSelected','The selected target draft');
  AAdd('YieldReliability','ItemAdjacent','Adjacent target drafts');
  AAdd('YieldReliability','LabelOff','Hide Labels');
  AAdd('YieldReliability','ShowXY','Cursor Position');

  AAdd('FileSelection','WrongUserCode','Wrong user Code, Copyright unsuccessful!');

  AAdd('Message','AffectAllReservoirs','This change will affect all reservoirs that are using this penalty structure.');
  AAdd('Message','ClearFile','Clear File Names');
  AAdd('Message','DirecoryWrong','Windows Direcory wrong, Copyright unsuccessful!');
  AAdd('Message','WrongUserCode','Wrong user Code, Copyright unsuccessful!');
  AAdd('EdtText','YieldChannel','Water yield channel (a)');
  AAdd('EdtText','DiversionChannel','Diversion channel (m)');
  AAdd('EdtText','LossChannel','Loss channel (r)');
  AAdd('EdtText','Min-maxChannel','Min-max channel (c)');
  AAdd('EdtText','SpillChannel','Spill channel (b)');

  AAdd('Reconciliationanalysis','Number','Number');
  AAdd('Reconciliationanalysis','CategoryDescription','Category Description');
  AAdd('Reconciliationanalysis','Industrial','Industrial');
  AAdd('Reconciliationanalysis','Irrigation','Irrigation');
  AAdd('Reconciliationanalysis','Domestic','Domestic');
  AAdd('Reconciliationanalysis','Number','Number');
  AAdd('Reconciliationanalysis','Number','Number');

  AAdd('PointGrid','ChannelNrs','Channel nrs');
  AAdd('PointGrid','KFactors','K factors');
  AAdd('PointGrid','HeadDifference','Aquifer Head Difference');
  AAdd('PointGrid','AquiferFlow','Aquifer Flow');
  AAdd('PointGrid','NodeInflow','Down-stream Node Inflow');
  AAdd('PointGrid','RiverDepth','River Depth');
  AAdd('PointGrid','Elevation','Elevation');
  AAdd('PointGrid','Discharge','Discharge');
  AAdd('MonthGrid','Diversion','Diversion (m3/s)');
  AAdd('MonthGrid','ReturnFlow','Return flow (m3/s)');
  AAdd('MonthGrid','Consumption','Consumption (m3/s)');
  AAdd('MonthGrid','TOTALS','TOTALS (million m3/a)');
  AAdd('MonthGrid','CalendarMonth','Calendar month names');
  AAdd('MonthGrid','DaysInMonth','Days in month');
  AAdd('MonthGrid','Average','Average');
  AAdd('MonthGrid','Total','Total');

  AAdd('MonthGrid','Year','Year');
  AAdd('MonthGrid','Average','Average');
  AAdd('MonthGrid','ChannelNo','Channel'#13#10'   No.');
  AAdd('MonthGrid','Comply','Comply');
  AAdd('MonthGrid','Category','Category');
  AAdd('MonthGrid','SupplyVolume','Supply Volume (as % of total requirement)');
  AAdd('MonthGrid','DeficitVolume','Deficit Volume (as % of total requirement)');
  AAdd('MonthGrid','AreaNo','Area'#13#10' No.');
  AAdd('MonthGrid','ComplianceChecks','Compliance checks');
  AAdd('MonthGrid','SupplyVolume','Supply Volume (as % of total requirement)');
  AAdd('MonthGrid','DeficitVolume','Deficit Volume (as % of total requirement)');
  AAdd('MonthGrid','TotalArea','Total'#13#10'area');
  AAdd('MonthGrid','IndividualChannel','Individual'#13#10'channels');

  AAdd('WaterMonthGrid','WaterSupply','Monthly water supply distribution factors');
  AAdd('WaterMonthGrid','TargetDraft','Monthly target draft');
  AAdd('PowerMonthGrid','EnergyDemand','Monthly energy demand distribution factors');
  AAdd('PowerMonthGrid','MonthlyEnergy','Monthly energy demand (MW-continuous)');

  AAdd('ChartCaption','DeficitEvents','Number of deficit events (non-inclusive)');
  AAdd('ChartCaption','DeficitDuration','Deficit duration (months)');
  AAdd('ChartCaption','DeficitEventsInclusive','Number of deficit events');
  AAdd('ChartCaption','Month','Month');
  AAdd('ChartCaption','RiverineMonthlyReference','Riverine Monthly Reference ');
  AAdd('ChartCaption','RiverineMonthlyWaterUsage','Riverine Monthly Water Usage ');
  AAdd('ChartCaption','MonthlyWaterUsage','Monthly Water Usage ');

  AAdd('GridCaption','MonthlyReference','Monthly Reference ');

  AAdd('StringGrid','ZoneName','Zone Name');
  AAdd('StringGrid','Penalty1','Penalty Structure 1');
  AAdd('StringGrid','Penalty2','Penalty Structure 2');
  AAdd('StringGrid','Penalty3','Penalty Structure 3');
  AAdd('StringGrid','DownZone1','Draw Down Zone 1');
  AAdd('StringGrid','DownZone2','Draw Down Zone 2');
  AAdd('GeomGrid','Elevation','Elevation (masl)');
  AAdd('GeomGrid','Volume','Volume (m³x10^6)');
  AAdd('GeomGrid','Surface','Surface Area (km²)');
  AAdd('GeomGrid','DrawDown1','Draw Down 1');
  AAdd('GeomGrid','DrawDown2','Draw Down 2');
  AAdd('GeomGrid','Zone','Zone');

  AAdd('PropotionGrid','Channel','Channel');
  AAdd('PropotionGrid','Category','Category');
  AAdd('PropotionGrid','Scenarios','Scenarios');
  AAdd('PropotionGrid','Number','Number');
  AAdd('PropotionGrid','Name','Name');
  AAdd('PropotionGrid','Description','Description');
  AAdd('PropotionGrid','Channel1','Channel 1');
  AAdd('PropotionGrid','Channel2','Channel 2');
  AAdd('PropotionGrid','Channel3','Channel 3');
  AAdd('PropotionGrid','Channel4','Channel 4');
  AAdd('PropotionGrid','Industrial','Industrial');
  AAdd('PropotionGrid','Irrigation','Irrigation');
  AAdd('PropotionGrid','Domestic','Domestic');

  AAdd('Message','SpecifiedDemand','Demand file used in Specified Demand feature ');
  AAdd('Message','DoesNotExist',' does not exist.');
  AAdd('Message','NotImported',' has not yet been imported.');
  AAdd('Message','DemandFiles','Demand files do not have the same start year.');
  AAdd('Message','Demand','Demand file  ');
  AAdd('Message','ContainsNoData',' does not exist or contains no data.');
  AAdd('Message','NumberOfYears','Years in analysis is Less that the number of years in ');
  AAdd('Message','HydrologySequence','Hydrology sequence files which is ');
  AAdd('Message','YearsInAnalysis','Years in analysis is greater that the number of years in ');
  AAdd('Message','SequenceFiles','Hydrology sequence files which is ');
  AAdd('Message','AnalysisIsGreater','Years in analysis is greater that the number of years in ');
  AAdd('Message','DemandSequenceFiles','Demand sequence files which is ');
  
end;

end.

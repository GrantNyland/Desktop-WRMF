//
//  UNIT      : Contains language text.
//  AUTHOR    : Grant Nyland (PDNA)
//  DATE      : 2002/01/23
//  COPYRIGHT : Copyright © 2003 DWAF
//
unit ULanguageText_ENG_FileAgentMessages;

interface

type TTextItemAddFunction = procedure (AContext, AConstant, AText: string) of object;

procedure LoadLanguageText(AAdd: TTextItemAddFunction);
procedure LoadLanguageText2(AAdd: TTextItemAddFunction);
procedure LoadLanguageText3(AAdd: TTextItemAddFunction);
procedure LoadLanguageText4(AAdd: TTextItemAddFunction);
procedure LoadLanguageText5(AAdd: TTextItemAddFunction);
procedure LoadLanguageText6(AAdd: TTextItemAddFunction);
procedure LoadLanguageText7(AAdd: TTextItemAddFunction);
Procedure LoadLanguageText8(AAdd: TTextItemAddFunction);
Procedure LoadLanguageText9(AAdd: TTextItemAddFunction);
Procedure LoadLanguageTextt9(AAdd: TTextItemAddFunction);
procedure LoadLanguageText11(AAdd: TTextItemAddFunction);

implementation

Procedure LoadLanguageText11(AAdd: TTextItemAddFunction);
const OPNAME = 'LoadLanguageText11';
begin

  AAdd('TFileMIMMAgent','strReadingStarted','Started validating file (%s) as file Mimm.dat');
  AAdd('TFileMIMMAgent','strFileNoExist','File (%s)  does not exist. Loading file failed.');
  AAdd('TFileMIMMAgent','strReadingCompleted','Validating of file (%s) as file Mimm.dat completed successfully.');
  AAdd('TFileMIMMAgent','strWritingStarted','Started Writing file (%s) as file Mimm.dat');
  AAdd('TFileMIMMAgent','strWritingCompleted','Writing of file (%s) as file Mimm.dat completed successfully.');
  AAdd('TFileMiMMAgent','strNodeNumberErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Mine Sub-Model Number)');
  AAdd('TFileMiMMAgent','strMineNameErr','Error: Line No:(%d) is not valid.Column %d should contain an string that represents (Mine name).');
  AAdd('TFileMIMMAgent','strOpenCastCountErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Associated Salt Washoff number)');
  AAdd('TFileMIMMAgent','strUndegroundCountErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Number of underground mines (maximum = 10))');
  AAdd('TFileMIMMAgent','strSlurryDumpCountErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Number of discard/slurry ponds (maximum = 10))');
  AAdd('TFileMIMMAgent','strRiverChannelNumberErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (River outflow channel number)');
  AAdd('TFileMIMMAgent','strPCDChannelNumberErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Central pollution dam inflow channel number)');
  AAdd('TFileMIMMAgent','strPanEvaporationErr','Error: Line No:(%d) is not valid.Column %d to %d contains a float that represents (Monthly evaporation data (MM))');
  AAdd('TFileMIMMAgent','strLakeEvaporationErr','Error: Line No:(%d) is not valid.Column %d to %d contains a float that represents (Monthly pan evaporation conversion factor)');
  AAdd('TFileMIMMAgent','strRainfallFileNameErr','Error: Line No:(%d) is not valid.Column %d should contain an string that represents (Rainfall file name).');
  AAdd('TFileMIMMAgent','strRainfallMAPErr','Error: Line No:(%d) is not valid.Column %d should contain a float that represents(Mean annual precipitation)');
  AAdd('TFileMIMMAgent','strBeneficiationPlantAreaErr','Error: Line No:(%d) is not valid.Column %d should contain a float that represents (Area of benificiation plant)');
  AAdd('TFileMIMMAgent','strBeneficiationRunOffFactorErr','Error: Line No:(%d) is not valid.Column %d should contain a float that represents (Runoff factor for plant area)');
  AAdd('TFileMIMMAgent','strSaltsBuildUpRatesErr','Error: Line No:(%d) is not valid.Column %d should contain a float that represents (Salt build-up rate of plant area)');
  AAdd('TFileMIMMAgent','strSaltsWashoffEfficiencyFactorErr','Error: Line No:(%d) is not valid.Column %d should contain a float that represents (Salt washoff efficiency calibration factor)');
  AAdd('TFileMIMMAgent','strIniSaltStoreErr','Error: Line No:(%d) is not valid.Column %d should contain a float that represents (Initial salt store – plant area)');
  AAdd('TFileMIMMAgent','strGTHNoOfPointsErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Number of point to define growth in benificiation plant area)');
  AAdd('TFileMIMMAgent','strGTHInterpolationMethodErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Interpolation option (1) = linear, (2) = exponential)');
  AAdd('TFileMIMMAgent','strGTHYearDataPointErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Year data points)');
  AAdd('TFileMIMMAgent','strPitNameErr','Error: Line No:(%d) is not valid.Column %d should contain an string that represents (Opencast pit name)');
  AAdd('TFileMIMMAgent','strCoalReserveAreaErr','Error: Line No:(%d) is not valid.Column %d should contain a float that represents(Area of coal reserves)');
  AAdd('TFileMIMMAgent','strWorkingsAreaErr','Error: Line No:(%d) is not valid.Column %d should contain a float that represents (Area of workings)');
  AAdd('TFileMIMMAgent','strDisturbedWorkingsAreaErr','Error: Line No:(%d) is not valid.Column %d should contain a float that represents (Disturbed workings area)');
  AAdd('TFileMIMMAgent','strDisturbedAreaErr','Error: Line No:(%d) is not valid.Column %d should contain a float that represents (Disturbed area)');
  AAdd('TFileMIMMAgent','strWaterSurfaceEvapAreaErr','Error: Line No:(%d) is not valid.Column %d should contain a float that represents (Evaporation area, open water surface in pit)');
  AAdd('TFileMIMMAgent','strDisturbedWorkingsAreaRunOffErr','Error: Line No:(%d) is not valid.Column %d should contain a float that represents (Runoff factor of disturbed workings area )');
  AAdd('TFileMIMMAgent','strWorkingAreaRechargeFactorErr','Error: Line No:(%d) is not valid.Column %d to %d contains a float that represents (Recharge factor disturbed rehabilitated area)');
  AAdd('TFileMIMMAgent','strDisturbedRechargeFactorErr','Error: Line No:(%d) is not valid.Column %d to %d contains a float that represents (Recharge factor disturbed workings area )');
  AAdd('TFileMIMMAgent','strDecantVolumeErr','Error: Line No:(%d) is not valid.Column %d should contain a float that represents (Spoils storage tank volume where decant occurs)');
  AAdd('TFileMIMMAgent','strSeepageVolumeErr','Error: Line No:(%d) is not valid.Column %d should contain a float that represents (Spoils storage tank volume)');
  AAdd('TFileMIMMAgent','strAnalysisStartVolumeErr','Error: Line No:(%d) is not valid.Column %d should contain a float that represents (Initial volume in spoils storage tank)');
  AAdd('TFileMIMMAgent','strAbstractToEvapErr','Error: Line No:(%d) is not valid.Column %d should contain a float that represents (Portion of abstraction to evaporation)');
  AAdd('TFileMIMMAgent','strAbstrctToRiverErr','Error: Line No:(%d) is not valid.Column %d should contain a float that represents (Portion of abstraction to river)');
  AAdd('TFileMIMMAgent','strFAbstrctToCPDErr','Error: Line No:(%d) is not valid.Column %d should contain a float that represents (Portion of abstraction to Central Pollution Dams)');
  AAdd('TFileMIMMAgent','strFAbstrctMonthTimeSeriesFileErr','Error: Line No:(%d) is not valid.Column %d should contain an string that represents (Abstraction monthly time series file)');
  AAdd('TFileMIMMAgent','strMaximumSeepageRateErr','Error: Line No:(%d) is not valid.Column %d should contain a float that represents (Maximum seepage flow rate from spoils tank)');
  AAdd('TFileMIMMAgent','strSeepageExponentErr','Error: Line No:(%d) is not valid.Column %d should contain a float that represents (Exponent for seepage equation of spoils tank)');
  AAdd('TFileMIMMAgent','strPCDSurfaceAreaErr','Error: Line No:(%d) is not valid.Column %d should contain a float that represents (Opencast pit pollution control dam surface area)');
  AAdd('TFileMIMMAgent','strPCDStorageCapacityErr','Error: Line No:(%d) is not valid.Column %d should contain a float that represents (Opencast pit pollution control dam capacity)');
  AAdd('TFileMIMMAgent','strPCDAnalysisStartVolumeErr','Error: Line No:(%d) is not valid.Column %d should contain a float that represents (Opencast pit pollution control dam Initial storage volume)');
  AAdd('TFileMIMMAgent','strIniConcentrationErr','Error: Line No:(%d) is not valid.Column %d should contain a float that represents (Opencast pit pollution control dam initial concentration)');
  AAdd('TFileMIMMAgent','strStdDeviationErr','Error: Line No:(%d) is not valid.Column %d should contain a float that represents (Standard deviation for load from workings area)');
  AAdd('TFileMIMMAgent','strUnderGroundSectionNameErr','Error: Line No:(%d) is not valid.Column %d should contain an string that represents (Underground mine name)');
  AAdd('TFileMIMMAgent','strChannelNumberToUGDamErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Underground mine storage inflow channel number)');
  AAdd('TFileMIMMAgent','strUpstreamCatchmentAreaErr','Error: Line No:(%d) is not valid.Column %d should contain a float that represents (Underground mine upstream catchment area)');
  AAdd('TFileMIMMAgent','strBoardPillarCatchmentAreaErr','Error: Line No:(%d) is not valid.Column %d should contain a float that represents (Board and pillar mine underground area)');
  AAdd('TFileMIMMAgent','strHighExtractionCatchmentAreaErr','Error: Line No:(%d) is not valid.Column %d should contain a float that represents (High extraction mine area)');
  AAdd('TFileMIMMAgent','strHighExtractionAreaRunoffFactorErr','Error: Line No:(%d) is not valid.Column %d should contain a float that represents (Runoff factor for High extraction area)');
  AAdd('TFileMIMMAgent','strUpstreamRunoffPortionErr','Error: Line No:(%d) is not valid.Column %d to %d contains a float that represents (Portion of upstream area runoff that recharges the underground)');
  AAdd('TFileMIMMAgent','strBoardAndPilarRechargeFactorErr','Error: Line No:(%d) is not valid.Column %d to %d contains a float that represents (Underground recharge factor for board and pillar mining area)');
  AAdd('TFileMIMMAgent','strHighExtractionRechargeFactorErr','Error: Line No:(%d) is not valid.Column %d to %d contains a float that represents (Underground recharge factor for high extraction)');
  AAdd('TFileMIMMAgent','strDumpNameErr','Error: Line No:(%d) is not valid.Column %d should contain an string that represents (Slurry pond name)');
  AAdd('TFileMIMMAgent','strDumpSurfaceAreaErr','Error: Line No:(%d) is not valid.Column %d should contain a float that represents (Slurry pond surface area)');
  AAdd('TFileMIMMAgent','strRunoffFactorToPCDErr','Error: Line No:(%d) is not valid.Column %d should contain a float that represents (Slurry pond runoff factor)');
  AAdd('TFileMIMMAgent','strSeepageSplitFactorErr','Error: Line No:(%d) is not valid.Column %d should contain a float that represents (Factor to split flow from slurry pond to river)');
  AAdd('TFileMIMMAgent','strSaltConcentrationErr','Error: Line No:(%d) is not valid.Column %d should contain a float that represents (Salt concentration for river flow mg/l)');
  AAdd('TFileMIMMAgent','strRechargeFactorErr','Error: Line No:(%d) is not valid.Column %d to %d contains a float that represents (Slurry pond recharge factor (flow to control dam)');
  AAdd('TFileMIMMAgent','strReadingCompleted','Validating of file (%s) as file Mimm.dat completed successfully.');
  AAdd('TFileMIMMAgent','strWritingStarted','Started Writing file (%s) as file Mimm.dat');
  AAdd('TFileMIMMAgent','strWritingCompleted','Writing of file (%s) as file Mimm.dat completed successfully.');

  AAdd('TFileMIMMDatabaseAgent','strReadStarted','Started updating Mimm.dat file data.');
  AAdd('TFileMIMMDatabaseAgent','strNoDataReturned','There is no data for file type Mimm.dat in the database.');
  AAdd('TFileMIMMDatabaseAgent','strReadEnded','Updating Mimm.dat data completed successfully');
  AAdd('TFileMIMMDatabaseAgent','strWriteStarted','Started writing Mimm.dat file data to database.');
  AAdd('TFileMIMMDatabaseAgent','strWriteEnded','Writing Mimm.dat file data to database completed successfully.');

end;

Procedure LoadLanguageTextt9(AAdd: TTextItemAddFunction);
const OPNAME = 'LoadLanguageTextt9';
begin

  AAdd('TAbstractWrpmDatabaseAgent','strDeleteModelData','Deleting data from table (%s)');
  AAdd('TAbstractWrpmDatabaseAgent','strClearModelDataInDatabaseEnded','Completed deleting model file data from the database successfully');
  AAdd('TAbstractWrpmDatabaseAgent','strClearModelDataInDatabaseStarted','Started deleting model file data from the database');

end;

Procedure LoadLanguageText9(AAdd: TTextItemAddFunction);
const OPNAME = 'LoadLanguageText9';
begin

  // UFileSaltWashOffAgent Messages
  AAdd('TFileSaltWashOffAgent','strReadingStarted','Started validating file (%s) as file Misw.dat');
  AAdd('TFileSaltWashOffAgent','strFileNoExist','File (%s)  does not exist. Loading file failed.');
  AAdd('TFileSaltWashOffAgent','strReadingCompleted','Validating of file (%s) as file Misw.dat completed successfully.');
  AAdd('TFileSaltWashOffAgent','strWritingStarted','Started Writing file (%s) as file Misw.dat');
  AAdd('TFileSaltWashOffAgent','strWritingCompleted','Writing of file (%s) as file Misw.dat completed successfully.');

  AAdd('TFileSaltWashOffDatabaseAgent','strReadStarted','Started updating Misw.dat file data.');
  AAdd('TFileSaltWashOffDatabaseAgent','strNoDataReturned','There is no data for file type Misw.dat in the database.');
  AAdd('TFileSaltWashOffDatabaseAgent','strReadEnded','Updating Misw.dat data completed successfully');
  AAdd('TFileSaltWashOffDatabaseAgent','strWriteStarted','Started writing Misw.dat file data to database.');
  AAdd('TFileSaltWashOffDatabaseAgent','strWriteEnded','Writing Misw.dat file data to database completed successfully.');

end;
//Curtail CUR.DAT FileAgentMessages LoadLanguage Procedure Messages
Procedure LoadLanguageText8(AAdd: TTextItemAddFunction);
const OPNAME = 'LoadLanguageText8';
begin

  AAdd('TFileCurtailAgent','strReadingCompleted','Validating of file (%s) as file Cur.dat completed successfully.');
  AAdd('TFileCurtailAgent','strReadingStarted','Started validating file (%s) as file Cur.dat');
  AAdd('TFileCurtailAgent','strFileNoExist','File (%s)  does not exist. Loading file failed.');
  AAdd('TFileCurtailAgent','strNumberOfChannelErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Number Of Channels).');
  AAdd('TFileCurtailAgent','strChannelNumberErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Channel Number to be Restricted).');
  AAdd('TFileCurtailAgent','strFReservoirNumberErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Reservior Number).');
  AAdd('TFileCurtailAgent','strDecisionMonthErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Restriction Month).');
  AAdd('TFileCurtailAgent','strStartMonthErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Month After).');
  AAdd('TFileCurtailAgent','strReservoirElevationErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Reservior Elevation Restriction).');
  AAdd('TFileCurtailAgent','strMultiplicationRestrictionErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Multiplication Restriction Factors).');
  AAdd('TFileCurtailAgent','strFReservoirElevationErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Reservior Elevation Restriction).');
  AAdd('TFileCurtailAgent','strCurtailStructureErr','File (%s) has less than 11 lines. F01.dat file must have at least 11 lines.');
  AAdd('TFileCurtailAgent','strCurtailStructureErrB','File (%s) has less than 12 lines which are required for version 6.1 onwards.');
  AAdd('TFileCurtailAgent','strReadingCompleted','Validating of file (%s) as file Cur.dat completed successfully.');
  AAdd('TFileCurtailAgent','strWritingStarted','Started Writing file (%s) as file CUR.dat');
  AAdd('TFileCurtailAgent','strWritingCompleted','Writing of file (%s) as file CUR.dat completed successfully.');

  AAdd('TFileCurtailDatabaseAgent','strNoDataReturned','There is no data for file type Curtailment in the database.');
  AAdd('TFileCurtailDatabaseAgent','strReadEnded','Updating Curtailment data completed successfully');
  AAdd('TFileCurtailDatabaseAgent','strReadStarted','Started updating Curtailment file data.');
  AAdd('TFileCurtailDatabaseAgent','strWriteEnded','Writing Curtailment file data to database completed successfully.');
  AAdd('TFileCurtailDatabaseAgent','strWriteStarted','Started writing CUR.DAT file data to database.');

end;

procedure LoadLanguageText(AAdd: TTextItemAddFunction);
const OPNAME = 'LoadLanguageText';
begin

  AAdd('TFile04Agent','strReadingStarted','Started validating file (%s) as file F04.dat');
  AAdd('TFile04Agent','strF04StructureErr','File (%s)  has less than 4 lines. F04.dat file must have at least 4 lines.');
  AAdd('TFile04Agent','strFileIncomplete','Reading of file (%s) as file F04.dat did not complete successfully.');
  AAdd('TFile04Agent','strFileNoExist','File (%s)  does not exist. Loading file failed.');

  AAdd('TFile04Agent','strChannelNumErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer  that represents (Channel number limited by control structure ).');
  AAdd('TFile04Agent','strUpStreamReservoirNumErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Upstream reservoir number for constrained flow channel (0 if same as u/s node)).');
  AAdd('TFile04Agent','strDownStreamReservoirNumrErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer  that represents (Downstream reservoir number for constrained flow channel(0 if same as d/s node)');
  AAdd('TFile04Agent','strPointsElevationNumErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Number of points in elevation/discharge curve(type 4, 5, 7) (max = 10))');
  AAdd('TFile04Agent','strFSillElevationErr','Error: Line No:(%d) is not valid.Column %d to %d contains a float that represents(Elevation of sill (m))');
  AAdd('TFile04Agent','strGateHeightErr','Error: Line No:(%d) is not valid.Column %d to %d contains a float that represents( Maximum height of gate or stop logs).');
  AAdd('TFile04Agent','strStructureTypeErr','Error: Line No:(%d) is not valid.Column %d to %d contains a string that( represents Structure type).');
  AAdd('TFile04Agent','strDischargeCoefficientErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (Length of control structure (type 2, 3) or maximum specified channel flow (type 6)');
  AAdd('TFile04Agent','strControlStructureLengthtErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float  that represents (Length of control structure (type 2, 3) or maximum specified channel flow (type 6)');
  AAdd('TFile04Agent','strElevationsErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents(Elevation (m) at various points)');
  AAdd('TFile04Agent','strDischargeErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents(Discharge (m3/s) corresponding to the elevations given in DISEL)');
  AAdd('TFile04Agent','strChannelNumbersErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents(Channel Numbers)');
  AAdd('TFile04Agent','strKFactorsErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents("K" Factors)');
  AAdd('TFile04Agent','strHeadDifferencesErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents(HeadD ifferences)');
  AAdd('TFile04Agent','strAquiferFlowsErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents(Aquifer Flows)');
  AAdd('TFile04Agent','strDownStreamNodeInflowsErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents(DownStream Node Inflows)');
  AAdd('TFile04Agent','strRiverDepthsErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents(River Depths)');
  AAdd('TFile04Agent','strPumpingHeadsErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents(Pumping Heads)');
  AAdd('TFile04Agent','strPumpingDischargesErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents(Pumping Discharges)');

  AAdd('TFile04Agent','strElevationDifferencesErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents(Elevation Differences)');
  AAdd('TFile04Agent','strMonthlyAverageInflowsErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents(Monthly Average Inflows)');
  AAdd('TFile04Agent','strMonthlyAverageDivertedFlowErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents(Monthly Average Diverted Flow)');

  AAdd('TFile04Agent','strControlStructureCountErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer  that represents (Number of control structures ).');
  AAdd('TFile04Agent','strFlowDiversionErr','Error: Line No:(%d) is not valid.Column %d to %d contains a float that represents(Flow Diversion)');
  AAdd('TFile04Agent','strMaxControlStructureCountErr','Error: Line No:(%d) is not valid.Column %d to %d contains an integer that represents (Number of Control Structures not more than 30 ).');
  AAdd('TFile04Agent','strMaxPointsElevationNumErr','Error: Line No:(%d) is not valid.Column %d to %d contains an integer that represents(Elevation of sill (m) - not greater than 10).');
  AAdd('TFile04Agent','strMinControlStructureCountErr','Error: Line No:(%d) is not valid.Column %d to %d contains an integer that represents (Number of Control Structures not less than 1 ).');
  AAdd('TFile04Agent','strReadingCompleted','Validating of file (%s) as file F04.dat completed successfully.');
  AAdd('TFile04Agent','strReadingStarted','Started validating file (%s) as file F04.dat');
  AAdd('TFile04Agent','strWritingCompleted','Writing of file (%s) as file F04.dat completed successfully.');
  AAdd('TFile04Agent','strWritingStarted','Started Writing file (%s) as file F04.dat');
  AAdd('TFile04DatabaseAgent','strNoDataReturned','There is no data for file type F04 in the database.');
  AAdd('TFile04DatabaseAgent','strReadEnded','Updating F04 data completed successfully');
  AAdd('TFile04DatabaseAgent','strReadStarted','Started updating F04 file data.');
  AAdd('TFile04DatabaseAgent','strWriteEnded','Writing F04 file data to database completed successfully.');
  AAdd('TFile04DatabaseAgent','strWriteStarted','Started writing F04 file data to database.');

  AAdd('TFile05Agent','strBalanceReferenceErr','Error: Line No:(%d) is not valid.Column %d to %d contains a float that represents( Balancing reference (1, 2 or 3)).');
  AAdd('TFile05Agent','strBalancingPolicyErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer .');
  AAdd('TFile05Agent','strBalancingVariableErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents (Balancing variable (1 = elev, 2 = vol).');
  AAdd('TFile05Agent','strBottomOfReservoirErr','Error: Line No:(%d) is not valid.Column %d to %d contains a float that represents(the bottom of reservoir).');
  AAdd('TFile05Agent','strFullSupplyAllocationErr','Error: Line No:(%d) is not valid.Column %d to %d contains a float that represents(Full supply used with allocation procedure(Usually = 0)).');
  AAdd('TFile05Agent','strDeadStorageLevelErr','Error: Line No:(%d) is not valid.Column %d to %d contains a float that represents(the dead storage level).');
  AAdd('TFile05Agent','stResLevelrErr','Error: Line No:(%d) is not valid.Column %d to %d contains a float that represents(Month end reservoir levels (m) which define the intermediate zonal boundaries).');
  AAdd('TFile05Agent','strF05ZoneErr','File (%s)  has less than 3 lines. F05.dat file must have at least 3 lines.');
  AAdd('TFile05Agent','strFileIncomplete','Reading of file (%s) as file F05.dat did not complete successfully.');
  AAdd('TFile05Agent','strFileNoExist','File (%s)  does not exist. Loading file failed.');
  AAdd('TFile05Agent','strFullSupplyLevelErr','Error: Line No:(%d) is not valid.Column %d to %d contains a float that represents(the full supply level).');
  AAdd('TFile05Agent','strMaxBalancingPolicyErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer  not greater than 3).');
  AAdd('TFile05Agent','strMaxBalancingVariableErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents (Balancing Variable  not greater than 2 ).');
  AAdd('TFile05Agent','strMaxPenaltyStructureCountErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents (Number of penalty structures not more than 5 ).');
  AAdd('TFile05Agent','strMaxStatusIndicatorErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer  that represents Status Indicator not greater than 1).');

  AAdd('TFile05Agent','strMaxStorageZoneCountErr','Error: Line No:(%d) is not valid.Column %d to %d contains an integer that represents (Number of Control Structures not more than 10 ).');
  AAdd('TFile05Agent','strMinBalancingPolicyErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer  not less than 1).');
  AAdd('TFile05Agent','strMinBalancingVariableErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents (Balancing Variable  not less than 1 ).');
  AAdd('TFile05Agent','strMinPenaltyStructureCountErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents (Number of penalty structures not less than 1 ).');
  AAdd('TFile05Agent','strMinStatusIndicatorErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer  that represents Status Indicator not less than 0).');
  AAdd('TFile05Agent','strSelectionStatusErr','Warning: Reservoir Number %d (%s), selection status has been set to does not exist');
  AAdd('TFile05Agent','strPlottingOptionErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer  that represents (Reservoir volume plotting option (0 or 1).');
  AAdd('TFile05Agent','strMinStorageZoneCountErr','Error: Line No:(%d) is not valid.Column %d to %d contains an integer that represents (Number of Control Structures not less than 1 ).');
  AAdd('TFile05Agent','strNodeNumberStorageErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents (Node number of reservoir with storage).');
  AAdd('TFile05Agent','strResLevelErr','Error: Line No:(%d) is not valid.Column %d to %d contains a float that represents(Month end reservoir levels (m) which define zonal boundaries).');
  AAdd('TFile05Agent','strPenaltyStructureCountErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer  that represents (Number of penalty structures (max = 5) ).');
  AAdd('TFile05Agent','strReadingCompleted','Validating of file (%s) as file F05.dat completed successfully.');
  AAdd('TFile05Agent','strReadingStarted','Started validating file (%s) as file F05.dat');
  AAdd('TFile05Agent','strReservoirNodeNumberErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents (Node number of reservoir).');
  AAdd('TFile05Agent','strReservoirPriorityErr','Error: Line No:(%d) is not valid.Column %d to %d contains a float that represents(Reservoir Priority).');
  AAdd('TFile05Agent','strrMaxStrategyIndicatorErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents (Balancing strategy indicator  not greater than 3 ).');
  AAdd('TFile05Agent','strrMinStrategyIndicatorErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents (Balancing strategy indicator  not less than 1 ).');
  AAdd('TFile05Agent','strStorageZoneCountErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer  that represents (Number of storage zones in each reservoir (max = 10) ).');
  AAdd('TFile05Agent','strStrategyIndicatorErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents (Balancing strategy indicator (1, 2 or 3 ) ).');
  AAdd('TFile05Agent','strWritingCompleted','Writing of file (%s) as file F05.dat completed successfully.');
  AAdd('TFile05Agent','strWritingStarted','Started Writing file (%s) as file F05.dat');
  AAdd('TFile05Agent','strZoneLowerBoundaryErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer  that represents (Storage zone with rule curve as lower boundary ).');
  AAdd('TFile05Agent','strZoneNametErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain a string that represents (Name of reservoir zone ).');
  AAdd('TFile05DatabaseAgent','strNoDataReturned','There is no data for file type F05 in the database.');
  AAdd('TFile05DatabaseAgent','strReadEnded','Updating F05 data completed successfully');
  AAdd('TFile05DatabaseAgent','strReadStarted','Started updating F05 file data.');
  AAdd('TFile05DatabaseAgent','strWriteEnded','Writing F05 file data to database completed successfully.');
  AAdd('TFile05DatabaseAgent','strWriteStarted','Started writing F05 file data to database.');

  AAdd('TFile06DatabaseAgent','strReadStarted','Started updating F06 file data.');
  AAdd('TFile06DatabaseAgent','strNoDataReturned','There is no data for file type F06 in the database.');
  AAdd('TFile06DatabaseAgent','strReadEnded','Updating F06 data completed successfully');
  AAdd('TFile06DatabaseAgent','strWriteStarted','Started writing F06 file data to database.');
  AAdd('TFile06DatabaseAgent','strWriteEnded','Writing F06 file data to database completed successfully.');
  AAdd('TFile06Agent','strReadingStarted','Started validating file (%s) as file F06.dat');
  AAdd('TFile06Agent','strFileNoExist','File (%s)  does not exist. Loading file failed.');
  AAdd('TFile06Agent','strReadingCompleted','Validating of file (%s) as file F06.dat completed successfully.');
  AAdd('TFile06Agent','strWritingStarted','Started Writing file (%s) as file F06.dat');
  AAdd('TFile06Agent','strWritingCompleted','Writing of file (%s) as file F06.dat completed successfully.');
  AAdd('TFile06Agent','strReservoirNodeNumberErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Reservoir node number).');
  AAdd('TFile06Agent','strInitialLevelErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float  that represents (Initial water level (m)');

  AAdd('TFile07Agent','strReadingStarted','Started validating file (%s) as file F07.dat');
  AAdd('TFile07Agent','strFileNoExist','File (%s)  does not exist. Loading file failed.');
  AAdd('TFile07Agent','strReadingCompleted','Validating of file (%s) as file F07.dat completed successfully.');
  AAdd('TFile07Agent','strWritingStarted','Started Writing file (%s) as file F07.dat');
  AAdd('TFile07Agent','strWritingCompleted','Writing of file (%s) as file F07.dat completed successfully.');
  AAdd('TFile07Agent','strPowerPlantNumberErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Channel number of power plant).');
  AAdd('TFile07Agent','strMaxCapGeneratorErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float  that represents (Maximum capacity of generator (MW))');
  AAdd('TFile07Agent','strMaxCapTurbineErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float  that represents (Maximum capacity of turbine at design head and maximum flow (MW))');
  AAdd('TFile07Agent','strEfficiencyErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float  that represents (Combined efficiency at design head and maximum flow (Proportion))');
  AAdd('TFile07Agent','strPowerPlantStatusErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a integer  that represents (Power plant status (0 - 1))');
  AAdd('TFile07Agent','strHeadLossErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float  that represents (Head loss through plant (m))');
  AAdd('TFile07Agent','strDesignHeadErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float  that represents (Design head (m))');
  AAdd('TFile07Agent','strMaxNetHeadErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float  that represents (Maximum net head (m))');
  AAdd('TFile07Agent','strMinNetHeadErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float  that represents (Minimum net head (m))');
  AAdd('TFile07Agent','strPointsCountErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a integer  that represents (Number of points in efficiency/net head factor curve)');
  AAdd('TFile07Agent','strEfficiencyFactorErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float  that represents (Efficiency factor (proportion) at each point)');
  AAdd('TFile07Agent','strNetHeadFactorErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float  that represents (Net head factors each point)');
  AAdd('TFile07Agent','strTailWaterPointsCountErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer  that represents (Number of points in tailwater function (max = 10))');
  AAdd('TFile07Agent','strTailWaterTypeCodeErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer  that represents (Tailwater type code (1 or 2))');
  AAdd('TFile07Agent','strDischargeErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float  that represents (Discharge in m3/s (for NTWT = 1) or downstream level in m (for NTWT = 2))');
  AAdd('TFile07Agent','strTailWaterElevationErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float  that represents (Tailwater elevation (m) corresponding to F values given in line 6)');
  AAdd('TFile07DatabaseAgent','strReadStarted','Started updating F07 file data.');
  AAdd('TFile07DatabaseAgent','strNoDataReturned','There is no data for file type F07 in the database.');
  AAdd('TFile07DatabaseAgent','strReadEnded','Updating F07 data completed successfully');
  AAdd('TFile07DatabaseAgent','strWriteStarted','Started writing F07 file data to database.');
  AAdd('TFile07DatabaseAgent','strWriteEnded','Writing F07 file data to database completed successfully.');

  AAdd('TFile08Agent','strReadingStarted','Started validating file (%s) as file F08.dat');
  AAdd('TFile08Agent','strFileNoExist','File (%s)  does not exist. Loading file failed.');
  AAdd('TFile08Agent','strReadingCompleted','Validating of file (%s) as file F08.dat completed successfully.');
  AAdd('TFile08Agent','strWritingStarted','Started Writing file (%s) as file F08.dat');
  AAdd('TFile08Agent','strWritingCompleted','Writing of file (%s) as file F08.dat completed successfully.');
  AAdd('TFile08Agent','strPowerChannelNumberErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Channel number of power channel).');
  AAdd('TFile08Agent','strMinMonthlyEnergyGenerationErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (Minimum monthly energy generation (MW-continuous))');
  AAdd('TFile08Agent','strMinMonthlyPowerReleaseErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (Minimum monthly power channel release (m3/s))');
  AAdd('TFile08DatabaseAgent','strReadStarted','Started updating F08 file data.');
  AAdd('TFile08DatabaseAgent','strNoDataReturned','There is no data for file type F08 in the database.');
  AAdd('TFile08DatabaseAgent','strReadEnded','Updating F08 data completed successfully');
  AAdd('TFile08DatabaseAgent','strWriteStarted','Started writing F08 file data to database.');
  AAdd('TFile08DatabaseAgent','strWriteEnded','Writing F08 file data to database completed successfully.');

  AAdd('TFile09DatabaseAgent','strReadStarted','Started updating F09 file data.');
  AAdd('TFile09DatabaseAgent','strNoDataReturned','There is no data for file type F09 in the database.');
  AAdd('TFile09DatabaseAgent','strReadEnded','Updating F09 data completed successfully');
  AAdd('TFile09DatabaseAgent','strWriteStarted','Started writing F09 file data to database.');
  AAdd('TFile09DatabaseAgent','strWriteEnded','Writing F09 file data to database completed successfully.');
  AAdd('TFile09Agent','strReadingStarted','Started validating file (%s) as file F09.dat');
  AAdd('TFile09Agent','strFileNoExist','File (%s)  does not exist. Loading file failed.');
  AAdd('TFile09Agent','strReadingCompleted','Validating of file (%s) as file F09.dat completed successfully.');
  AAdd('TFile09Agent','strWritingStarted','Started Writing file (%s) as file F09.dat');
  AAdd('TFile09Agent','strWritingCompleted','Writing of file (%s) as file F09.dat completed successfully.');
  AAdd('TFile09Agent','strIrrigationNodeNumberErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Node number for irrigation area).');
  AAdd('TFile09Agent','strDiversionFlowErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float  that represents (Monthly diversion flow (m3/s)');
  AAdd('TFile09Agent','strReturnFlowErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float  that represents (Monthly return flow (m3/s)');

  AAdd('TFile10Agent','strReadingStarted','Started validating file (%s) as file F10.dat');
  AAdd('TFile10Agent','strFileNoExist','File (%s)  does not exist. Loading file failed.');
  AAdd('TFile10Agent','strReadingCompleted','Validating of file (%s) as file F10.dat completed successfully.');
  AAdd('TFile10Agent','strWritingStarted','Started Writing file (%s) as file F10.dat');
  AAdd('TFile10Agent','strWritingCompleted','Writing of file (%s) as file F10.dat completed successfully.');
  AAdd('TFile10Agent','strDivChannelNumberErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Channel number of non-irrigated diversion channel).');
  AAdd('TFile10Agent','strDiversionDemandFactorErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float  that represents (Monthly diversion demand (m3/s) if DIVTYP = 1, or Table of flow ranges if DIVTYP = 2(see F03.DAT, line 5a)');
  AAdd('TFile10Agent','strNaturalInflowFactorErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (DIVTYP = 1, or the actual diverted flow (m3/s), corresponding to each flow value given in DIVQ if DIVTYP = 2(see F03.DAT, line 5a)).');
  AAdd('TFile10Agent','strNodeNumberErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Node number of the controlling reservoir).');
  AAdd('TFile10Agent','strResLevelsCountErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Number of reservoir storage water levels).');
  AAdd('TFile10Agent','strRefFlowsCountErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Number of reference flows).');
  AAdd('TFile10Agent','strResDiversionLevelsErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float  that represents (The levels at the controlling reservoir of which diversion efficiencies will be given at each flow value)');
  AAdd('TFile10Agent','strFlowValueErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float  that represents (Flow value for which the diversion proportions are given)');
  AAdd('TFile10Agent','strDivertedFlowErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float  that represents (The proportion of flow diverted for flow DIVF and reservoir elevation DIVL)');
  AAdd('TFile10DatabaseAgent','strReadStarted','Started updating F10 file data.');
  AAdd('TFile10DatabaseAgent','strNoDataReturned','There is no data for file type F10 in the database.');
  AAdd('TFile10DatabaseAgent','strUnknownChannelType','Unknown channel type found in the database.');
  AAdd('TFile10DatabaseAgent','strReadEnded','Updating F10 data completed successfully');
  AAdd('TFile10DatabaseAgent','strWriteStarted','Started writing F10 file data to database.');
  AAdd('TFile10DatabaseAgent','strWriteEnded','Writing F10 file data to database completed successfully.');

  LoadLanguageText2(AAdd);
  LoadLanguageText3(AAdd);
  LoadLanguageText4(AAdd);
  LoadLanguageText5(AAdd);
  LoadLanguageText6(AAdd);
  LoadLanguageText7(AAdd);
  //Curtail CUR.DAT FileAgentMessages LoadLanguage Procedure
  LoadLanguageText8(AAdd);
  //Salt Wash Off MISW.DAT FileAgentMessages LoadLanguage Procedure
  LoadLanguageText9(AAdd);
  LoadLanguageTextt9(AAdd);
  //Mine MIMM*.Dat FileAgentMessages LoadLanguage Procedure
  LoadLanguageText11(AAdd);

end;

procedure LoadLanguageText2(AAdd: TTextItemAddFunction);
const OPNAME = 'LoadLanguageText2';
begin
  AAdd('TFile11Agent','strReadingStarted','Started validating file (%s) as file F11.dat');
  AAdd('TFile11Agent','strFileNoExist','File (%s)  does not exist. Loading file failed.');
  AAdd('TFile11Agent','strReadingCompleted','Validating of file (%s) as file F11.dat completed successfully.');
  AAdd('TFile11Agent','strWritingStarted','Started Writing file (%s) as file F11.dat');
  AAdd('TFile11Agent','strWritingCompleted','Writing of file (%s) as file F11.dat completed successfully.');
  AAdd('TFile11Agent','strMinFlowChannelNumberErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Channel number of minimum flow channel).');
  AAdd('TFile11Agent','strMinFlowChannelErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (Monthly minimum flow demand (m3/s)');
  AAdd('TFile11Agent','strLossChannelNumberErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Channel number of loss channel).');
  AAdd('TFile11Agent','strDivertedChannelErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (The diverted flow corresponding to each of the total flows).');
  AAdd('TFile11Agent','strLossChannelErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (Monthly water loss as proportion of total inflows)');
  AAdd('TFile11DatabaseAgent','strReadStarted','Started updating F11 file data.');
  AAdd('TFile11DatabaseAgent','strNoDataReturned','There is no data for file type F11 in the database.');
  AAdd('TFile11DatabaseAgent','strUnknownChannelType','Unknown channel type found in the database.');
  AAdd('TFile11DatabaseAgent','strReadEnded','Updating F11 data completed successfully');
  AAdd('TFile11DatabaseAgent','strWriteStarted','Started writing F11 file data to database.');
  AAdd('TFile11DatabaseAgent','strWriteEnded','Writing F11 file data to database completed successfully.');
  AAdd('TFile12DatabaseAgent','strReadStarted','Started updating F12 file data.');
  AAdd('TFile12DatabaseAgent','strNoDataReturned','There is no data for file type F12 in the database.');
  AAdd('TFile12DatabaseAgent','strReadEnded','Updating F12 data completed successfully');
  AAdd('TFile12DatabaseAgent','strWriteStarted','Started writing F12 file data to database.');
  AAdd('TFile12DatabaseAgent','strWriteEnded','Writing F12 file data to database completed successfully.');

  AAdd('TFile12Agent','strReadingStarted','Started validating file (%s) as file F12.dat');
  AAdd('TFile12Agent','strFileNoExist','File (%s)  does not exist. Loading file failed.');
  AAdd('TFile12Agent','strReadingCompleted','Validating of file (%s) as file F12.dat completed successfully.');
  AAdd('TFile12Agent','strWritingStarted','Started Writing file (%s) as file F12.dat');
  AAdd('TFile12Agent','strWritingCompleted','Writing of file (%s) as file F12.dat completed successfully.');
  AAdd('TFile12Agent','strIrrigationNodeNumberErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Channel number of min-max channel).');
  AAdd('TFile12Agent','strInitialLevelErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (Monthly flow constraints (m3/s) from max to min');
  AAdd('TFile12Agent','strMinMaxNoArcCountErr','Error: Line No:(%d) is not valid.Channel number (%d) does not have number of flow constraints as defined in the penalty structure. Check F03.dat for this channel.');
  AAdd('TFile13DatabaseAgent','strReadStarted','Started updating F13 file data.');
  AAdd('TFile13DatabaseAgent','strNoDataReturned','There is no data for file type F13 in the database.');
  AAdd('TFile13DatabaseAgent','strReadEnded','Updating F13 data completed successfully');
  AAdd('TFile13DatabaseAgent','strWriteStarted','Started writing F13 file data to database.');
  AAdd('TFile13DatabaseAgent','strWriteEnded','Writing F13 file data to database completed successfully.');
  AAdd('TFile13Agent','strReadingStarted','Started validating file (%s) as file F13.dat');
  AAdd('TFile13Agent','strFileNoExist','File (%s)  does not exist. Loading file failed.');
  AAdd('TFile13Agent','strReadingCompleted','Validating of file (%s) as file F13.dat completed successfully.');
  AAdd('TFile13Agent','strWritingStarted','Started Writing file (%s) as file F13.dat');
  AAdd('TFile13Agent','strWritingCompleted','Writing of file (%s) as file F13.dat completed successfully.');
  AAdd('TFile13Agent','strPowerControlChannelNumberErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Channel number of master control channel).');
  AAdd('TFile13Agent','strDistributionPatternErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Number of distribution patterns for this channel ).');
  AAdd('TFile13Agent','strPowerControlErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (Minimum monthly energy demand (MW-continuous)');
  AAdd('TFile13Agent','strStorageFractionErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (Sub-system storage fraction (between 0.0 and 1.0) below which this pattern is active');
  AAdd('TFile13Agent','strWaterSupplyChannelNumberErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Channel number of water supply control channel).');
  AAdd('TFile13Agent','strPowerControlChannelNameErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an string that represents (Channel name).');
  AAdd('TFile13Agent','strWaterSupplyErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (Monthly water supply distribution factors)');

  AAdd('TFile14Agent','strReadingStarted','Started validating file (%s) as file F14.dat');
  AAdd('TFile14Agent','strFileNoExist','File (%s)  does not exist. Loading file failed.');
  AAdd('TFile14Agent','strReadingCompleted','Validating of file (%s) as file F14.dat completed successfully.');
  AAdd('TFile14Agent','strWritingStarted','Started Writing file (%s) as file F14.dat');
  AAdd('TFile14Agent','strWritingCompleted','Writing of file (%s) as file F14.dat completed successfully.');
  AAdd('TFile14Agent','strMonthlyStructureCountErr','Number of IFR release control channels (%d) based on monthly reference flow values is more than 50.');
  AAdd('TFile14Agent','strControlStructCountErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Number of IFR release control structures (max = 10)).');
  AAdd('TFile14Agent','strIFRChannelNumberErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (IFR release channel number (one channel per structure)');
  AAdd('TFile14Agent','strReferenceNodeCountErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Number of reference nodes (max = 10)).');
  AAdd('TFile14Agent','strLagInMonthsCountErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Lag in months (integer values of -12 to 12))');
  AAdd('TFile14Agent','strPointsCountErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Number of points in "inflow vs. release" relationship (max = 30))');
  AAdd('TFile14Agent','strRefNodeNumberErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Reference node numbers used for "inflow" (repeated NIFRRI times in the same row)).');
  AAdd('TFile14Agent','strInflowVariableErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (Inflow variable in table defining the "inflow vs. release" relationship in m3/s.)');
  AAdd('TFile14Agent','strReleaseVariableErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (IFR release variable for each month of the year that corresponds to the FIFRIN (K) inflow variable in m3/s. )');
  AAdd('TFile14Agent','strReferenceTypeErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents Reference inflow option(1 = Developed, 2 = Natural)');
  AAdd('TFile14Agent','strControlChannelCountErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Number of water use channels to be included with the reconciliation analysis (  200)).');
  AAdd('TFile14Agent','strClassCountErr','Number of Type 2 IFR classes (  10)');
  AAdd('TFile14Agent','strCalculateOptionErr','Type 2 IFR calculation option (Zero = Option 1, Value other than zero = Option 2)');
  AAdd('TFile14Agent','strRefAnnualNodeNumberErr','Reference node numbers used for annual reference inflows (repeated NAREFN times in the same line)');
  AAdd('TFile14Agent','strAnualInflowErr','Annual reference inflow value for Type 2 IFR class (1 value, in million m3)');
  AAdd('TFile14Agent','strMonthlyReleaseErr','IFR release for each month of the year for Type 2 IFR class(12 values in the same line, in m3/s)');
  AAdd('TFile14Agent','strAnnualStructureCountErr','Number of IFR release control channels (%d) based on annual reference flow values is more than 20.');

  //AAdd('TFile14Agent','strReferenceChannelsCountErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents Number of IFR release control channels based on anual reference inflow values.');
  AAdd('TFile14DatabaseAgent','strReadStarted','Started updating F14 file data.');
  AAdd('TFile14DatabaseAgent','strNoDataReturned','There is no data for file type F14 in the database.');
  AAdd('TFile14DatabaseAgent','strReadEnded','Updating F14 data completed successfully');
  AAdd('TFile14DatabaseAgent','strWriteStarted','Started writing F14 file data to database.');
  AAdd('TFile14DatabaseAgent','strWriteEnded','Writing F14 file data to database completed successfully.');

  AAdd('TFile16Agent','strReadingStarted','Started validating file (%s) as file F16.dat');
  AAdd('TFile16Agent','strFileNoExist','File (%s)  does not exist. Loading file failed.');
  AAdd('TFile16Agent','strReadingCompleted','Validating of file (%s) as file F16.dat completed successfully.');
  AAdd('TFile16Agent','strWritingStarted','Started Writing file (%s) as file F16.dat');
  AAdd('TFile16Agent','strWritingCompleted','Writing of file (%s) as file F16.dat completed successfully.');

  AAdd('TFile16Agent','strUserTypeCountErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Number of water user type defined for the reconciliation analysis (max = 10)).');
  AAdd('TFile16Agent','strUserTypeCountValueErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Number of water user type defined for the reconciliation analysis (1 <= Value <= 10)).');
  AAdd('TFile16Agent','strRiskCriteriaCountErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Number of risk criteria levels for water users (max = 10)).');
  AAdd('TFile16Agent','strRiskCriteriaCountValueErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Number of risk criteria levels for water users (1 <= Value <= 10)).');
  AAdd('TFile16Agent','strScenarioCountErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Number of scenarios in reconciliation analysis (max = 10)).');
  AAdd('TFile16Agent','strScenarioCountValueErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Number of scenarios in reconciliation analysis (1 <= Value <= 10)).');
  AAdd('TFile16Agent','strRecurrenceIntervalErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (Recurrence interval ossociated with each risk criteria level.)');
  AAdd('TFile16Agent','strDemandPortionValueErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (Portion of total water demand allocated to each risk criteria level.)');
  AAdd('TFile16Agent','strChannelsCountErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Number of water use channels to be included with the reconciliation analysis (max = 200)).');
  AAdd('TFile16Agent','strChannelsCountValueErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Number of water use channels to be included with the reconciliation analysis (1 <= Value <= 200)).');
  AAdd('TFile16Agent','strChannelNumberErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Channel number.)');
  AAdd('TFile16Agent','strWaterUserTypeErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Specification of water user type.');
  AAdd('TFile16Agent','strImposedDemandPortionValueErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (Portion of demand to be imposed on system for water use channel, under each scenario.)');
  AAdd('TFile16DatabaseAgent','strReadStarted','Started updating F16 file data.');
  AAdd('TFile16DatabaseAgent','strNoDataReturned','There is no data for file type F16 in the database.');
  AAdd('TFile16DatabaseAgent','strReadEnded','Updating F16 data completed successfully');
  AAdd('TFile16DatabaseAgent','strWriteStarted','Started writing F16 file data to database.');
  AAdd('TFile16DatabaseAgent','strWriteEnded','Writing F16 file data to database completed successfully.');

  AAdd('TFile17DatabaseAgent','strReadStarted','Started updating F17 file data.');
  AAdd('TFile17DatabaseAgent','strNoDataReturned','There is no data for file type F17 in the database.');
  AAdd('TFile17DatabaseAgent','strReadEnded','Updating F17 data completed successfully');
  AAdd('TFile17DatabaseAgent','strWriteStarted','Started writing F17 file data to database.');
  AAdd('TFile17DatabaseAgent','strWriteEnded','Writing F17 file data to database completed successfully.');
  AAdd('TFile17Agent','strReadingStarted','Started validating file (%s) as file F17.dat');
  AAdd('TFile17Agent','strFileNoExist','File (%s)  does not exist. Loading file failed.');
  AAdd('TFile17Agent','strReadingCompleted','Validating of file (%s) as file F17.dat completed successfully.');
  AAdd('TFile17Agent','strWritingStarted','Started Writing file (%s) as file F17.dat');
  AAdd('TFile17Agent','strWritingCompleted','Writing of file (%s) as file F17.dat completed successfully.');

  AAdd('TFile17Agent','strIdentifier','An error occured in determining the irrigation block identifier');
  AAdd('TFile17Agent','strBlockNumber','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Irrigation block number)');
  AAdd('TFile17Agent','strBlockName','Error: Line No:(%d) is not valid.Column %d to %d should contain a string that represents (Irrigation block name)');
  AAdd('TFile17Agent','strBlockNameValErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a string that represents (Irrigation block name) and does not contain more than 20 characters');
  AAdd('TFile17Agent','strMaxWaterAllocation','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (Maximum water allocation (million m3/a))');
  AAdd('TFile17Agent','strFileNameValErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a string that represents (Name of data file with specified irrigation abstractions) and does not contain more than 255 characters');
  AAdd('TFile17Agent','strNodeNumber','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Reference number of associated node with catchment hydrology inflows)');
  AAdd('TFile17Agent','strCanalTransportLoss','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (Proportion of flow loss in transport canal from water source)');
  AAdd('TFile17Agent','strEfficiencyFactor','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (Irrigation efficiency factor)');
  AAdd('TFile17Agent','strReturnFlowFactor','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (Return flow factor)');
  AAdd('TFile17Agent','strUpperZoneReturnFlow','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (Proportion of return flow from upper zone)');
  AAdd('TFile17Agent','strLowerZoneReturnFlow','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (Proportion of return flow from lower zone)');
  AAdd('TFile17Agent','strReturnFlowLoss','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (Return flow portion of transport canal losses)');
  AAdd('TFile17Agent','strUpperZoneSoilMoistureCapacity','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (Soil moisture storage capacity for the upper zone (mm))');
  AAdd('TFile17Agent','strLowerZoneSoilMoistureCapacity','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (Soil moisture storage capacity for the lower zone (mm))');
  AAdd('TFile17Agent','strUpperZoneSoilMoistureTarget','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (Soil moisture storage target for the upper zone (mm))');
  AAdd('TFile17Agent','strInitialSoilMoistureStorage','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (Initial soil moisture storage (mm))');
  AAdd('TFile17Agent','strRainfallFactor','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (Monthly effective rainfall factors (start with October))');
  AAdd('TFile17Agent','strPanEvaporation','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (Monthly mean pan evaporation (mm))');
  AAdd('TFile17Agent','strAPanConvFactor','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (Monthly mean A-pan conversion factors)');
  AAdd('TFile17Agent','strNumberOfCropTypes','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (Number of crop types ( <= 20))');
  AAdd('TFile17Agent','strMonthlyWaterUse','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (Monthly water usage factor for crop type)');
  AAdd('TFile17Agent','strPercAreaUnderCropType','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (Percentage area under crop type)');
  AAdd('TFile17Agent','strRainAboveRainFactorSpecValue','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (Rainfall above which effective rainfall factor is equal to specified value, RRERF(I), (mm))');
  AAdd('TFile17Agent','strRainBelowRainFactor','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (Rainfall below which effective rainfall factor is equal to 1.0 (mm))');
  AAdd('TFile17Agent','strRainCatchmentScalingFactor','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (Rainfall catchment scaling factor)');
  AAdd('TFile17Agent','strAllocatedIrrigationArea','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (Allocated irrigation area (km2))');

  AAdd('TFile18DatabaseAgent','strReadStarted','Started updating F18 file data.');
  AAdd('TFile18DatabaseAgent','strNoDataReturned','There is no data for file type F18 in the database.');
  AAdd('TFile18DatabaseAgent','strReadEnded','Updating F18 data completed successfully');
  AAdd('TFile18DatabaseAgent','strWriteStarted','Started writing F18 file data to database.');
  AAdd('TFile18DatabaseAgent','strWriteEnded','Writing F18 file data to database completed successfully.');
  AAdd('TFile18Agent','strReadingStarted','Started validating file (%s) as file F18.dat');
  AAdd('TFile18Agent','strFileNoExist','File (%s)  does not exist. Loading file failed.');
  AAdd('TFile18Agent','strReadingCompleted','Validating of file (%s) as file F18.dat completed successfully.');
  AAdd('TFile18Agent','strWritingStarted','Started Writing file (%s) as file F18.dat');
  AAdd('TFile18Agent','strWritingCompleted','Writing of file (%s) as file F18.dat completed successfully.');

  AAdd('TFile18Agent','strIdentifier','An error occured in determining the wetland identifier');
  AAdd('TFile18Agent','strNodeNumber','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Wetland node number)');
  AAdd('TFile18Agent','strWetlandName','Error: Line No:(%d) is not valid.Column %d to %d should contain a string that represents (Wetland name)');
  AAdd('TFile18Agent','strWetlandNameValErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a string that represents (Wetland name) and does not contain more than 255 characters');
  AAdd('TFile18Agent','strStorageVolume','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (Nominal wetland storage volume (million m3))');
  AAdd('TFile18Agent','strInflowProportion','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (Proportion of flows above WLUFC that will enter wetland through the wetland inflow channel (0 <= WLUFP <= 1))');
  AAdd('TFile18Agent','strOutflowProportion','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (Proportion of volume above WLNS that will exit wetland through the wetland outflow channel (0 <= WLNSP <= 1))');
  AAdd('TFile18Agent','strUpstreamThreshold','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (Flow threshold in upstream flow channel above which inflow to wetland occurs (m3/s))');

  AAdd('TFile19DatabaseAgent','strReadStarted','Started updating F19 file data.');
  AAdd('TFile19DatabaseAgent','strNoDataReturned','There is no data for file type F19 in the database.');
  AAdd('TFile19DatabaseAgent','strReadEnded','Updating F19 data completed successfully');
  AAdd('TFile19DatabaseAgent','strWriteStarted','Started writing F19 file data to database.');
  AAdd('TFile19DatabaseAgent','strWriteEnded','Writing F19 file data to database completed successfully.');
  AAdd('TFile19Agent','strReadingStarted','Started validating file (%s) as file F19.dat');
  AAdd('TFile19Agent','strFileNoExist','File (%s)  does not exist. Loading file failed.');
  AAdd('TFile19Agent','strReadingCompleted','Validating of file (%s) as file F19.dat completed successfully.');
  AAdd('TFile19Agent','strWritingStarted','Started Writing file (%s) as file F19.dat');
  AAdd('TFile19Agent','strWritingCompleted','Writing of file (%s) as file F19.dat completed successfully.');

  AAdd('TFile19Agent','strIdentifier','An error occured in determining the demand centre identifier');
  AAdd('TFile19Agent','strNodeNumber','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Demand centre node number)');
  AAdd('TFile19Agent','strName','Error: Line No:(%d) is not valid.Column %d to %d should contain a string that represents (Demand centre name)');
  AAdd('TFile19Agent','strNameValErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a string that represents (Demand centre name)');
  AAdd('TFile19Agent','strNodeRefNumber','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Reference number of associated node with catchment hydrology inflows)');
  AAdd('TFile19Agent','strReturnFlowFactor','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (Long-term monthly average return flow factor)');
  AAdd('TFile19Agent','strEvaporation','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (Long-term monthly average of evaporation - rainfall-values (mm))');
  AAdd('TFile19Agent','strDeviationFactor','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (Standard deviation factor)');
  AAdd('TFile19Agent','strRoutingConstant','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (Routing constant)');
  AAdd('TFile19Agent','strRainfallScalingFactor','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (Rainfall scaling factor)');
  AAdd('TFile19Agent','strReturnFlowChannelNo','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Return flow channel number)');
  AAdd('TFile19Agent','strTotalReturnFlow','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (Portion of total return flow to this return flow channel)');
  AAdd('TFile19Agent','strFlowDiversion','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (Portion of flow in this return flow channel diverted to reclamation plant for reuse)');
  AAdd('TFile19Agent','strTotalFlowLost','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (Portion of total flow volume lost from reclamation plant)');
  AAdd('TFile19Agent','strEvapoTranspiration','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (Monthly potential evapo-transpiration (mm))');

  AAdd('TFile20Agent','strReadingStarted','Started validating file (%s) as file F20.dat');
  AAdd('TFile20Agent','strFileNoExist','File (%s)  does not exist. Loading file failed.');
  AAdd('TFile20Agent','strReadingCompleted','Validating of file (%s) as file F20.dat completed successfully.');
  AAdd('TFile20Agent','strWritingStarted','Started Writing file (%s) as file F20.dat');
  AAdd('TFile20Agent','strWritingCompleted','Writing of file (%s) as file F20.dat completed successfully.');
  AAdd('TFile20Agent','strSFRCountErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Number of SFR catchment portions defined).');
  AAdd('TFile20Agent','strSFRInflowNodeNumberErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Associated system network inflow node number).');
  AAdd('TFile20Agent','strSFRCoveredAreaErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a real number that represents (Area covered by the SFR catchment portion (km2)).');
  AAdd('TFile20Agent','strSFRUnitRunoffFileNameErr','Error: Line No:(%d) is not valid.Column %d to %d should contain text that represents (Name and directory of the monthly unit runoff time-series data file for the SFR catchment portion).');
  AAdd('TFile20Agent','strSFRSoilMoistureFileNameErr','Error: Line No:(%d) is not valid.Column %d to %d should contain text that represents (Name and directory of the monthly total soil moisture (S) time series data file for the SFR catchment portion).');

  AAdd('TFile20DatabaseAgent','strReadStarted','Started updating F20 file data.');
  AAdd('TFile20DatabaseAgent','strNoDataReturned','There is no data for file type F20 in the database.');
  AAdd('TFile20DatabaseAgent','strReadEnded','Updating F20 data completed successfully');
  AAdd('TFile20DatabaseAgent','strWriteStarted','Started writing F20 file data to database.');
  AAdd('TFile20DatabaseAgent','strWriteEnded','Writing F20 file data to database completed successfully.');
//------------------------------------------------------------------------------------------------------------------
end;

procedure LoadLanguageText3(AAdd: TTextItemAddFunction);
const OPNAME = 'LoadLanguageText3';
begin
  AAdd('TDataFileObjects','strDuplicateReservoirNumber','Error:  Reservoir/Node Number:(%s) is duplicated in file F02.dat');
  AAdd('TDataFileObjects','strReservoirNoPhysical','Error:  Reservoir Number:(%d) has no physical characteristics defined in file F05.dat (Line type 2)');
  AAdd('TDataFileObjects','strReservoirNoLevel','Error:  Reservoir Number:(%d) has no month end levels defined in file F05.dat (Line type 3)');
  AAdd('TDataFileObjects','strReservoirNoInitialLevel','Error:  Reservoir Number:(%d) has no initial water levels defined in file F06.dat (Line type 3)');
  AAdd('TDataFileObjects','strPhysicalNoReservoir','Error:  Reservoir Number:(%d) has physical characteristics defined in file F05.dat but no reservoir defined in F02.dat');
  AAdd('TDataFileObjects','strLevelNoReservoir','Error:  Reservoir Number:(%d) has month end levels defined in file F05.dat but no reservoir defined in F02.dat');
  AAdd('TDataFileObjects','strInitialLevelNoReservoir','Error:  Reservoir Number:(%d) has initial water levels defined in file F06.dat but no reservoir defined in F02.dat');
  AAdd('TDataFileObjects','strDuplicateChannelNumber','Error:  Channel Number:(%s) is duplicated in file F03.dat');
  AAdd('TDataFileObjects','strOutputChannelNotFound','Error:  Output Channel Number:(%s) is not defined in file F03.dat');
  AAdd('TDataFileObjects','strDuplicateOutputChannelNumber','Error:  Output Channel Number:(%s) is duplicated in file F03.dat');
  AAdd('TDataFileObjects','strMasterControlNoDetails','Error:  Master Control Channel Number:(%s) has no Monthly water supply distribution factors defined in file F13.dat (Line type 2)');
  AAdd('TDataFileObjects','strDetailsNoMasterControl','Error:  Master Control Channel Number:(%s) has Monthly water supply distribution factors defined in file F13.dat but no channel defined in F03.dat');
  AAdd('TDataFileObjects','strIrrigationChannelNoDetails','Error:  Irrigation Node Number:(%s) has no details in file F09.dat');
  AAdd('TDataFileObjects','strDetailsNoIrrigationChannel','Error:  Irrigation Node Number:(%s) has details in file F09.dat but is not defined in F03.dat');
  AAdd('TDataFileObjects','strDiversionChannelNoDetails','Error:  Diversion Channel Number:(%s) has no details in file F10.dat');
  AAdd('TDataFileObjects','strDetailsNoDiversionChannel','Error:  Diversion Channel Number:(%s) has details in file F10.dat but is not defined in F03.dat');
  AAdd('TDataFileObjects','strMinFlowChannelNoDetails','Error:  Minimum Flow Channel Number:(%s) has no details in file F11.dat');
  AAdd('TDataFileObjects','strDetailsNoMinFlowChannel','Error:  Minimum Flow Channel Number:(%s) has details in file F11.dat but is not defined in F03.dat');
  AAdd('TDataFileObjects','strLossChannelNoDetails','Error:  Loss Channel Number:(%s) has no details in file F11.dat');
  AAdd('TDataFileObjects','strDetailsNoLossChannel','Error:  Loss Channel Number:(%s) has details in file F11.dat but is not defined in F03.dat');
  AAdd('TDataFileObjects','strMinMaxChannelNoDetails','Error:  Min-Max Channel Number:(%s) has no details in file F12.dat');
  AAdd('TDataFileObjects','strDetailsNoMinMaxChannel','Error:  Min-Max Channel Number:(%s) has details in file F12.dat but is not defined in F03.dat');

  AAdd('TDataFileObjects','strDBFChannelNotMasterControl','Error:Channel NO:(%s) is not a Master control channel. *DBF.dat should only contain Master control channels.');
  AAdd('TDataFileObjects','strPMPChannelNotPumping','Error:Channel NO:(%s) is not a pumping channel. *PMP.dat should only contain Pumping channels.');
  AAdd('TDataFileObjects','strPURChannelMasterControl','Error:Channel NO:(%s) is a Master control channel. *PUR.dat can contain any channel except for Master control and Pumping channels.');
  AAdd('TDataFileObjects','strPURChannelNotPumping','Error:Channel NO:(%s) is a pumping channel. *PUR.dat can contain any channel except for Master control and Pumping channels.');

  AAdd('TDataFileObjects','strCurtailedChannelNumberNoExist','Error:  Curtailment channel number (%s) is not defined in F03.dat');
  AAdd('TDataFileObjects','strRestrictedChannelNumberNoExist','Error:  Drought restricted channel number (%s) is not defined in F03.dat');
  AAdd('TDataFileObjects','strRestrictedReservoirNumberNoExist','Error:  Drought restricted reservoir number (%s) is not defined in F02.dat');
  AAdd('TDataFileObjects','strTargetSystemYield','Warning:  Target system Yield cannot be higher than Maximum system Yield');
  AAdd('TDataFileObjects','strInvalidArcCountNumber','Error: Channel Number:(%s) has an invalid Penality structure');


  AAdd('TFileGrowthFactorsAgent','strFileNoExist','File (%s)  does not exist. Reading from file failed.');
  AAdd('TFileGrowthFactorsAgent','strReadingStarted','Started validating file (%s) as file GTH.DAT');
  AAdd('TFileGrowthFactorsAgent','strNoDataReturned','There is no data for file (%d)');
  AAdd('TFileGrowthFactorsAgent','strPathNotDosCompatible','File Path/Name (%s) is incompatible with DOS applications. Make sure that any Sub-Directory or File name is not more than 8 characters and the total length is not more than 40 characters.');
  AAdd('TFileGrowthFactorsAgent','strNumberOfYearsErr','Error: Reading Line No: (%d) Number of years for which data is provided in this file is invalid.');
  AAdd('TFileGrowthFactorsAgent','strDemandChannelNumberErr','Error: Reading Line No: (%d) Demand channel number');
  AAdd('TFileGrowthFactorsAgent','strDemandCentresGrowthFactorsErr','Error: Reading Line No: (%d) Growth Factors for each of the Number of years.');
  AAdd('TFileGrowthFactorsAgent','strInvalidNumberOfSupply','Error: Reading Line No: (%d) Number of Supply min-max channel with growth.');
  AAdd('TFileGrowthFactorsAgent','strMinMaxChannelNumWithGrowthrErr','Error: Reading Line No: (%d) Min-max Channel Number with growth.');
  AAdd('TFileGrowthFactorsAgent','strBoundNumOfChannelErr','Error: Reading Line No: (%d) Arc Number of Channel with growth.');
  AAdd('TFileGrowthFactorsAgent','strMinMaxChannelGrowthFactorsErr','Error: Reading Line No: (%d) Growth Factor for each bound with growth for each year of analysis.');
  AAdd('TFileGrowthFactorsAgent','strGaugeNumberErr','Error: Reading Line No: (%d) Gauge Number');
  AAdd('TFileGrowthFactorsAgent','strAFFGrowthFactorsErr','Error: Reading Line No: (%d) Annual growth Factors for afforestation (*.AFF)for each year of analysis.');
  AAdd('TFileGrowthFactorsAgent','strIRRGrowthFactorsErr','Error: Reading Line No: (%d) Annual growth Factors for irrigation (*.IRR)for each year of analysis.');
  AAdd('TFileGrowthFactorsAgent','strURBGrowthFactorsErr','Error: Reading Line No: (%d) Annual growth Factors for urban abstraction files (*.URB)for each year of analysis.');
  AAdd('TFileGrowthFactorsAgent','strReadingCompleted','Annual Growth Factor file (%s) completed successfully.');
  AAdd('TFileGrowthFactorsAgent','strFileIncomplete','Reading Annual Growth Factor file (%s) is incomplete.');
  AAdd('TFileGrowthFactorsAgent','strWritingStarted','Started writing data to file');
  AAdd('TFileGrowthFactorsAgent','strWritingCompleted','Completed Writing to the database');
  AAdd('TFileGrowthFactorslDatabaseAgent','strNoDataReturned','There is no data in the database');
  AAdd('TFileGrowthFactorslDatabaseAgent','strReadStarted','Started Reading Data From Database');
  AAdd('TFileGrowthFactorslDatabaseAgent','strWriteStarted','Started writing data to Database');
  AAdd('TFileGrowthFactorslDatabaseAgent','strWriteEnded','writting to database complete');

  AAdd('TFileDisbenefitAgent','strReadingStarted','Started validating file (%s)');
  AAdd('TFileDisbenefitAgent','strFileNoExist','File (%s)  does not exist. Reading from file failed.');
  AAdd('TFileDisbenefitAgent','strDataYearsErr','Error: Line No:(%d) is not valid.Column(%d) should contain an integer representing number of economic years');
  AAdd('TFileDisbenefitAgent','strChannelNumberErr','Error: Line No:(%d) is not valid.Column(%d) should contain an integer representing demand channel number');
  AAdd('TFileDisbenefitAgent','strYearChannelActiveErr' ,'Error: Line No:(%d) is not valid.Column(%d) should contain an integer representing year disbenefit function active');
  AAdd('TFileDisbenefitAgent','strMonthChannelActiveErr','Error: Line No:(%d) is not valid.Column(%d) should contain an integer representing month disbenefit function active');
  AAdd('TFileDisbenefitAgent','strYearChannelObsoleteErr' ,'Error: Line No:(%d) is not valid.Column(%d) should contain an integer representing year disbenefit function obsolete');
  AAdd('TFileDisbenefitAgent','strMonthChannelObsoleteErr','Error: Line No:(%d) is not valid.Column(%d) should contain an integer representing month disbenefit function obsolete');
  AAdd('TFileDisbenefitAgent','strFunctionXErr','Error: Line No:(%d) is not valid.Column(%d) should contain a float representing disbenefit functionX');
  AAdd('TFileDisbenefitAgent','strFunctionYErr','Error: Line No:(%d) is not valid.Column(%d) should contain a float representing disbenefit functionY');
  AAdd('TFileDisbenefitAgent','strFunctionNonSupplyErr','Error: Line No:(%d) is not valid.Column(%d) should contain a float representing disbenefit function non-supply');
  AAdd('TFileDisbenefitAgent','strFunctionCostErr','Error: Line No:(%d) is not valid.Column(%d) should contain a float representing disbenefit function cost');
  AAdd('TFileDisbenefitAgent','strEscalationRateErr','Error: Line No:(%d) is not valid.Column(%d) should contain an string representing disbenefit escalation rate');
  AAdd('TFileDisbenefitAgent','strWaterQualityConstraintErr','Error: Line No:(%d) is not valid.Column(%d) should contain a float representing Water Quality Constraint');
  AAdd('TFileDisbenefitAgent','strTDSConcentrationErr','Error: Line No:(%d) is not valid.Column(%d) should contain a float representing TDSConcentration ');
  AAdd('TFileDisbenefitAgent','strWQDisbenefitErr','Error: Line No:(%d) is not valid.Column(%d) should contain an integer representing disbenefit escalation rate');
  AAdd('TFileDisbenefitAgent','strReadingCompleted','Disbenefit Escalation rate file (%s) completed successfully.');
  AAdd('TFileDisbenefitAgent','strWritingStarted','Started writing data to file');
  AAdd('TFileDisbenefitAgent','strWritingCompleted','Completed Writing to the database');
  AAdd('TFileDisbenefitDatabaseAgent','strNoDataReturned','There is no data in the database');
  AAdd('TFileDisbenefitDatabaseAgent','strReadStarted','Started Reading Data From Database');
  AAdd('TFileDisbenefitDatabaseAgent','strWriteStarted','Started writing data to Database');
  AAdd('TFileDisbenefitDatabaseAgent','strWriteEnded','Writting to database complete');

  AAdd('TFileReturnFlowChannelAgent','strReadingStarted','Started Reading Return Flow Channel file(%s).');
  AAdd('TFileReturnFlowChannelAgent','strFileNoExist','File (%s)  does not exist. Reading from file failed.');
  AAdd('TFileReturnFlowChannelAgent','strTotalSpecErr','Error Reading Line(%d): Total number of return flow specifications');
  AAdd('TFileReturnFlowChannelAgent','strNoDemandChannelData','Error Reading Line(%d): Demand channel number to which the return flowa are referenced');
  AAdd('TFileReturnFlowChannelAgent','strNoCorrespondingChannelData','Error Reading Line(%d): Number of return flow channel corresponding to the demand channel');
  AAdd('TFileReturnFlowChannelAgent','strGaugeNumberDataErr','Error Reading Line(%d): Rainfall Gauge number');
  AAdd('TFileReturnFlowChannelAgent','strMonthlyAvrgFactorData','Error Reading Line(%d): Long-term Monthly average return flow factor');
  AAdd('TFileReturnFlowChannelAgent','strCalibrationFactorData','Error Reading Line(%d): Calibration factor');
  AAdd('TFileReturnFlowChannelAgent','strMonthlyAvrgNetEvapData','Error Reading Line(%d): Long-term monthly average of (evaporation minus rainfall)');
  AAdd('TFileReturnFlowChannelAgent','strRoutingConstantData','Error Reading Line(%d): Routing Constant');
  AAdd('TFileReturnFlowChannelAgent','strCurtailmentFactorData','Error Reading Line(%d): Curtailment Factor');
  AAdd('TFileReturnFlowChannelAgent','strMultiplicationFactorData','Error Reading Line(%d): Multiplication Factor');
  AAdd('TFileReturnFlowChannelAgent','strMonthlyPotentialEvapData','Error Reading Line(%d): Monthly evaporation/transpiration');
  AAdd('TFileReturnFlowChannelAgent','strAssumedFactorData','Error Reading Line(%d): Corresponding channel/abstraction channel/Assumed return Flow factor');
  AAdd('TFileReturnFlowChannelAgent','strNoDataReturned','File (%s): No data was returned');
  AAdd('TFileReturnFlowChannelAgent','strReadingCompleted','Done Reading Return Flow Channel file (%s)');
  AAdd('TFileReturnFlowChannelAgent','strFileIncomplete','Not done reading Return Flow Channel file (%s)');
  AAdd('TFileReturnFlowChannelAgent','strWritingStarted','Started writing data to Return Flow Channel file');
  AAdd('TFileReturnFlowChannelAgent','strWritingCompleted','Completed Writing to Return Flow Channel file');
  AAdd('TFileReturnFlowChannelAgent','strNoDataReturned','There is no data in the database');
  AAdd('TFileReturnFlowChannelDatabaseAgent','strReadStarted','Started reading return flow channel data from database');
  AAdd('TFileReturnFlowChannelDatabaseAgent','strNoDataReturned','No data was found in the database');
  AAdd('TFileReturnFlowChannelDatabaseAgent','strWriteStarted','Started writting data to database');
  AAdd('TFileReturnFlowChannelDatabaseAgent','strWriteEnded','Done writting data to the database');

  //Daily Diversion files
  AAdd('TFileDailyFlowDataAgent','strReadingStarted','Started validating Daily Diversion file (%s).');
  AAdd('TFileDailyFlowDataAgent','strFileNoExist','File (%s)  does not exist. Loading file failed.');
  AAdd('TFileDailyFlowDataAgent','strNoDataReturned','File (%s) is Empty');
  AAdd('TFileDailyFlowDataAgent','strAvgFactorErr','%s: Daily Flow Missing');
  AAdd('TFileDailyFlowDataAgent','strQualityCodeErr','%s: Quality Code Missing');
  AAdd('TFileDailyFlowDataAgent','strDateErr','Error: Line No:(%d) Diversion Date Cannot be null');
  AAdd('TFileDailyFlowDataAgent','strReadingCompleted','Validating of Daily Diversion file (%s) completed successfully.');
  AAdd('TFileDailyFlowDataAgent','strStartEndDate','Daily Data imported from %s to %s.');
  AAdd('TFileDailyFlowDataAgent','strTotalDaysOfMissingFlow','Total Days of missing daily flow data = %d ');
  AAdd('TFileDailyFlowDatabaseAgent','strWriteStarted','Started writing file data to database.');
  AAdd('TFileDailyFlowDatabaseAgent','strWriteEnded','Writing file data to database completed successfully.');

  AAdd('TFileDailyInstreamFlowDataAgent','strReadingStarted','Started validating Daily Instream Flow file (%s).');
  AAdd('TFileDailyInstreamFlowDataAgent','strFileNoExist','File (%s)  does not exist. Loading file failed.');
  AAdd('TFileDailyInstreamFlowDataAgent','strNoDataReturned','File (%s) is Empty');
  AAdd('TFileDailyInstreamFlowDataAgent','strAvgFactorErr','%s: Daily Flow Missing');
  AAdd('TFileDailyInstreamFlowDataAgent','strQualityCodeErr','%s: Quality Code Missing');
  AAdd('TFileDailyInstreamFlowDataAgent','strDateErr','Error: Line No:(%d) Diversion Date Cannot be null');
  AAdd('TFileDailyInstreamFlowDataAgent','strReadingCompleted','Validating of Daily Instream Flow file (%s) completed successfully.');
  AAdd('TFileDailyInstreamFlowDataAgent','strStartEndDate','Instream Flow Data imported from %s to %s.');
  AAdd('TFileDailyInstreamFlowDataAgent','strTotalDaysOfMissingFlow','Total Days of missing daily flow data = %d ');
  AAdd('TFileDailyInstreamFlowDatabaseAgent','strWriteStarted','Started writing file data to database.');
  AAdd('TFileDailyInstreamFlowDatabaseAgent','strWriteEnded','Writing file data to database completed successfully.');

  AAdd('TPlotFileManager','strFileEmptyErr','File (%s) is Empty');
  AAdd('TPlotFileManager','strFileExportStarted','Started Writing file (%s) as file PLT.out');
  AAdd('TPlotFileManager','strFileExportCompleted','Writing of file (%s) as file PLT.out completed successfully.');
  AAdd('TPlotFileManager','strFileValidationStarted','Started validating file (%s) as file PLT.out');
  AAdd('TPlotFileManager','strFileNoExist','File (%s)  does not exist. Loading file failed.');
  AAdd('TPlotFileManager','strFileValidationCompleted','Validating of file (%s) as file PLT.out completed successfully.');
  AAdd('TPlotFileManager','strReservoirCountErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Number of Reservoirs)).');
  AAdd('TPlotFileManager','strSequenceCountErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Number of Sequences)).');
  AAdd('TPlotFileManager','strMonthsCountErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Number of Months)).');
  AAdd('TPlotFileManager','strFileImportStarted','Started writing file data to database.');

  AAdd('TPlotFileManager','strFileEofReservoirErr','File (%s) has reached its end, Reservior not found');
  AAdd('TPlotFileManager','strFileEofChannelErr','File (%s) has reached its end, Channel not found');
  AAdd('TPlotFileManager','strFileEofMasterErr','File (%s) has reached its end, Master not found');
  AAdd('TPlotFileManager','strFileEofTotalErr','File (%s) has reached its end, Total not found');
  AAdd('TPlotFileManager','strFileNoLine2Err','File (%s) has reached its end, Line 2 not found');
  AAdd('TPlotFileManager','strFileResevoirLessThanCountErr','File (%s) has reached its end, There fewer reservoirs than the specified count in line 1.');
  AAdd('TPlotFileManager','strMonthsCountErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Reservoir number)).');
  AAdd('TPlotFileManager','strFileChannelLessThanCountErr','File (%s) has reached its end, There fewer channels than the specified count in line 1.');
  AAdd('TPlotFileManager','strChannelNumberErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Channel number)).');
  AAdd('TPlotFileManager','strFileResevoirVolumeErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an float that represents (Resevoir Volume)).');
  AAdd('TPlotFileManager','strFileChannelFlowErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an float that represents (Channel Flow)).');
  AAdd('TPlotFileManager','strFileMasterFlowErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an float that represents (Master control channel Flow)).');
  AAdd('TPlotFileManager','strFileTotalVolumeErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an float that represents (Total Volume)).');

  AAdd('TFileAllocationChannelControlAgent','strReadingStarted','Started validating Allocation Channel Control file (%s)');
  AAdd('TFileAllocationChannelControlAgent','strReadingCompleted','Validating of Allocation Channel Control file (%s) completed successfully.');
  AAdd('TFileAllocationChannelControlAgent','strWritingStarted','Started Writing Allocation Channel Control file (%s)');
  AAdd('TFileAllocationChannelControlAgent','strWritingCompleted','Writing of Allocation Channel Control file (%s) completed successfully.');
  AAdd('TFileAllocationChannelControlAgent','strPathNotDosCompatible','File Path/Name (%s) is incompatible with DOS applications. Make sure that any Sub-Directory or File name is not more than 8 characters and the total length is not more than 40 characters.');
  AAdd('TFileAllocationChannelControlAgent','strFileNoExist','File (%s)  does not exist. Reading from file failed.');
  AAdd('TFileAllocationChannelControlDatabseAgent','strReadStarted','Started reading Allocation Channel Control data from database.');
  AAdd('TFileAllocationChannelControlDatabseAgent','strReadEnded','Reading Allocation Channel Control data from database completed successfully');
  AAdd('TFileAllocationChannelControlDatabseAgent','strWriteStarted','Started writing Allocation Channel Control file data to database.');
  AAdd('TFileAllocationChannelControlDatabseAgent','strWriteEnded','Writing Allocation Channel Control file data to database completed successfully.');

  AAdd('TFileHydroPowerAllocationControlAgent','strReadingStarted','Started validating Hydro Power Allocation Control file (%s)');
  AAdd('TFileHydroPowerAllocationControlAgent','strReadingCompleted','Validating of Hydro Power Allocation Control file (%s) completed successfully.');
  AAdd('TFileHydroPowerAllocationControlAgent','strWritingStarted','Started Writing file (%s)');
  AAdd('TFileHydroPowerAllocationControlAgent','strWritingCompleted','Writing of file (%s) completed successfully.');
  AAdd('TFileHydroPowerAllocationControlAgent','strPathNotDosCompatible','File Path/Name (%s) is incompatible with DOS applications. Make sure that any Sub-Directory or File name is not more than 8 characters and the total length is not more than 40 characters.');
  AAdd('TFileHydroPowerAllocationControlAgent','strFileNoExist','File (%s)  does not exist. Reading from file failed.');
  AAdd('TFileHydroPowerAllocationControlDatabaseAgent','strReadStarted','Started reading HydroPower Allocation Control data from database.');
  AAdd('TFileHydroPowerAllocationControlDatabaseAgent','strReadEnded','Reading HydroPower Allocation Control data from database completed successfully');
  AAdd('TFileHydroPowerAllocationControlDatabaseAgent','strWriteStarted','Started writing HydroPower Allocation Control file data to database.');
  AAdd('TFileHydroPowerAllocationControlDatabaseAgent','strWriteEnded','Writing HydroPower Allocation Control file data to database completed successfully.');

  AAdd('TFileControlledReleaseStructureAgent','strReadingStarted','Started validating Controlled Release Structure file (%s)');
  AAdd('TFileControlledReleaseStructureAgent','strReadingCompleted','Validating of Controlled Release Structure file (%s) completed successfully.');
  AAdd('TFileControlledReleaseStructureAgent','strWritingStarted','Started Writing Controlled Release Structure file (%s)');
  AAdd('TFileControlledReleaseStructureAgent','strWritingCompleted','Writing of Controlled Release Structure file (%s) completed successfully.');
  AAdd('TFileControlledReleaseStructureAgent','strPathNotDosCompatible','File Path/Name (%s) is incompatible with DOS applications. Make sure that any Sub-Directory or File name is not more than 8 characters and the total length is not more than 40 characters.');
  AAdd('TFileControlledReleaseStructureAgent','strFileNoExist','File (%s)  does not exist. Reading from file failed.');
  AAdd('TFileControlledReleaseStructureDatabaseAgent','strReadStarted','Started reading Controlled Release Structure data from database.');
  AAdd('TFileControlledReleaseStructureDatabaseAgent','strReadEnded','Reading Controlled Release Structure data from database completed successfully');
  AAdd('TFileControlledReleaseStructureDatabaseAgent','strWriteStarted','Started writing Controlled Release Structure file data to database.');
  AAdd('TFileControlledReleaseStructureDatabaseAgent','strWriteEnded','Writing Controlled Release Structure file data to database completed successfully.');


end;
procedure LoadLanguageText4(AAdd: TTextItemAddFunction);
const OPNAME = 'LoadLanguageText4';
begin
  AAdd('TFile02Agent','strUrbanRunoffDefaultedToDrainageScale','Warning: Line No:(%d) Portion of urban runoff entering node is not supplied and it will be replaced by natural runoff entering node.');
  AAdd('TFile02DatabaseAgent','strUrbanRunoffDefaultedToDrainageScale','Warning: Line No:(%d) Portion of urban runoff entering node is not supplied and it will be replaced by natural runoff entering node.');
  AAdd('TFile05Agent','strStatusIndicatorErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents (Status indicator (1 = exists, 0 = does not exist)).');
  AAdd('TFile02Agent','strElevationStorageAndAreaLessMorePoints','Warning: Reservoir Number %d (%s), There are less or more points in the elevation, storage and area relationship than defined.');

  //Daily Diversion files
  AAdd('TFileDailyFlowDataAgent','ReplaceNegativeReferenceFlowValues','There is/are negative value(s) amongst the reference flow values. The value(s) will be replaced by zero(s)');
  AAdd('TFileDailyInstreamFlowDataAgent','ReplaceNegativeDiversionFlowValues','There is/are negative value(s) amongst the diversion flow values. The value(s) will be replaced by zero(s)');
  AAdd('TMonthlyReferenceFlowValidator','ReplaceDataWithoutCode','There is/are value(s) that do not have quality codes. A quality code of 170 will be applied');

   AAdd('TFileTariffCalculationAgent','strReadingStarted','Started validating Tariff Calculation file (%s)');
  AAdd('TFileTariffCalculationAgent','strReadingCompleted','Validating of Tariff Calculation file (%s) completed successfully.');
  AAdd('TFileTariffCalculationAgent','strWritingStarted','Started Writing Tariff Calculation file (%s)');
  AAdd('TFileTariffCalculationAgent','strWritingCompleted','Writing of Tariff Calculation file (%s) completed successfully.');
  AAdd('TFileTariffCalculationAgent','strPathNotDosCompatible','File Path/Name (%s) is incompatible with DOS applications. Make sure that any Sub-Directory or File name is not more than 8 characters and the total length is not more than 40 characters.');
  AAdd('TFileTariffCalculationAgent','strFileNoExist','File (%s)  does not exist. Reading from file failed.');
  AAdd('TFileTariffCalculationDatabseAgent','strReadStarted','Started reading Tariff Calculation data from database.');
  AAdd('TFileTariffCalculationDatabseAgent','strReadEnded','Reading Tariff Calculation data from database completed successfully');
  AAdd('TFileTariffCalculationDatabseAgent','strWriteStarted','Started writing Tariff Calculation file data to database.');
  AAdd('TFileTariffCalculationDatabseAgent','strWriteEnded','Writing Tariff Calculation file data to database completed successfully.');

  AAdd('TFileMonthlyWaterRequirementAgent','strReadingStarted','Started validating Monthly Water Requirement file (%s)');
  AAdd('TFileMonthlyWaterRequirementAgent','strReadingCompleted','Validating of Monthly Water Requirement file (%s) completed successfully.');
  AAdd('TFileMonthlyWaterRequirementAgent','strWritingStarted','Started Writing Monthly Water Requirement file (%s)');
  AAdd('TFileMonthlyWaterRequirementAgent','strWritingCompleted','Writing of Monthly Water Requirement file (%s) completed successfully.');
  AAdd('TFileMonthlyWaterRequirementAgent','strPathNotDosCompatible','File Path/Name (%s) is incompatible with DOS applications. Make sure that any Sub-Directory or File name is not more than 8 characters and the total length is not more than 40 characters.');
  AAdd('TFileMonthlyWaterRequirementAgent','strFileNoExist','File (%s)  does not exist. Reading from file failed.');
  AAdd('TFileMonthlyWaterRequirementDatabaseAgent','strReadStarted','Started reading Monthly Water Requirement data from database.');
  AAdd('TFileMonthlyWaterRequirementDatabaseAgent','strReadEnded','Reading Monthly Water Requirement data from database completed successfully');
  AAdd('TFileMonthlyWaterRequirementDatabaseAgent','strWriteStarted','Started writing Monthly Water Requirement file data to database.');
  AAdd('TFileMonthlyWaterRequirementDatabaseAgent','strWriteEnded','Writing Monthly Water Requirement file data to database completed successfully.');

  AAdd('TFileReclamationPlantAgent','strReadingStarted','Started validating Reclamation Plant file (%s)');
  AAdd('TFileReclamationPlantAgent','strReadingCompleted','Validating of  Reclamation Plantfile (%s) completed successfully.');
  AAdd('TFileReclamationPlantAgent','strWritingStarted','Started Writing  Reclamation Plantfile (%s)');
  AAdd('TFileReclamationPlantAgent','strWritingCompleted','Writing of  Reclamation Plantfile (%s) completed successfully.');
  AAdd('TFileReclamationPlantAgent','strPathNotDosCompatible','File Path/Name (%s) is incompatible with DOS applications. Make sure that any Sub-Directory or File name is not more than 8 characters and the total length is not more than 40 characters.');
  AAdd('TFileReclamationPlantAgent','strFileNoExist','File (%s)  does not exist. Reading from file failed.');
  AAdd('TFileReclamationPlantDatabaseAgent','strReadStarted','Started reading Reclamation Plant data from database.');
  AAdd('TFileReclamationPlantDatabaseAgent','strReadEnded','Reading Reclamation Plant data from database completed successfully');
  AAdd('TFileReclamationPlantDatabaseAgent','strWriteStarted','Started writing Reclamation Plant file data to database.');
  AAdd('TFileReclamationPlantDatabaseAgent','strWriteEnded','Writing Reclamation Plant file data to database completed successfully.');

  AAdd('TIFRDataLoadAgent','strFileNoExist','File (%s)  does not exist.');
  AAdd('TIFRDataLoadAgent','strExceedenceErr','Error: Line No:(%d) is not valid. Column %d should contain an float that represents (Exceedence percentage).');
  AAdd('TIFRDataLoadAgent','strMonthvalueErr','Error: Line No:(%d) is not valid.Column %d should contain a float that represents (IFR month value).');
  AAdd('TIFRDataLoadAgent','strFewColsErr','Error: Line No:(%d) is not valid. There should be 13 columns of data(Exceedence percentage and 12 IFR monthly values.');

  AAdd('TFile03Agent','strGroundwaterCountErr'        ,'Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Number of Groundwater <= 100)).');
  AAdd('TFile03Agent','strMaxGroundwaterErr'          ,'Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Number of wetlands Max 100).');
  AAdd('TFile03Agent','strReferenceNodeNumberNoErr'   ,'Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(node number reference).');
  AAdd('TFile03Agent','strAquiferNodeNumberErr'       ,'Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(aquifer node number).');
  AAdd('TFile03Agent','strAbstractionNodeNumberErr'   ,'Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(abstraction node number).');
  AAdd('TFile03Agent','strCollectionNodeNumberErr'    ,'Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(collection node number).');
  AAdd('TFile03Agent','strBaseflowNodeNumberErr'      ,'Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(base flow node number).');
  AAdd('TFile03Agent','strAquiferInflowChannelNrErr'  ,'Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Aquifer inflow channelNr).');
  AAdd('TFile03Agent','strAquiferInflowPenaltyTypeErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Aquifer inflow PenaltyType).');
  AAdd('TFile03Agent','strAquiferExcessInterflowChannelNrErr'  ,'Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Aquifer excess interflow channelNr).');
  AAdd('TFile03Agent','strAquiferExcessInterflowPenaltyTypeErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Aquifer excess interflow PenaltyType).');
  AAdd('TFile03Agent','strGroundWaterBaseflowChannelNrErr'  ,'Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Groundwater base flow ChannelNr).');
  AAdd('TFile03Agent','strGroundWaterBaseflowPenaltyTypeErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Groundwater base flow PenaltyType).');
  AAdd('TFile03Agent','strAbstractionFromAquiferChannelNrErr'  ,'Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Abstraction from base flow ChannelNr).');
  AAdd('TFile03Agent','strAbstractionFromAquiferPenaltyTypeErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Abstraction from base flow channel penaltyNr).');
  AAdd('TFile03Agent','strAbstractionFromBaseflowChannelNrErr'  ,'Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Abstraction from base flow ChannelNr).');
  AAdd('TFile03Agent','strAbstractionFromBaseflowPenaltyTypeErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Abstraction from base flow channel penaltyNr).');
  AAdd('TFile03Agent','strOutflowToDownstreamAquiferChannelNrErr'  ,'Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Abstraction from base flow ChannelNr).');
  AAdd('TFile03Agent','strOutflowToDownstreamAquiferPenaltyTypeErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Abstraction from base flow channel penaltyNr).');
  AAdd('TFile03Agent','strSurfaceRunoffAndSoilInterflowChannelNrErr'  ,'Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Abstraction from base flow ChannelNr).');
  AAdd('TFile03Agent','strSurfaceRunoffAndSoilInterflowPenaltyTypeErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Abstraction from base flow channel penaltyNr).');

  AAdd('TFile15Agent','strReadingStarted','Started validating file (%s) as file F15.dat');
  AAdd('TFile15Agent','strFileNoExist','File (%s)  does not exist. Loading file failed.');
  AAdd('TFile15Agent','strReadingCompleted','Validating of file (%s) as file F15.dat completed successfully.');
  AAdd('TFile15Agent','strWritingStarted','Started Writing file (%s) as file F15.dat');
  AAdd('TFile15Agent','strWritingCompleted','Writing of file (%s) as file F15.dat completed successfully.');
  AAdd('TFile15Agent','strCurtailmentPeiordCountErr','Number of Curtailment Period Count (%d) values is more than 10.');
  AAdd('TFile15Agent','strCurtailmentPeiordCountValueErr','Error: Line No:(%d)Number of Curtailment Period Count (%d) values is less than 10.');
  AAdd('TFile15Agent','strStartMonthErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that start maonth');
  AAdd('TFile15Agent','strCurtailedChannelCountErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents number of channel to be curtailed (max = 50)).');
  AAdd('TFile15Agent','strCurtailedChannelCountValueErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents number of channel to be curtailed (max = 50)).');
  AAdd('TFile15Agent','strChannelNumberErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents channel number');
  AAdd('TFile15Agent','strDroughtRestrictionCountErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents drought restriction count max = 20');
  AAdd('TFile15Agent','strDroughtRestrictionCountValueErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents drought restriction count max = 20');
  AAdd('TFile15Agent','strChannelNumberCountErr','Number of channel numbers count');
  AAdd('TFile15Agent','strReservoirNumberCountErr','Number of channel numbers count');
  AAdd('TFile15Agent','strChannelNumbersErr','Error: Line No:(%d) contains channel numbers to be added to the restriction');
  AAdd('TFile15Agent','strReservoirNumbersErr','Error: Line No:(%d) contains reservoir numbers to be added to the restriction');
  AAdd('TFile15Agent','strStorageVolumesErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (storage volume factors ');
  AAdd('TFile15Agent','strAllocationFactorsErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents allocation factors');

  AAdd('TFile15DatabaseAgent','strReadStarted','Started updating F15 file data.');
  AAdd('TFile15DatabaseAgent','strNoDataReturned','There is no data for file type F15 in the database.');
  AAdd('TFile15DatabaseAgent','strReadEnded','Updating F15 data completed successfully');
  AAdd('TFile15DatabaseAgent','strWriteStarted','Started writing F15 file data to database.');
  AAdd('TFile15DatabaseAgent','strWriteEnded','Writing F15 file data to database completed successfully.');


  AAdd('TFile21Agent','strReadingStarted','Started validating file (%s) as file F21.dat');
  AAdd('TFile21Agent','strFileNoExist','File (%s)  does not exist. Loading file failed.');
  AAdd('TFile21Agent','strReadingCompleted','Validating of file (%s) as file F21.dat completed successfully.');
  AAdd('TFile21Agent','strWritingStarted','Started Writing file (%s) as file F21.dat');
  AAdd('TFile21Agent','strWritingCompleted','Writing of file (%s) as file F21.dat completed successfully.');
  AAdd('TFile21Agent','strMineCountErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Number of mines (= 100)).');
  AAdd('TFile21Agent','strNodeNumberErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Mine node number).');
  AAdd('TFile21Agent','strMineNameErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a string that represents (Mine name)');
  AAdd('TFile21Agent','strOpenCastCountErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Number of opencast mining pits on the mine (= 10)).');
  AAdd('TFile21Agent','strUndegroundCountErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Number of underground mining sections on the mine (= 10)).');
  AAdd('TFile21Agent','strSlurryDumpCountErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Number of discard / slurry dumps on the mine (= 10)).');
  AAdd('TFile21Agent','strRiverChannelNumberErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Channel number reference for outflows to river).');
  AAdd('TFile21Agent','strPCDChannelNumberErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Channel number reference for outflows to central PCD).');
  AAdd('TFile21Agent','strPanEvaporationErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a real number that represents (Monthly mean pan evaporation (mm)).');
  AAdd('TFile21Agent','strLakeEvaporationErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a real number that represents (Monthly lake evaporation conversion factors).');
  AAdd('TFile21Agent','strHydrologyNodeNumberErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Reference to associated node with sub-catchment hydrology inflows).');
  AAdd('TFile21Agent','strBeneficiationPlantAreaErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a real number that represents (Area of coal beneficiation plant (km2)).');
  AAdd('TFile21Agent','strBeneficiationRunOffFactorErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a real number that represents (Runoff factor for beneficiation plant area).');
  AAdd('TFile21Agent','strPitNameErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a string that represents (Opencast mining pit name)');
  AAdd('TFile21Agent','strCoalReserveAreaErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a real number that represents (Area of coal reserves (km2)).');
  AAdd('TFile21Agent','strWorkingsAreaErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a real number that represents (Area of workings (km2)).');
  AAdd('TFile21Agent','strDisturbedWorkingsAreaErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a real number that represents (Disturbed area of workings (km2)).');
  AAdd('TFile21Agent','strDisturbedAreaErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a real number that represents (Disturbed area (km2)).');
  AAdd('TFile21Agent','strWaterSurfaceEvapAreaErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a real number that represents (Evaporation area of in-spoils store water surface (km2)).');
  AAdd('TFile21Agent','strDisturbedAreaRunOffErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a real number that represents (Runoff factor for disturbed area).');
  AAdd('TFile21Agent','strDisturbedWorkingsAreaRunOffErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a real number that represents (Runoff factor for disturbed area of the workings).');
  AAdd('TFile21Agent','strWorkingAreaRechargeFactorErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a real number that represents (Monthly recharge factor for disturbed area).');
  AAdd('TFile21Agent','strDisturbedRechargeFactorErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a real number that represents (Monthly recharge factor for disturbed area of the workings).');
  AAdd('TFile21Agent','strMaximumSeepageRateErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a real number that represents (Maximum rate of seepage from spoils storage (million m3/month)).');
  AAdd('TFile21Agent','strSeepageExponentErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a real number that represents (Exponent of seepage equation for spoils storage).');
  AAdd('TFile21Agent','strPCDSurfaceAreaErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a real number that represents (Surface area of pollution control dam (PCD) for opencast mining pit (km2)).');
  AAdd('TFile21Agent','strPCDStorageCapacityErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a real number that represents (Storage capacity of PCD (million m3)).');
  AAdd('TFile21Agent','strPCDAnalysisStartVolumeErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a real number that represents (Volume of water in PCD at the start of the analysis (million m3)).');
  AAdd('TFile21Agent','strUnderGroundSectionNameErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a string that represents (Underground mining section name)');
  AAdd('TFile21Agent','strChannelNumberToUGDamErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Channel number reference for outflows to underground storage dam).');
  AAdd('TFile21Agent','strUpstreamCatchmentAreaErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a real number that represents (Area of catchment upstream of the undermined area (km2)).');
  AAdd('TFile21Agent','strBoardPillarCatchmentAreaErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a real number that represents (Undermined catchment area for board-an-pillar component of mine).');
  AAdd('TFile21Agent','strHighExtractionCatchmentAreaErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a real number that represents (Undermined catchment area for high extraction component of mine).');
  AAdd('TFile21Agent','strHighExtractionAreaRunoffFactorErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a real number that represents (Runoff factor for high extraction area).');
  AAdd('TFile21Agent','strUpstreamRunoffPortionErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a real number that represents (Monthly portion of upstream catchment area runoff that recharges the underground storage dam).');
  AAdd('TFile21Agent','strBoardAndPilarRechargeFactorErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a real number that represents (Monthly recharge factors for board-and-pillar area).');
  AAdd('TFile21Agent','strHighExtractionRechargeFactorErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a real number that represents (Monthly recharge factors for high extraction area).');
  AAdd('TFile21Agent','strDumpSurfaceAreaErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a real number that represents (Surface area of dump (km2)).');
  AAdd('TFile21Agent','strRunoffFactorToPCDErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a real number that represents (Runoff factor for dump for flow to pollution control dam (PCD)).');
  AAdd('TFile21Agent','strSeepageSplitFactorErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a real number that represents (Factor to split seepage from dump to river and PCD).');
  AAdd('TFile21Agent','strPCDStorageCapacityErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a real number that represents (Storage capacity of pollution control dam (PCD) for discard / slurry dump (million m3)).');
  AAdd('TFile21Agent','strPCDSurfaceAreaErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a real number that represents (Surface area of PCD (km2)).');
  AAdd('TFile21Agent','strPCDAnalysisStartVolumeErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a real number that represents (Volume in PCD at the start of the analysis (million m3)).');
  AAdd('TFile21Agent','strRechargeFactorErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a real number that represents (Monthly recharge factors for seepage from dump to PCD or river).');
  AAdd('TFile21Agent','strDecantVolumeErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a real number that represents (Volume of spoils storage at which decant occurs (million m3)).');
  AAdd('TFile21Agent','strSeepageVolumeErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a real number that represents (Volume of spoils storage at which seepage through weathered zone occurs (million m3)).');
  AAdd('TFile21Agent','strAnalysisStartVolumeErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a real number that represents (Volume of water in spoils storage at the start of the analysis (million m3)).');

  AAdd('TFile21DatabaseAgent','strReadStarted','Started updating F21 file data.');
  AAdd('TFile21DatabaseAgent','strNoDataReturned','There is no data for file type F21 in the database.');
  AAdd('TFile21DatabaseAgent','strMineSubCatchmentNoDataReturned','There is no data for Mine SubCatchment in the database');
  AAdd('TFile21DatabaseAgent','strReadEnded','Updating F21 data completed successfully');
  AAdd('TFile21DatabaseAgent','strWriteStarted','Started writing F21 file data to database.');
  AAdd('TFile21DatabaseAgent','strWriteEnded','Writing F21 file data to database completed successfully.');

  //------------------------------------------------------------------------------------------------------------------
  AAdd('TFile22Agent','strReadingStarted','Started validating file (%s) as file F22.dat');
  AAdd('TFile22Agent','strFileNoExist','File (%s)  does not exist. Loading file failed.');
  AAdd('TFile22Agent','strReadingCompleted','Validating of file (%s) as file F22.dat completed successfully.');
  AAdd('TFile22Agent','strWritingStarted','Started Writing file (%s) as file F22.dat');
  AAdd('TFile22Agent','strWritingCompleted','Writing of file (%s) as file F22.dat completed successfully.');
  AAdd('TFile22Agent','strAquiferNodeNumberErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Aquifer node number).');
  AAdd('TFile22Agent','strAquiferStorativityErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a real number that represents (Aquifer Storativity).');
  AAdd('TFile22Agent','strAquiferStaticWaterLevelErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a real number that represents (Aquifer Static Water Level).');
  AAdd('TFile22Agent','strUnsaturatedStorageCapacityErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a real number that represents (Unsaturated Storage Capacity).');
  AAdd('TFile22Agent','strInitialUnsaturatedStorageErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a real number that represents (Initial Unsaturated Storage).');
  AAdd('TFile22Agent','strMaximumDischargeRateErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a real number that represents (Maximum Discharge Rate).');
  AAdd('TFile22Agent','strMovingAverageRechargeErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a real number that represents (Moving Average Recharge).');
  AAdd('TFile22Agent','strPitmanSoilMoistureCapacityErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a real number that represents (Pitman Soil Moisture Capacity).');
  AAdd('TFile22Agent','strPitmanSoilMoistureStorageCapacityErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a real number that represents (Pitman Soil Moisture Storage Capacity).');
  AAdd('TFile22Agent','strPitmansoilMoistureFlowStateErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a real number that represents (Pitman Soil Moisture Flow State).');
  AAdd('TFile22Agent','strPitmanSoilMoistureFlowEquationErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a real number that represents (Pitman Soil Moisture Flow Equation).');
  AAdd('TFile22Agent','strPitmanMaximumGroundwaterFlowErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a real number that represents (Pitman Maximum GroundWater Flow).');
  AAdd('TFile22Agent','strPitmanSoilMoistureRechargeEquationErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a real number that represents (Pitman Soil Moisture Recharge Equation).');
  AAdd('TFile22Agent','strPitmanGroundwaterFlowErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a real number that represents (Pitman GroundWater Flow).');
  AAdd('TFile22Agent','strMaximumRateOfGroundwaterBaseFlowErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a real number that represents (Maximum Rate Of GroundWater BaseFlow.');
  AAdd('TFile22Agent','strPowerHeadDifferenceBaseFlowEquationErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a real number that represents (Power Head Difference BaseFlow Equation).');
  AAdd('TFile22Agent','strMaximumHydrologicalGradientErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a real number that represents (Maximum Hydrological Gradient).');
  AAdd('TFile22Agent','strAquiferTransmissivityErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a real number that represents (Aquifer Transmissivity).');
  AAdd('TFile22Agent','strBoreHoleDistanceToRiverErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a real number that represents (BoreHole Distance To River).');
  AAdd('TFile22Agent','strMaximumGroundwaterAbstractionErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a real number that represents (Maximum GroundWater Abstraction).');
  AAdd('TFile22Agent','strParameterK2Err','Error: Line No:(%d) is not valid.Column %d to %d should contain a real number that represents (ParameterK2).');
  AAdd('TFile22Agent','strParameterK3Err','Error: Line No:(%d) is not valid.Column %d to %d should contain a real number that represents (ParameterK3).');
  AAdd('TFile22Agent','strMonthlyWaterEvaporationErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a real number that represents (Monthly Water Evaporation).');
  AAdd('TFile22Agent','strMonthlyWaterUsageFactorsErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a real number that represents (Monthly Water Usage Factors).');
  AAdd('TFile22Agent','strGroundWaterEvaporationAreaErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a real number that represents (GroundWater Evaporation Area).');

  AAdd('TFile22DatabaseAgent','strReadStarted','Started updating F22 file data.');
  AAdd('TFile22DatabaseAgent','strNoDataReturned','There is no data for file type F22 in the database.');
  AAdd('TFile22DatabaseAgent','strReadEnded','Updating F22 data completed successfully');
  AAdd('TFile22DatabaseAgent','strWriteStarted','Started writing F22 file data to database.');
  AAdd('TFile22DatabaseAgent','strWriteEnded','Writing F22 file data to database completed successfully.');


  AAdd('TFileParamAgent','strReadingStarted','Started validating file (%s) as file Param.dat');
  AAdd('TFileParamAgent','strFileNoExist','File (%s)  does not exist. Loading file failed.');
  AAdd('TFileParamAgent','strReadingCompleted','Validating of file (%s) as file Param.dat completed successfully.');
  AAdd('TFileParamAgent','strWritingStarted','Started Writing file (%s) as file Param.dat');
  AAdd('TFileParamAgent','strWritingCompleted','Writing of file (%s) as file Param.dat completed successfully.');
  AAdd('TFileParamAgent','strGaugeCountErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (The actual number of flow gauges read from the Param file).');
  AAdd('TFileParamAgent','strKeyGaugeCountErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (The number of key Gauges)');
  AAdd('TFileParamAgent','strKeyGaugesErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Key gauges).');
  AAdd('TFileParamAgent','strKeyGaugesTooManyErr','Key Gauges are too many');
  AAdd('TFileParamAgent','strYearsNumberErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Number of years)');
  AAdd('TFileParamAgent','strYearStartErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (The start year).');
  AAdd('TFileParamAgent','strResidual1Err','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (Residual1)');
  AAdd('TFileParamAgent','strResidual2Err','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (Residual2)');
  AAdd('TFileParamAgent','strVariate1Err','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (Variate1)');
  AAdd('TFileParamAgent','strVariate2Err','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (Variate2)');
  AAdd('TFileParamAgent','strTransformTypeErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (Transform Type)');
  AAdd('TFileParamAgent','strTransformGammaErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (Transform Gamma)');
  AAdd('TFileParamAgent','strTransformDeltaErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (Transform Delta)');
  AAdd('TFileParamAgent','strTransformXlamErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (Transform Xlam)');
  AAdd('TFileParamAgent','strTransformXiErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (Transform Xi)');
  AAdd('TFileParamAgent','strResidualMeanErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (Residual Mean)');
  AAdd('TFileParamAgent','strResidualStdDevErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (Residual Standard Deviation)');
  AAdd('TFileParamAgent','strArmaPhi1Err','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (ArmaPhi1)');
  AAdd('TFileParamAgent','strArmaPhi2Err','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (ArmaPhi2)');
  AAdd('TFileParamAgent','strArmaTheta1Err','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (ArmaTheta1)');
  AAdd('TFileParamAgent','strArmaTheta2Err','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (ArmaTheta2)');
  AAdd('TFileParamAgent','strPhiZeroErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (PhiZero)');
  AAdd('TFileParamAgent','strZTVariatesErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (ZTVariates)');
  AAdd('TFileParamAgent','strParamXAErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (ParamXA)');
  AAdd('TFileParamAgent','strParamXSDErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (ParamXSD)');
  AAdd('TFileParamAgent','strParamAICErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (ParamAIC)');
  AAdd('TFileParamAgent','strParamANCErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (ParamANC)');
  AAdd('TFileParamAgent','strCatchmentAreaErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (Catchment area of each sub-catchment (km2).)');
  AAdd('TFileParamAgent','strMatrixBLineValueErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (MatrixB Line Value)');
  AAdd('TFileParamAgent','strMatrixB0LineValueErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (Matrix B0 Line Value)');
  AAdd('TFileParamAgent','strMatrixB1LineValueErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (Matrix B1 Line Value)');
  AAdd('TFileParamAgent','strMatrixCLineValueErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (Matrix C Line Value)');
  AAdd('TFileParamAgent','strMatrixB1LineValueErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (MatrixB1 Line Value)');
  AAdd('TFileParamAgent','PathsErr','Error: Hydrology files were found stored in multiple directories. All hydrology files must be stored in a single directory.');
  AAdd('TFileParamDatabaseAgent','strReadStarted','Started updating Param file data.');
  AAdd('TFileParamDatabaseAgent','strNoDataReturned','The is no data for the Param file type in the database.');
  AAdd('TFileParamDatabaseAgent','strReadEnded','Updating Param file data completed successfully');
  AAdd('TFileParamDatabaseAgent','strWriteStarted','Started writing Param file data to database.');
  AAdd('TFileParamDatabaseAgent','strWriteEnded','Writing Param file data to database completed successfully.');

  AAdd('TFilePathsAgent','strReadingStarted','Started validating file (%s) as file WRYM.dat');
  AAdd('TFilePathsAgent','strFileNoExist','File (%s)  does not exist. Loading file failed.');
  AAdd('TFilePathsAgent','strReadingCompleted','Validating of file (%s) as file WRYM.dat completed successfully.');
  AAdd('TFilePathsAgent','strWritingStarted','Started Writing file (%s) as file WRYM.dat');
  AAdd('TFilePathsAgent','strWritingCompleted','Writing of file (%s) as file WRYM.dat completed successfully.');
  AAdd('TFilePathsAgent','strNoPrefixErr','Error: Line No:(%d) is not valid.Column %d to %d should contain text that represents (File names prefix).');
  AAdd('TFilePathsAgent','strNoInputFilesPathErr','Error: Line No:(%d) is not valid.Column %d to %d should contain text that represents (Input files directory).');
  AAdd('TFilePathsAgent','strInputFilesPathDOSErr','Error: Line No:(%d) is not valid. The path name (%s) is not DOS compatible. No directory should have more than 8 characters.');
  AAdd('TFilePathsAgent','strInputFilesPathNoExistErr','Error: Line No:(%d) is not valid. ( %s) This path name does not exist and cannot be created.');
  AAdd('TFilePathsAgent','strNoOutputFilesPathErr','Error: Line No:(%d) is not valid.Column %d to %d should contain text that represents (Output files directory).');
  AAdd('TFilePathsAgent','strNoOutputFilesPathDOSErr','Error: Line No:(%d) is not valid. The path name (%s) is not DOS compatible. No directory should have more than 8 characters.');
  AAdd('TFilePathsAgent','strOutputFilesPathNoExistErr','Error: Line No:(%d) is not valid. ( %s) This path name does not exist and cannot be created.');
  AAdd('TFilePathsDatabaseAgent','strReadStarted','Started updating Directory file data.');
  AAdd('TFilePathsDatabaseAgent','strNoDataReturned','The is no data for file WRYM.dat in the database.');
  AAdd('TFilePathsDatabaseAgent','strReadEnded','Updating Directory data completed successfully');
  AAdd('TFilePathsDatabaseAgent','strWriteStarted','Started writing WRYM.dat file data to database.');
  AAdd('TFilePathsDatabaseAgent','strWriteEnded','Writing WRYM.dat file data to database completed successfully.');

  AAdd('TReservoirHydrologyFilesFileAgent','strReadingStarted','Started validating Reservoir Hydrology Files Names');
  AAdd('TReservoirHydrologyFilesFileAgent','strReadingCompleted','Validating of Reservoir Hydrology Files Names completed successfully.');
  AAdd('TReservoirHydrologyFilesFileAgent','strWritingStarted','Started Writing Reservoir Hydrology Files Names');
  AAdd('TReservoirHydrologyFilesFileAgent','strWritingCompleted','Writing of Reservoir Hydrology Files Names completed successfully.');

  AAdd('TReservoirHydrologyFilesDatabaseAgent','strReadStarted','Started updating Reservoir Hydrology Files Names file data.');
  AAdd('TReservoirHydrologyFilesDatabaseAgent','strNoDataReturned','The is no data for Reservoir Hydrology Files Names in the database.');
  AAdd('TReservoirHydrologyFilesDatabaseAgent','strReadEnded','Updating Reservoir Hydrology Files Names data completed successfully');
  AAdd('TReservoirHydrologyFilesDatabaseAgent','strWriteStarted','Started writing Reservoir Hydrology Files Names data to database.');
  AAdd('TReservoirHydrologyFilesDatabaseAgent','strWriteEnded'   ,'Writing Reservoir Hydrology Files Names data to database completed successfully.');
  AAdd('SelectedFile','ImportFile','The selected file has not yet been imported.Would you like to import it now.');
  AAdd('HydrologyFile','ImportFiles','The selected catchment has hydrology files that have not yet been imported.Would you like to import them now.');
  AAdd('HydrologyFile','NoImportFile','The selected catchment does not have hydrology data already imported. There are no hydrology files in the hard drive to import as well.');
  AAdd('HydrologyFile','NoFileImported','There are no hydrology files imported into the system. Please ensure that all hydrology files are imported before assigning hydrology to reservoirs or nodes with inflow.');
  AAdd('ParamFile','ImportFileTakesTime','Importing the Param.dat into the database may take time. It must be done so that hydrology data is available when you create new reservoirs. Please be patient. Press OK to continue');
  AAdd('ReservoirPenalty','ZeroPenaltyCount','Reservoir penalties are not yet specified. Please create reservoir penalties before adding reservoirs.');

  AAdd('TMonthlyDamLevelsFileAgent','strReadingStarted','Started validating Dam level Files Names');
  AAdd('TMonthlyDamLevelsFileAgent','strReadingCompleted','Validating of Dam level Files Names completed successfully.');
  AAdd('TMonthlyDamLevelsFileAgent','strReadStarted','Started updating Dam level Files Names file data.');
  AAdd('TMonthlyDamLevelsFileAgent','strReadEnded','Updating Dam level Files Names data completed successfully');

  AAdd('TMonthlyDamLevelsFileAgent','strReadingGaugeCode','Started updating Dam level GaugeCode file data.');
  AAdd('TMonthlyDamLevelsFileAgent','strEmptyGaugeCode' ,'Dam level GaugeCode is empty');
  AAdd('TMonthlyDamLevelsFileAgent','strPathNotDosCompatible','File Path/Name (%s) is incompatible with DOS applications. Make sure that any Sub-Directory or File name is not more than 8 characters and the total length is not more than 40 characters.');
  AAdd('TMonthlyDamLevelsFileAgent','strDamLevelYear', 'Error: Line No:(%d) is not valid.It should contain an integer that represents Dam level year.');
  AAdd('TMonthlyDamLevelsFileAgent','strDamLevelMonth','Error: Line No:(%d) is not valid.It should contain an integer that represents Dam level Month Number.');
  AAdd('TMonthlyDamLevelsFileAgent','strDamLevelValue','Error: Line No:(%d) is not valid.It should contain an integer that represents Dam level Value.');

  AAdd('YieldModelFileAgent','DefaultShortCutFile','_default.pif');
  AAdd('YieldModelFileAgent','DosPath','Dos\');
  AAdd('YieldModelFileAgent','Lf90File','Lf90.eer');
  AAdd('YieldModelFileAgent', 'WRYM-62File', 'WRYM-62.exe');
  AAdd('YieldModelFileAgent','WRYM-61File','WRYM-61.exe');
  AAdd('YieldModelFileAgent','WRYM-6File','WRYM-6.exe');
  AAdd('YieldModelFileAgent','AverageLabel','AVERAGE DRAWDOWN PERIOD');
  AAdd('YieldModelFileAgent','FirstYieldLabel','FIRM YIELD RECURRENCE INTERVALS');
  AAdd('TRunYieldModelAgent','strDLLNotExist','File (%s)  does not exist. This file is needed to run the model.');

end;

procedure LoadLanguageText5(AAdd: TTextItemAddFunction);
begin
  AAdd('TFileAllocationDefinitionAgent','strReadingStarted','Started validating family file. (%s)');
  AAdd('TFileAllocationDefinitionAgent','strReadingCompleted','Validating of family file completed successfully. (%s)');
  AAdd('TFileAllocationDefinitionAgent','strReadStarted','Started updating family file file data.');
  AAdd('TFileAllocationDefinitionAgent','strReadEnded','Updating family file data completed successfully');
  AAdd('TFileAllocationDefinitionAgent','strClassCountErr','Error: Line No:(%d) is not valid. First column data should contain an integer that represents (Number of reliability classes).');
  AAdd('TFileAllocationDefinitionAgent','strClassCountValErr','Error: Line No:(%d) is not valid. Number of reliability classes cannot be more than 5.');
  AAdd('TFileAllocationDefinitionAgent','strLevelCountErr','Error: Line No:(%d) is not valid. Second column data should contain an integer that represents (Number of allocation levels ).');
  AAdd('TFileAllocationDefinitionAgent','strLevelCountValErr','Error: Line No:(%d) is not valid. Number of allocation levels cannot be more than 5.');
  AAdd('TFileAllocationDefinitionAgent','strCategoryCountErr','Error: Line No:(%d) is not valid. Third column data should contain an integer that represents (Number of user categories, each with a different high, medium and low priority demand profile).');
  AAdd('TFileAllocationDefinitionAgent','strCategoryCountValErr','Error: Line No:(%d) is not valid. Number of user categories cannot be more than 10.');
  AAdd('TFileAllocationDefinitionAgent','strPeriodLengthErr','Error: Line No:(%d) is not valid. Fourth column data should contain an integer that represents (Period length the short term curves are based on, in years).');
  AAdd('TFileAllocationDefinitionAgent','strImplemntationDecisionErr','Error: Line No:(%d) is not valid. Fifth column data should contain character that represents (Allocation option (GRPOPT = M/R). ).');
  AAdd('TFileAllocationDefinitionAgent','strRIValueErr','Error: Line No:(%d) is not valid. Column (%d) should contain an integer that represents (Recurrence interval levels for each reliability class).');
  AAdd('TFileAllocationDefinitionAgent','strRILabelErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a string that represents (Labels of each reliability class used for printing).');
  AAdd('TFileAllocationDefinitionAgent','strCurtailmentErr','Error: Line No:(%d) is not valid. Column (%d) should contain a float that represents (Demand curtailments in the priority classes).');
  AAdd('TFileAllocationDefinitionAgent','strDistributionErr','Error: Line No:(%d) is not valid. Column number(%d) should contain a float that represents (Demand distribution in each priority class, for each user category).');
  AAdd('TFileAllocationDefinitionAgent','strDemandSupportDefCountErr','Error: Line No:(%d) is not valid. Data should contain an integer that represents (Number of demand-support definitions).');
  AAdd('TFileAllocationDefinitionAgent','strDemandSupportDefCountValErr','Error: Line No:(%d) is not valid. Number of demand-support definitions cannot be more than 100.');
  AAdd('TFileAllocationDefinitionAgent','strSubsystemNo1Err','Error: Line No:(%d) is not valid. Column number(%d) should contain an integer that represents (Subsystem number in which demand centre is resident).');
  AAdd('TFileAllocationDefinitionAgent','strGrowthFlagErr','Error: Line No:(%d) is not valid. Column number(%d) should contain a float that represents (Growth flag).');
  AAdd('TFileAllocationDefinitionAgent','strTargetDemandErr','Error: Line No:(%d) is not valid. Column number(%d) should contain a float that represents (Target demand, base value).');
  AAdd('TFileAllocationDefinitionAgent','strDemandDefNameErr','Error: Line No:(%d) is not valid. Column number(%d) should contain a string that represents (Name of demand centre (in single quotes)).');
  AAdd('TFileAllocationDefinitionAgent','strDemandCentreIDErr','Error: Line No:(%d) is not valid. Column number(%d) should contain an integer that represents (Corresponding demand centre number as in F01.DAT).');
  AAdd('TFileAllocationDefinitionAgent','strUserCategoryErr','Error: Line No:(%d) is not valid. Column number(%d) should contain an integer that represents (User category).');
  AAdd('TFileAllocationDefinitionAgent','strSupportArc1Err','Error: Line No:(%d) is not valid. Column number(%d) should contain an integer that represents (Support arc 1 for DNAM).');
  AAdd('TFileAllocationDefinitionAgent','strSupportArc2Err','Error: Line No:(%d) is not valid. Column number(%d) should contain an integer that represents (Support arc 2 (if first arc saturated)).');
  AAdd('TFileAllocationDefinitionAgent','strSupportSubsystemsCountErr','Error: Line No:(%d) is not valid. Column number(%d) should contain an integer that represents (Number of support subsystems - at least one, the NSSDMD subsystem itself).');
  AAdd('TFileAllocationDefinitionAgent','strSupportSystemNrErr','Error: Line No:(%d) is not valid. Column number(%d) should contain an integer that represents (Support system number (for each NSUPG system)).');
  AAdd('TFileAllocationDefinitionAgent','strSupportChannelNumbersNumbersErr','Error: Line No:(%d) is not valid. Column number(%d) should contain an integer that represents (Support channel numbers routing support between sub-systems).');
  AAdd('TFileAllocationDefinitionAgent','strSupportSubsystemsNumbersErr','Error: Line No:(%d) is not valid. Column number(%d) should contain an integer that represents (Support sub-system number).');
  AAdd('TFileAllocationDefinitionAgent','strYieldCurveSubsCountErr','Error: Line No:(%d) is not valid. Data should contain an integer that represents (Number of subsystems with short-term yield curve data).');
  AAdd('TFileAllocationDefinitionAgent','strYieldCurveSubsCountValErr','Error: Line No:(%d) is not valid. Number of subsystems with short-term yield curve data cannot be more than 10.');
  AAdd('TFileAllocationDefinitionAgent','strYieldCurveSetsCountErr','Error: Line No:(%d) is not valid. Data should contain an integer that represents (Number of yield curve sets, each for a different start volume percentage (family of curves)).');
  AAdd('TFileAllocationDefinitionAgent','strYieldCurveSetsCountValErr','Error: Line No:(%d) is not valid. Number of demand-support definitions cannot be more than 10.');
  AAdd('TFileAllocationDefinitionAgent','strFamilyLoadCaseCountErr','Error: Line No:(%d) is not valid. Data should contain an integer that represents (Number of load cases per family of curves ).');
  AAdd('TFileAllocationDefinitionAgent','strFamilyLoadCaseCountValErr','Error: Line No:(%d) is not valid. Number of Number of load cases per family of curves  cannot be more than 10.');
  AAdd('TFileAllocationDefinitionAgent','strCurveSetsPerMonthCountErr','Error: Line No:(%d) is not valid. Data should contain an integer that represents (Number of curve sets, one for each decision month).');
  AAdd('TFileAllocationDefinitionAgent','strDecisionIndicatorArrayErr','Error: Line No:(%d) is not valid. Column number(%d) should contain an integer that represents (Indicator of what curve set (1 to NSM) should be used for decisions taken in each of the 12 months of the year).');
  AAdd('TFileAllocationDefinitionAgent','strNonFirmSubsystemNoErr','Error: Line No:(%d) is not valid. Column number(%d) should contain an integer that represents (Sub-system number from where non-firm support is routed).');
  AAdd('TFileAllocationDefinitionAgent','strRoutingChannelNoArrayErr','Error: Line No:(%d) is not valid. Column number(%d) should contain an integer that represents (Non firm yield support routing channels).');
  AAdd('TFileAllocationDefinitionAgent','strSubsystemNameErr','Error: Line No:(%d) is not valid. Column number(%d) should contain a string that represents (Sub-system name(in single quotes)).');
  AAdd('TFileAllocationDefinitionAgent','strSubsystemNo2Err','Error: Line No:(%d) is not valid. Column number(%d) should contain an integer that represents (Number of the subsystem whose yield characteristics are subtracted from those of SSNAME).');
  AAdd('TFileAllocationDefinitionAgent','strLine11UnequalErr','Warning: Line No:(%d) is not equal to the preceeding line type 11 for the same subsystem.');
  AAdd('TFileAllocationDefinitionAgent','strSupportSubsystemNoErr','Error: Line No:(%d) is not valid. Column number(%d) should contain an integer that represents (Number of the subsystem supporting SSNAME).');
  AAdd('TFileAllocationDefinitionAgent','strChannelNoErr','Error: Line No:(%d) is not valid. Column number(%d) should contain an integer that represents (Support from subsystem NSSP is through channel number NCHSSP).');
  AAdd('TFileAllocationDefinitionAgent','strShortTermFirmYieldErr','Error: Line No:(%d) is not valid. Column number(%d) should contain a float that represents (1/200 year short-term firm yield for subsystem starting at 100 perc. full).');
  AAdd('TFileAllocationDefinitionAgent','strStreamFlowErr','Error: Line No:(%d) is not valid. Column number(%d) should contain a float that represents (Lowest annual naturalized streamflow to subsystem).');
  AAdd('TFileAllocationDefinitionAgent','strLongTermFirmYieldErr','Error: Line No:(%d) is not valid. Column number(%d) should contain a float that represents (1/200 year long-tem firm yield for subsystem).');
  AAdd('TFileAllocationDefinitionAgent','strChannelNoErr','Error: Line No:(%d) is not valid. Column number(%d) should contain an integer that represents (Year from which family curves must be used).');
  AAdd('TFileAllocationDefinitionAgent','strChannelNoErr','Error: Line No:(%d) is not valid. Column number(%d) should contain an integer that represents (Month from which family curves must be used).');
  AAdd('TFileAllocationDefinitionAgent','strChannelNoErr','Error: Line No:(%d) is not valid. Column number(%d) should contain an integer that represents (Year when family of curves becomes obsolete (this year may be preceded by the start year for a subsequent FM*.DAT data file)).');
  AAdd('TFileAllocationDefinitionAgent','strChannelNoErr','Error: Line No:(%d) is not valid. Column number(%d) should contain an integer that represents (Month in which family of curves becomes obsolete).');
  AAdd('TFileAllocationDefinitionAgent','strSubsystemNameErr','Error: Line No:(%d) is not valid. Column number(%d) should contain a string that represents (Flag indicating if "FIRM" or "NON-FIRM" yield can be allocated from this sub-system(in double quotes)).');
  AAdd('TFileAllocationDefinitionAgent','strStartVolumeErr','Error: Line No:(%d) is not valid. Column number(%d) should contain a float that represents (Start volume fraction of live storage (e.g. 1.00 = 100 perc.)).');
  AAdd('TFileAllocationDefinitionAgent','strCurveSetNoErr','Error: Line No:(%d) is not valid. Column number(%d) should contain an integer that represents (Number of the set of curves, see NDD. Coeficient data must be chronological order).');
  AAdd('TFileAllocationDefinitionAgent','strLineTargetDraftErr','Error: Line No:(%d) is not valid. Column number(%d) should contain a float that represents (Target draft (million m3/a) of particular line).');
  AAdd('TFileAllocationDefinitionAgent','strCoefArrayValErr','Error: Line No:(%d) is not valid. Column number(%d) should contain a float that represents (Coefficients (a, b, c, d) of base yield line using a third degree polynomial equation).');
  AAdd('TFileAllocationDefinitionAgent','strRiskPropErr','Error: Line No:(%d) is not valid. Column number(%d) should contain a float that represents (Risk (proportion, 1.0 = 100 perc.) of the firm yield brake point).');

  AAdd('TFileAllocationDefinitionAgent','strSubsystemNo3Err','Error: Line No:(%d) is not valid. Column number(%d) should contain an integer that represents (Subsystem number).');
  AAdd('TFileAllocationDefinitionAgent','strNodeNoArrayErr','Error: Line No:(%d) is not valid. Column number(%d) should contain an integer that represents (Node numbers of reservoirs in subsystem, used in determining system perc. full at each decision date.).');
  AAdd('TFileAllocationDefinitionAgent','strSupportStrategyTypeErr','Error: Line No:(%d) is not valid. Data should contain an integer that represents (Type of support strategy to implement (1,2,3,4 or 5)).');
  AAdd('TFileAllocationDefinitionAgent','strSupportStrategyTypeValErr','Error: Line No:(%d) is not valid. Type of support strategy to implement must be in (1,2,3,4 or 5).');
  AAdd('TFileAllocationDefinitionAgent','strFixedPosSubsystemCountErr','Error: Line No:(%d) is not valid. Data should contain an integer that represents (Number of sub-systems to be solved in a fixed position (eg. out of 4 sub-systems this subsystem must always be solved first)).');
  AAdd('TFileAllocationDefinitionAgent','strSubsystemNo4Err','Error: Line No:(%d) is not valid. Column number(%d) should contain an integer that represents (Sub-system number of which the solution position should be fixed).');
  AAdd('TFileAllocationDefinitionAgent','strSubsystemPosErr','Error: Line No:(%d) is not valid. Column number(%d) should contain an integer that represents (Position, out of a possible NSS, in which sub-system IFPS(1) should be solved).');
  AAdd('TFileAllocationDefinitionAgent','strSequentialPosSubsystemCountErr','Error: Line No:(%d) is not valid. Column number(%d) should contain an integer that represents (Number of subsystems that must be solved in a specific sequential order (eg. ISPOR(1) must always be solved before ISPOR(2))).');
  AAdd('TFileAllocationDefinitionAgent','strSupportStructureCountErr','Error: Line No:(%d) is not valid. Column number(%d) should contain an integer that represents (Number of support structure channels with control based on excess or deficit in particular sub-systems (Max = 5)).');
  AAdd('TFileAllocationDefinitionAgent','strSupportChannelNoErr','Error: Line No:(%d) is not valid. Column number(%d) should contain an integer that represents (Support channel number of channel to be controlled.');
  AAdd('TFileAllocationDefinitionAgent','strSubsystemNo5Err','Error: Line No:(%d) is not valid. Column number(%d) should contain an integer that represents (Number of sub-systems controlling channel IPMPCN (Max = 10).');
  AAdd('TFileAllocationDefinitionAgent','strInfluencedSubSytemNoErr','Error: Line No:(%d) is not valid. Column number(%d) should contain an integer that represents (Sub-system number that influences the support through channel IPMPCN.');
  AAdd('TFileAllocationDefinitionAgent','strInfluenceFactorErr','Error: Line No:(%d) is not valid. Column number(%d) should contain an float that represents (Factor defining the level of influence of each sub-system.');
  AAdd('TFileAllocationDefinitionAgent','strBalancingOptionErr','Error: Line No:(%d) is not valid. Column number(%d) should contain an float that represents (Balancing option among sub-systems with deficits(1 for Mgeni System and 0 for all other systems).');
  AAdd('TFileAllocationDefinitionAgent','strFleDataNotLoaded','There is no data for file (%s)to export.');
  AAdd('TFileAllocationDefinitionAgent','strWritingStarted','Started Writing file (%s) as family file.');
  AAdd('TFileAllocationDefinitionAgent','strWritingCompleted','Writing of file (%s) as family file completed successfully.');
  AAdd('TFileAllocationDefinitionDatabaseAgent','strNoDataReturned','There is no data for family file in the database.');
  AAdd('TFileAllocationDefinitionDatabaseAgent','strReadEnded','Updating F01 data completed successfully');
  AAdd('TFileAllocationDefinitionDatabaseAgent','strReadStarted','Started updating family file data.');
  AAdd('TFileAllocationDefinitionDatabaseAgent','strWriteEnded','Writing family file data to database completed successfully.');
  AAdd('TFileAllocationDefinitionDatabaseAgent','strWriteStarted','Started writing family file data to database.');


  AAdd('TFileReservoirImplementationAgent','strReadingStarted','Started validating Reservoir Implementation Date Definition Data  file. (%s)');
  AAdd('TFileReservoirImplementationAgent','strReadingCompleted','Validating of Reservoir Implementation Date Definition Data  file completed successfully.');
  AAdd('TFileReservoirImplementationAgent','strReadStarted','Started updating Reservoir Implementation Date Definition Data  file file data.');
  AAdd('TFileReservoirImplementationAgent','strReadEnded','Updating Reservoir Implementation Date Definition Data  file data completed successfully');
  AAdd('TFileReservoirImplementationAgent','strReservoirImplementationCountErr','Error: Line No:(%d) is not valid. First column data should contain an integer that represents (Total number of dams in integrated system, include all reservoirs with storage as defined in F02.DAT(Max = 100)).');
  AAdd('TFileReservoirImplementationAgent','strReservoirImplementationCountValErr','Error: Line No:(%d) is not valid. Total number of dams cannot be more than 100.');
  AAdd('TFileReservoirImplementationAgent','strReservoirNumberErr','Error: Line No:(%d) is not valid. Column number(%d) should contain an integer that represents (Reservoir node number.');
  AAdd('TFileReservoirImplementationAgent','strReplacedReservoirNumberErr','Error: Line No:(%d) is not valid. Column number(%d) should contain an integer that represents (Reservoir node number that is replaced by the characteristic of DAMND or base node number).');
  AAdd('TFileReservoirImplementationAgent','strYearDamActiveErr','Error: Line No:(%d) is not valid. Column number(%d) should contain an integer that represents (Year dam active (water year)).');
  AAdd('TFileReservoirImplementationAgent','strMonthDamActiveErr','Error: Line No:(%d) is not valid. Column number(%d) should contain an integer that represents (Month dam active).');
  AAdd('TFileReservoirImplementationAgent','strYearDamAbsoleteErr','Error: Line No:(%d) is not valid. Column number(%d) should contain an integer that represents (Year dam obsolete (water year)).');
  AAdd('TFileReservoirImplementationAgent','strMonthDamAbsoleteErr','Error: Line No:(%d) is not valid. Column number(%d) should contain an integer that represents (Month dam obsolete).');
  AAdd('TFileReservoirImplementationAgent','strEconomicLifeOfDamErr','Error: Line No:(%d) is not valid. Column number(%d) should contain an integer that represents (Economic life of dam (number of years over which cost of dam is amortized)).');
  AAdd('TFileReservoirImplementationAgent','strCapitalCostErr','Error: Line No:(%d) is not valid. Column number(%d) should contain an float that represents (Capital cost (R million)).');
  AAdd('TFileReservoirImplementationAgent','strMaintenanceCostErr','Error: Line No:(%d) is not valid. Column number(%d) should contain an float that represents (Fixed operating and maintenance costs).');
  AAdd('TFileReservoirImplementationAgent','strYearsInConstructionErr','Error: Line No:(%d) is not valid. Column number(%d) should contain an integer that represents (Number of years in construction schedule).');
  AAdd('TFileReservoirImplementationAgent','strCostScheduleErr','Error: Line No:(%d) is not valid. Column number(%d) should contain an string that represents (Cost schedule: % capital expenditure in each year of construction).');
  AAdd('TFileReservoirImplementationAgent','strAllocationFileCountErr','Error: Line No:(%d) is not valid. First column data should contain an integer that represents (Number of FM*.DAT files, i.e. number of files containing short-term yield data).');
  AAdd('TFileReservoirImplementationAgent','strYearFileActiveErr','Error: Line No:(%d) is not valid. First column data should contain an integer that represents (Year in which use of short-term yield data begins).');
  AAdd('TFileReservoirImplementationAgent','strMonthFileActiveErr','Error: Line No:(%d) is not valid. Second column data should contain an integer that represents (Month in which use of short-term yield data begins).');
  AAdd('TFileReservoirImplementationAgent','strFileNameErr','Error: Line No:(%d) is not valid. Last column data should contain an string that represents (Short-term planning utility filename (FM*.DAT) Specify full path.).');

  AAdd('TFileReservoirImplementationAgent','strSwitchFileCountErr','Error: Line No:(%d) is not valid. First column data should contain an integer that represents (Number of SW*.DAT files, i.e. number of switch files).');
  AAdd('TFileReservoirImplementationAgent','strYearFileActive1Err','Error: Line No:(%d) is not valid. Secind column data should contain an integer that represents (Year in which use of switch file begins).');
  AAdd('TFileReservoirImplementationAgent','strMonthFileActive1Err','Error: Line No:(%d) is not valid. Last column data should contain an integer that represents (Month in which use of switch file begins).');
  AAdd('TFileReservoirImplementationAgent','strFileName1Err','Error: Line No:(%d) is not valid. Last column data should contain an string that represents (Switch filename (SW*.DAT), specify full path.');
  AAdd('TFileReservoirImplementationDatabaseAgent','strNoDataReturned','There is no data for family file in the database.');
  AAdd('TFileReservoirImplementationDatabaseAgent','strReadEnded','Updating F01 data completed successfully');
  AAdd('TFileReservoirImplementationDatabaseAgent','strReadStarted','Started updating family file data.');
  AAdd('TFileReservoirImplementationDatabaseAgent','strWriteEnded','Writing family file data to database completed successfully.');
  AAdd('TFileReservoirImplementationDatabaseAgent','strWriteStarted','Started writing family file data to database.');

  AAdd('TFileChannelSwitchControlAgent','strReadingStarted','Started validating channel switch control file (%s).');
  AAdd('TFileChannelSwitchControlAgent','strFileNoExist','File (%s) does not exist. Loading file failed.');
  AAdd('TFileChannelSwitchControlAgent','strChannelSwitchControlCountErr','Error: Line No:(%d) is not valid.Column should contain an integer Number of switch channels (Max = 20).');
  AAdd('TFileChannelSwitchControlAgent','strSwitchTypeErr','Error : Line No :(%d)is not valid.Column number(%d) should contain an integer representing type of switch channel');
  AAdd('TFileChannelSwitchControlAgent','strChannelNumberErr','Error : Line No :(%d)is not valid.Column number(%d) should contain an integer representing a Channel number of the switch channel');
  AAdd('TFileChannelSwitchControlAgent','strNodeNumberErr','Error : Line No :(%d)is not valid.Column number(%d) should contain an integer representing a node/reservoir number associated with switch channel');
  AAdd('TFileChannelSwitchControlAgent','strSwitchLevelErr','Error : Line No :(%d)is not valid.Column number(%d) should contain ai integer representing a water level where status of switch channel changes.');
  AAdd('TFileChannelSwitchControlAgent','strSwitchInitialStateErr','Error : Line No :(%d)is not valid.Column number(%d) should contain an integer representing a an initial status of channel: 1 = on and 0 = off.');
  AAdd('TFileChannelSwitchControlAgent','strReadingCompleted','Validating of channel switch control file (%s) completed successfully.');
  AAdd('TFileChannelSwitchControlAgent','strWritingStarted','Started writing channel switch control data file (%s) as channel switch control file.');
  AAdd('TFileChannelSwitchControlAgent','strWritingCompleted','Writing of file (%s) as channel switch control file completed successfully.');
  AAdd('TFileChannelSwitchControlDatabaseAgent','strNoDataReturned','There is no data for Channel Switch Control in the database.');
  AAdd('TFileChannelSwitchControlDatabaseAgent','strReadStarted','Started updating Channel Switch Control data.');
  AAdd('TFileChannelSwitchControlDatabaseAgent','strReadEnded','Updating Channel Switch Control File completed successfully.');
  AAdd('TFileChannelSwitchControlDatabaseAgent','strWriteStarted','Started writing Channel Switch Control File Data to database.');
  AAdd('TFileChannelSwitchControlDatabaseAgent','strWriteEnded','Writing Channel Switch control file data to database completed successfully.');


  AAdd('TFilePumpingChannelControlAgent','strReadingStarted','Started validating pumping channel control file (%s).');
  AAdd('TFilePumpingChannelControlAgent','strFileNoExist','File (%s) does not exist. Loading file failed.');
  AAdd('TFilePumpingChannelControlAgent','strPumpingChannelControlCountErr','Error: Line No:(%d) is not valid.Column should contain an integer representing number of years for which data is provided in this file (Max = 100).');
  AAdd('TFilePumpingChannelControlAgent','strChannelNumberErr','Error: Line No:(%d) is not valid.Column(%d) should contain an integer representing number of pumping channel.');
  AAdd('TFilePumpingChannelControlAgent','strYearChannelActiveErr','Error: Line No:(%d) is not valid.Column(%d) should contain an integer representing year channel operational.');
  AAdd('TFilePumpingChannelControlAgent','strMonthChannelActiveErr','Error: Line No:(%d) is not valid.Column(%d) should contain an integer representing month channel operational.');
  AAdd('TFilePumpingChannelControlAgent','strYearChannelAbsoleteErr','Error: Line No:(%d) is not valid.Column(%d) should contain an integer representing year channel obsolete.');
  AAdd('TFilePumpingChannelControlAgent','strMonthChannelAbsoleteErr','Error: Line No:(%d) is not valid.Column(%d) should contain an integer representing month channel obsolete.');
  AAdd('TFilePumpingChannelControlAgent','strEconomicLifeOfChannelErr','Error: Line No:(%d) is not valid.Column(%d) should contain an integer representing economic life of pumping channel.');
  AAdd('TFilePumpingChannelControlAgent','strCapitalCostErr','Error: Line No:(%d) is not valid.Column(%d) should contain a float representing capital cost of pumping channel.');
  AAdd('TFilePumpingChannelControlAgent','strFixedMaintenanceCostErr','Error: Line No:(%d) is not valid.Column(%d) should contain a float representing fixed operation and maintenance cost.');
  AAdd('TFilePumpingChannelControlAgent','strVariableMaintenanceCostErr','Error: Line No:(%d) is not valid.Column(%d) should contain a float representing variable operation and maintenance cost.');
  AAdd('TFilePumpingChannelControlAgent','strYearsInConstructionErr','Error: Line No:(%d) is not valid.Column(%d) should contain an integer representing Number of years in construction schedule.');
  AAdd('TFilePumpingChannelControlAgent','strCostScheduleErr','Error: Line No:(%d) is not valid.Column(%d) should contain a float representing fraction of capital cost spent in each year of construction');
  AAdd('TFilePumpingChannelControlAgent','strEscaltionCostsErr','Error: Line No:(%d) is not valid.Column(%d) should contain a float representing annual escalation in pump operating costs, given for each year in the analysis');
  AAdd('TFilePumpingChannelControlAgent','strCostScheduleErr','Error: Line No:(%d) is not valid.Column(%d) should contain a float representing fraction of capital cost spent in each year of construction');
  AAdd('TFilePumpingChannelControlAgent','strReadingCompleted','Validating of pumping channel control file (%s) completed successfully.');
  AAdd('TFilePumpingChannelControlAgent','strWritingStarted','Started writing pumping channel control data file (%s) as pumping channel control file.');
  AAdd('TFilePumpingChannelControlAgent','strWritingCompleted','Writing of file (%s) as pumping channel control file completed successfully.');
  AAdd('TFilePumpingChannelControlAgent','strReadingCompleted','Validating of pumping channel control file (%s) completed successfully.');
  AAdd('TFilePumpingChannelControlDatabaseAgent','strNoDataReturned','There is no data for pumping channel control in the database.');
  AAdd('TFilePumpingChannelControlDatabaseAgent','strReadStarted','Started updating pumping channel control data.');
  AAdd('TFilePumpingChannelControlDatabaseAgent','strReadEnded','Updating pumping channel control File completed successfully.');
  AAdd('TFilePumpingChannelControlDatabaseAgent','strWriteStarted','Started writing pumping channel control File Data to database.');
  AAdd('TFilePumpingChannelControlDatabaseAgent','strWriteEnded','Writing pumping channel control file data to database completed successfully.');

  AAdd('TFileGeneralChannelControlAgent','strReadingStarted','Started validating General Channel Control file (%s).');
  AAdd('TFileGeneralChannelControlAgent','strFileNoExist','File (%s) does not exist. Loading file failed.');
  AAdd('TFileGeneralChannelControlAgent','strGeneralChannelControlCountErr','Error: Line No:(%d) is not valid.Column should contain an integer representing number of years for which data is provided in this file (Max = 100)');
  AAdd('TFileGeneralChannelControlAgent','strGeneralChannelCountErr','Error: Line No:(%d) is not valid.Column should contain an integer representing total number of purification plants (Max = 40)');
  AAdd('TFileGeneralChannelControlAgent','strChannelNumberErr','Error: Line No:(%d) is not valid.Column(%d) should contain an integer representing number of the purification channel');
  AAdd('TFileGeneralChannelControlAgent','strYearChannelActiveErr','Error: Line No:(%d) is not valid.Column(%d) should contain an integer representing year purification plant operational');
  AAdd('TFileGeneralChannelControlAgent','strMonthChannelActiveErr','Error: Line No:(%d) is not valid.Column(%d) should contain an integer representing month purification plant operational');
  AAdd('TFileGeneralChannelControlAgent','strYearChannelAbsoleteErr','Error: Line No:(%d) is not valid.Column(%d) should contain an integer representing year purification plant obsolete');
  AAdd('TFileGeneralChannelControlAgent','strMonthChannelAbsoleteErr','Error: Line No:(%d) is not valid.Column(%d) should contain an integer representing month purification plant obsolete');
  AAdd('TFileGeneralChannelControlAgent','strEconomicLifeOfChannelErr','Error: Line No:(%d) is not valid.Column(%d) should contain an integer representing economic life of purification plant');
  AAdd('TFileGeneralChannelControlAgent','strCapitalCostErr','Error: Line No:(%d) is not valid.Column(%d) should contain an integer representing capital cost of purification plant');
  AAdd('TFileGeneralChannelControlAgent','strFixedMaintenanceCostErr','Error: Line No:(%d) is not valid.Column(%d) should contain an integer representing fixed operation and maintenance cost');
  AAdd('TFileGeneralChannelControlAgent','strVariableMaintenanceCostErr','Error: Line No:(%d) is not valid.Column(%d) should contain an integer representing variable operation and maintenance cost');
  AAdd('TFileGeneralChannelControlAgent','strYearsInConstructionErr','Error: Line No:(%d) is not valid.Column(%d) should contain an integer representing number of years in construction schedule');
  AAdd('TFileGeneralChannelControlAgent','strCostScheduleErr','Error: Line No:(%d) is not valid.Column(%d) should contain an integer representing fraction of capital cost spent in each year of construction');
  AAdd('TFileGeneralChannelControlAgent','strEscaltionCostsErr','Error: Line No:(%d) is not valid.Column(%d) should contain an integer representing annual escalation factors in the operating costs, for each year in the analysis');
  AAdd('TFileGeneralChannelControlAgent','strEscaltionCostsErr','Error: Line No:(%d) is not valid.Column(%d) should contain an integer representing annual escalation factors in the operating costs, for each year in the analysis');
  AAdd('TFileGeneralChannelControlAgent','strReadingCompleted','Validating of general channel control file (%s) completed successfully.');
  AAdd('TFileGeneralChannelControlAgent','strWritingStarted','Started writing general channel control data file (%s) as general channel control file.');
  AAdd('TFileGeneralChannelControlAgent','strWritingCompleted','Writing of file (%s) as general channel control file completed successfully.');
  AAdd('TFileGeneralChannelControlDatabaseAgent','strNoDataReturned','There is no data for General Channel Control in the database.');
  AAdd('TFileGeneralChannelControlDatabaseAgent','strReadStarted','Started updating General Channel Control data.');
  AAdd('TFileGeneralChannelControlDatabaseAgent','strReadEnded','Updating General Channel Control File completed successfully.');
  AAdd('TFileGeneralChannelControlDatabaseAgent','strWriteStarted','Started writing General Channel Control File Data to database.');
  AAdd('TFileGeneralChannelControlDatabaseAgent','strWriteEnded','Writing General Channel Control data to database completed successfully.');

end;

procedure LoadLanguageText6(AAdd: TTextItemAddFunction);
begin
  AAdd('TAbstractDatabaseAgent','strDeleteModelData','Deleting data from table (%s)');
  AAdd('TAbstractDatabaseAgent','strClearModelDataInDatabaseEnded','Completed deleting model file data from the database successfully');
  AAdd('TAbstractDatabaseAgent','strClearModelDataInDatabaseStarted','Started deleting model file data from the database');
  AAdd('TAbstractFileAgent','strPathNotDosCompatible','File Path/Name (%s) is incompatible with DOS applications. Make sure that any Sub-Directory or File name is not more than 8 characters and the total length is not more than 40 characters.');
  AAdd('TAbstractFileAgent','strPathDoesNotExists','Directory (%s) does not exist.');
  AAdd('TAbstractFileAgent','strDateDoesNotExists','File (%s) did not have a date stamp and It has been assigned one.');
  AAdd('TChannelTypeGeometryValidator','strLine1IntegerInvalid','The first Integer in line 1 of Channel Type/Geometry file is not valid.');
  AAdd('TChannelTypeGeometryValidator','strLine1Invalid1','The first line of Channel Type/Geometry file does not contain an integer of length 5.');
  AAdd('TChannelTypeGeometryValidator','strLine2floatInvalid','The first float in line 2 of Channel Type/Geometry file is not valid.');
  AAdd('TChannelTypeGeometryValidator','strLine2IntegerInvalid','The first integer in line 2 of Channel Type/Geometry file is not valid.');
  AAdd('TControlDataValidator','strLine1IntegerInvalid','The integer in line 1 of Control Data file is not valid.');
  AAdd('TControlDataValidator','strLine1IntegerInvalid2','The integer in line 4 of Control Data file is not valid.');
  AAdd('TControlDataValidator','strLine4Invalid','The fourth line  of Control data file does not contain 10 Integers of 6 characters,5 Spaces,1 Characters, and 4 Integers of 6 characters each');
  AAdd('TControlDataValidator','strLine4Spaces','Line 4 of Control Data file does not contain 5 spaces.');
  AAdd('TControlDataValidator','strLine4StringinValid','Line 4 of Control Data file does not contain a character of length 1.');
  AAdd('TControlDataValidator','strTitleLines','The Control Data file does not contain three title lines at the top.');

  AAdd('TFile01Agent','strAnalSequencesErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Selection of sequences to be analysed (stochastic sequence number or Gregorian start year for historic analysis)).');
  AAdd('TFile01Agent','strCalcHistYieldErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Calculate historic firm yield option).');
  AAdd('TFile01Agent','strCalcHistYieldValErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents ((1 = YES, 0 = NO).');
  AAdd('TFile01Agent','strDebugLevelErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Level of debug output).');
  AAdd('TFile01Agent','strDebugLevelValErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (-3 <=Value <=7).');
  AAdd('TFile01Agent','strEndDebugErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Final time period for debug).');
  AAdd('TFile01Agent','strF01StructureErr','File (%s) has less than 11 lines. F01.dat file must have at least 11 lines.');
  AAdd('TFile01Agent','strF01StructureErrB','File (%s) has less than 12 lines which are required for version 6.1 onwards.');
  AAdd('TFile01Agent','strFile1NoExist','File (%s)  does not exist. Writing from file failed.');
  AAdd('TFile01Agent','strFileNoExist','File (%s)  does not exist. Reading from file failed.');
  AAdd('TFile01Agent','strHistRandErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a character that represents (Historic (H) or random start (0) or bootstrap (2)).');
  AAdd('TFile01Agent','strHistRandValErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (0 <=Value <=2).');
  AAdd('TFile01Agent','strHistStochErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a character that represents (Historic (H) or stochastic runs (S)).');
  AAdd('TFile01Agent','strHistStochValErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a character that represents (H =Historic or S=Stochastic).');
  AAdd('TFile01Agent','strHydYearsErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Number of years in hydrologic sequence).');
  AAdd('TFile01Agent','strLimitOptionErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Limit option).');
  AAdd('TFile01Agent','strLimitOptionValErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents ((1 = YES, 0 = NO).');
  AAdd('TFile01Agent','strMaxHydSequencesErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Number of hydrologic sequences in analysis).');
  AAdd('TFile01Agent','strMaxYieldErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (Maximum system yield for each load case(in units of million m3/a)).');
  AAdd('TFile01Agent','strMonthDayErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Number of days in a month).');
  AAdd('TFile01Agent','strMonthNameErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Month name).');
  AAdd('TFile01Agent','strMultiplePeriodsErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Multiple period lengths option).');
  AAdd('TFile01Agent','strMultiplePeriodsValErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents ((1 = YES, 0 = NO).');
  AAdd('TFile01Agent','strNoLoadCasesErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Number of load cases).');
  AAdd('TFile01Agent','strParamNameErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a string that represents (Name and directory of PARAM.DAT file).');
  AAdd('TFile01Agent','strParamNameValErr','Error: Line No:(%d) is not valid.Column %d to %d contains  a parameter file name whose file does not exist).');
  AAdd('TFile01Agent','strPlotOptionErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a character that represents Plotting option (Y or N).');
  AAdd('TFile01Agent','strPlotOptionValErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a Character that represents Plotting option (Y or N).');
  AAdd('TFile01Agent','strRandomNumberErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Random number option).');
  AAdd('TFile01Agent','strRandomNumberValErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (0 or 1).');
  AAdd('TFile01Agent','strReadingCompleted','Validating of file (%s) as file F01.dat completed successfully.');
  AAdd('TFile01Agent','strReadingStarted','Started validating file (%s) as file F01.dat');
  AAdd('TFile01Agent','strReduceSequenceErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Reduce number of sequences option).');
  AAdd('TFile01Agent','strReduceSequenceValErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents ((1 = YES, 0 = NO).');
  AAdd('TFile01Agent','strStartDebugErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Initial time period for debug).');
  AAdd('TFile01Agent','strStartMonthErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Start month number).');
  AAdd('TFile01Agent','strStartOtherErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Start year in other calendars).');
  AAdd('TFile01Agent','strStartYearErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Start year in Gregorian calendar).');
  AAdd('TFile01Agent','strStoreYieldErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Store yield results in separate output file).');
  AAdd('TFile01Agent','strStoreYieldValErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents ((1 = YES, 0 = NO).');
  AAdd('TFile01Agent','strSummaryLevelErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Level of summary output).');
  AAdd('TFile01Agent','strSummaryLevelValErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (0 <=Value <=2).');
  AAdd('TFile01Agent','strSummaryOutputErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Output summary of input data ).');
  AAdd('TFile01Agent','strSummaryOutputValErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (1 = YES, 0 = NO).');
  AAdd('TFile01Agent','strTargetPowerErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (Target system power demand for each load case(in units of MW-continuous)).');
  AAdd('TFile01Agent','strTargetRecurrenceInterval','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Target Recurrence Interval).');
  AAdd('TFile01Agent','strTargetYieldErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (Target system yield for each load case in descending order(in units of million m3/a)).');
  AAdd('TFile01Agent','strTargetYieldNumberErr','Error: Line No:(%d) the number target yields for each load load case is not the same as the number of load cases');
  AAdd('TFile01Agent','strTimePeriodsErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Number of time periods in simulation).');
  AAdd('TFile01Agent','strTitleErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain the title. The title is more than 80 characters.');
  AAdd('TFile01Agent','strWritingCompleted','Writing of file (%s) as file F01.dat completed successfully.');
  AAdd('TFile01Agent','strWritingStarted','Started Writing file (%s) as file F01.dat');
  AAdd('TFile01Agent','strDetailedOptionErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a character that represents (Detailed summary option (Y/N)).');
  AAdd('TFile01Agent','strSupplyOptionErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a character that represents (Supply summary option (Y/N)).');
  AAdd('TFile01Agent','strAnnualSummaryErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a character that represents (Annual summary: Q - flows only, D - demands only, Y - both, N - neither).');
  AAdd('TFile01Agent','strEconomicOptionErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a character that represents (Economic cost analysis summary option (Y/N)).');
  AAdd('TFile01Agent','strPlanningSummaryErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a character that represents (Planning summary - for each year per subsystem (Y/N)).');
  AAdd('TFile01Agent','strInputSummaryErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a character that represents (Input data summary (Y/N)).');
  AAdd('TFile01Agent','strWaterQualityOptionErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a character that represents (Water quality option (Y/N)).');

  AAdd('TFile01Agent','strEconomicTimePeriodsErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (No. of periods per year, used in economic calculations).');
  AAdd('TFile01Agent','strAnalysisStartYearErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Year in which the analysis will begin).');
  AAdd('TFile01Agent','strMaxHydSequences2Err','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Maximum number of sequences to be analysed).');
  AAdd('TFile01Agent','strNumberOfDemandCentresErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Year in which the analysis will begin).');
  AAdd('TFile01Agent','strNumberOfInterBasinChannelsErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Number of inter-basin support channels (max = 20)).');
  AAdd('TFile01Agent','strStartMonth2Err','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Start month number, in sequence of TPERD list).');
  AAdd('TFile01Agent','strMonthStartNewYearErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Number of month in TPERD list which starts new calendar year).');
  AAdd('TFile01Agent','strShortTermPlanningOptionErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a character that represents (Short-term planning option (N/P/M)).');
  AAdd('TFile01Agent','strHydroPowerOptionErr','Warning: Line No:(%d) is not valid.Column %d to %d should contain a character that represents (Hydro power option (Y/N)).');
  AAdd('TFile01Agent','strAllocationControlOptionErr','Warning: Line No:(%d) is not valid.Column %d to %d should contain a character that represents (Allocation control option (Y/N)).');
  AAdd('TFile01Agent','strDecisionMonthsNumberErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Number of decision dates per year for short-term planning (max = 12)).');
  AAdd('TFile01Agent','strDemandCenterChannelTypeErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a character that represents (Demand Centre: Channel type:	D = demand channel R = return flow channel).');
  AAdd('TFile01Agent','strDemandCenterChannelNumberErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Demand Centre: Channel number).');
  AAdd('TFile01Agent','strDemandCenterAnnualDemandErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (Demand Centre: Annual demand (106m3)).');
  AAdd('TFile01Agent','strDemandCenterMinimumDemandErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (Demand Centre: Minimum, or base demand, which overrides relaxation).');
  AAdd('TFile01Agent','strDemandCenterOutputResultsErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a character that represents (Demand Centre: Results output option for the channel (Y/N)).');
  AAdd('TFile01Agent','strInterBasinSummaryRequiredErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a character that represents (Interbasin: Summary required of monthly flows for each year (Y/N)).');
  AAdd('TFile01Agent','strInterBasinChannelNumberErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Interbasin: Channel number).');
  AAdd('TFile01Agent','strInterBasinUpperTransferLimitErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (Interbasin: Upper transfer limit (QSUPM)).');
  AAdd('TFile01Agent','strInterBasinemandCentreNumberErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Associated demand centre number for distribution of yield as in F13.DAT.).');
  AAdd('TFile01Agent','strNumberOfDiscountRatesErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Number of discount rates for different economic scenarios (Maximum = 10)).');

  AAdd('TProjectFileDatabaseAgent','strWriteStarted','Started writing Stomsa Project file data to database.');
  AAdd('TProjectFileDatabaseAgent','strWriteEnded','Writing Stomsa Project file data to database completed successfully.');
  AAdd('TProjectFileDatabaseAgent','strReadStarted','Started updating Stomsa Project file data.');
  AAdd('TProjectFileDatabaseAgent','strReadEnded','Updating Stomsa Project data completed successfully');

  AAdd('TFile01DatabaseAgent','strNoDataReturned','There is no data for file type F01 in the database.');
  AAdd('TFile01DatabaseAgent','strReadEnded','Updating F01 data completed successfully');
  AAdd('TFile01DatabaseAgent','strReadStarted','Started updating F01 file data.');
  AAdd('TFile01DatabaseAgent','strWriteEnded','Writing F01 file data to database completed successfully.');
  AAdd('TFile01DatabaseAgent','strWriteStarted','Started writing F01 file data to database.');

  AAdd('TFile02Agent','strCatchRefErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Catchment''s reference number in Param.dat file).');
  AAdd('TFile02Agent','strDrainScaleErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (Drainage area scaling factor ).');
  AAdd('TFile02Agent','strF02StructureErr','File (%s)  has less than 3 lines. F02.dat file must have at least 3 lines.');
  AAdd('TFile02Agent','strFileIncomplete','File (%s)  is incomplete  as F02.dat. Loading file failed.');
  AAdd('TFile02Agent','strFileNoExist','File (%s)  does not exist. Loading file failed.');
  AAdd('TFile02Agent','strForestScaleErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (Afforestation scaling factor ).');
  AAdd('TFile02Agent','strFullSurfErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (Full reservoir surface area).');
  AAdd('TFile02Agent','strHydroUnitsErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a string that represents (Code to indicate units of hydrological data ).');
  AAdd('TFile02Agent','strHydroUnitsTypeErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a string that represents (Code to indicate units of hydrological data ). Code is not "MCM" or "CMS".');
  AAdd('TFile02Agent','strIrrigateScaleErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (Irrigation scaling factor).');
  AAdd('TFile02Agent','strMaxPointsErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Number of points in area/elevation relationship).');
  AAdd('TFile02Agent','strMaxReserviorNumErr','Error: Line No:(%d) is not valid.Column %d to %d contains an integer that represents (Numbers of reservoirs and nodal points with inflow ). Number more than max of 70');
  AAdd('TFile02Agent','strMinReserviorNumErr','Error: Line No:(%d) is not valid.Column %d to %d contains an integer that represents (Numbers of reservoirs and nodal points with inflow ). Number less than min = 1');
  AAdd('TFile02Agent','strMonthEvapErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (Monthly lake evaporation in mm (start month = October) ).');
  AAdd('TFile02Agent','strNameErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a string that represents (Name of reservoir or nodal point ).');
  AAdd('TFile02Agent','strNodeNoErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Node number of reservoir/node).');
  AAdd('TFile02Agent','strPenaltyStructureErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Penalty structure type associated with node).');
  AAdd('TFile02Agent','strPowerChannelsErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Power channel numbers downstream of reservoir/nodal point).');
  AAdd('TFile02Agent','strPowerNumErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Number of power channels downstream of reservoir/nodal point).');
  AAdd('TFile02Agent','strRainCoefErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (Rainfall/runoff coefficient).');
  AAdd('TFile02Agent','strReadingCompleted','Validating of file (%s) as file F02.dat completed successfully.');
  AAdd('TFile02Agent','strReadingStarted','Started validating file (%s) as file F02.dat');
  AAdd('TFile02Agent','strReserviorNumErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Numbers of reservoirs and nodal points with inflow ).');
  AAdd('TFile02Agent','strResVolErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (Volume of reservoir (million m3) corresponding to each point ).');
  AAdd('TFile02Agent','strSummaryIncludeErr','Warning: Line No:(%d) is not valid.Column %d to %d should contain a character that represents (Include reservoir in summary output ). Character is not "Y" or "N".');
  AAdd('TFile02Agent','strSurfAreaErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (Surface area (km2) of reservoir corresponding to each point ).');
  AAdd('TFile02Agent','strSurfElevErr','Error: Line No:(%d) is not valid.Column %d to %d should contain a float that represents (Surface elevation (m) for each point on the area/elevation curve).');
  AAdd('TFile02Agent','strWritingCompleted','Writing of file (%s) as file F02.dat completed successfully.');
  AAdd('TFile02Agent','strWritingStarted','Started Writing file (%s) as file F02.dat');
  AAdd('TFile02Agent','strNaturalInflowChannelErr','Error: Line No:(%d) is not valid.Column %d to %d should contain an integer that represents (Natural inflow channel number).');
  AAdd('TFile02DatabaseAgent','strNoDataReturned','There is no data for file type F02 in the database.');
  AAdd('TFile02DatabaseAgent','strReadEnded','Updating F02 data completed successfully');
  AAdd('TFile02DatabaseAgent','strReadStarted','Started updating F02 file data.');
  AAdd('TFile02DatabaseAgent','strWriteEnded','Writing F02 file data to database completed successfully.');
  AAdd('TFile02DatabaseAgent','strWriteStarted','Started writing F02 file data to database.');

  AAdd('TFile03Agent','strDemandChannelCountErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Number of specified demand channels (max = 60)).');
  AAdd('TFile03Agent','strDemandChannelObject_ChannelNumberErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Channel number for specified demand channel (max = 1000)).');
  AAdd('TFile03Agent','strDemandChannelObject_ChannelTypeErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain a string that represents(Stochastic specified demand indicator (S or H)).');
  AAdd('TFile03Agent','strDemandChannelObject_DownNodeNumberErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Downstream node/reservoir number).');
  AAdd('TFile03Agent','strDemandChannelObject_GaugeNumberErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Gauge number with which to correlate statistical values).');
  AAdd('TFile03Agent','strDemandChannelObject_PenaltyStructTypeErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Penalty structure type for specified demand channel).');
  AAdd('TFile03Agent','strDemandChannelObject_strFileNoExist','File (%s)  does not exist.');
  AAdd('TFile03Agent','strDemandChannelObject_UpNodeNumberErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Upstream node/reservoir number).');
  AAdd('TFile03Agent','strDemandChannelObject_PathsErr','Error: Specified demand files were found stored in multiple directories. All specified demand files must be stored in a single directory.');
  AAdd('TFile03Agent','strDiversionChannelCountErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Number of diversion channels (max = 35)).');
  AAdd('TFile03Agent','strDiversionChannelObject_ChannelNumberErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Channel number of diversion channel (max = 1000)).');
  AAdd('TFile03Agent','strDiversionChannelObject_ChannelTypeErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Diversion channel type (1, 2 or 3)).');
  AAdd('TFile03Agent','strDiversionChannelObject_DownNodeNumberErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Downstream node/reservoir number).');
  AAdd('TFile03Agent','strDiversionChannelObject_DownNodeNumberErr(Dupl','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Downstream node/reservoir number).');
  AAdd('TFile03Agent','strDiversionChannelObject_PenaltyStructTypeErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Penalty structure type for diversion channel).');
  AAdd('TFile03Agent','strDiversionChannelObject_UpNodeNumberErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Upstream node/reservoir number).');
  AAdd('TFile03Agent','strDiversionChannelObject_UpNodeNumberErr(Duplicat','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Upstream node/reservoir).');
  AAdd('TFile03Agent','strF03StructureErr','File (%s)  has less than 3 lines. F03.dat file must have at least 3 lines.');
  AAdd('TFile03Agent','strFileIncomplete','Reading of file (%s) as file F03.dat did not complete successfully.');
  AAdd('TFile03Agent','strFileNoExist','File (%s)  does not exist. Loading file failed.');
  AAdd('TFile03Agent','strFirmYieldAnalysesCountErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Number of channels requiring firm yield analyses max 20).');
  AAdd('TFile03Agent','strFirmYieldAnalysesCountErrduplic','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Channel number for output).');
  AAdd('TFile03Agent','strGeneralChannelCountErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Number of general flow channels (max = 100)).');
  AAdd('TFile03Agent','strGeneralChannelObject_ChannelNumberErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Channel number for general flow channel (max = 1000)).');
  AAdd('TFile03Agent','strGeneralChannelObject_DownNodeNumberErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Downstream node/reservoir number).');
  AAdd('TFile03Agent','strGeneralChannelObject_PenaltyStructTypeErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Penalty structure type for general flow channel).');
  AAdd('TFile03Agent','strGeneralChannelObject_UpNodeNumberErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Upstream node/reservoir number).');
  AAdd('TFile03Agent','strInflowChannelCountErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Number of specified inflow channels (max = 60)).');
  AAdd('TFile03Agent','strInflowChannelObject_ChannelNumberErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Channel number for specified inflow channel (max = 1000)).');
  AAdd('TFile03Agent','strInflowChannelObject_DownNodeNumberErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Downstream node/reservoir number).');
  AAdd('TFile03Agent','strInflowChannelObject_PenaltyStructTypeErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Penalty structure type for specified inflow channel).');
  AAdd('TFile03Agent','strInflowChannelObject_UpNodeNumberErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Upstream node/reservoir number).');
  AAdd('TFile03Agent','strIrrigationChannelErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Number of irrigation areas (max = 20).');
  AAdd('TFile03Agent','strIrrigationChannelObject_ConsumptiveChannelNumberErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Consumptive channel number).');
  AAdd('TFile03Agent','strIrrigationChannelObject_ConsumptivePenaltyStructTypeErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Penalty structure type for consumptive channel).');
  AAdd('TFile03Agent','strIrrigationChannelObject_DiversionChannelNumberErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Channel number for diversion channel ).');
  AAdd('TFile03Agent','strIrrigationChannelObject_DownStreamNodeNumberErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Downstream node number for return flow channel).');

end;

procedure LoadLanguageText7(AAdd: TTextItemAddFunction);
begin

 AAdd('TFile03Agent','strIrrigationChannelObject_IrrigationNodeNumberErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Node number representing irrigation project).');
  AAdd('TFile03Agent','strIrrigationChannelObject_IrrigationPenaltyStructTypeErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Penalty structure type for irrigation diversion channel).');
  AAdd('TFile03Agent','strIrrigationChannelObject_RelaxationDemandErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Irrigation policy for relaxation of demand).');
  AAdd('TFile03Agent','strIrrigationChannelObject_ReturnChannelNumberErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Return flow channel number).');
  AAdd('TFile03Agent','strIrrigationChannelObject_ReturnPenaltyStructTypeErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents penalty structure type for return flow channel).');
  AAdd('TFile03Agent','strLossChannelCountErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Number of loss channels (max = 35)).');
  AAdd('TFile03Agent','strLossChannelObject_ChannelNumberErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Channel number of loss channel (max = 1000)).');
  AAdd('TFile03Agent','strLossChannelObject_ChannelTypeErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Loss channel type (0 or 1)).');
  AAdd('TFile03Agent','strLossChannelObject_DownNodeNumberErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Downstream node/reservoir number).');
  AAdd('TFile03Agent','strLossChannelObject_PenaltyStructTypeErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Penalty structure type for loss channel).');
  AAdd('TFile03Agent','strLossChannelObject_ReferenceErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Loss channel reference).');
  AAdd('TFile03Agent','strLossChannelObject_UpNodeNumberErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Upstream node/reservoir number).');
  AAdd('TFile03Agent','strMasterChannelCountErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents (Number of master control channels (max = 2).');
  AAdd('TFile03Agent','strMasterChannelObject_ChannelNumberErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents (Master control channel number (max = 1000)).');
  AAdd('TFile03Agent','strMasterChannelObject_ChannelTypeErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain a string that represents (Channel type indicated (P for power, W for water) ).');
  AAdd('TFile03Agent','strMasterChannelObject_DownNodeNumberErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents (Downstream node number).');
  AAdd('TFile03Agent','strMasterChannelObject_PenaltyStructTypeErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents (Penalty structure type ).');
  AAdd('TFile03Agent','strMasterChannelObject_UpNodeNumberErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents (Upstream node number).');
  AAdd('TFile03Agent','strMaxDemandChannelCountErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Number of specified demand channels not more than  200).');
  AAdd('TFile03Agent','strMaxDemandChannelObject_ChannelNumberErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Channel number for specified demand channel not more than 1000).');
  AAdd('TFile03Agent','strMaxDiversionChannelCountErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Number of diversion channels not more than 100).');
  AAdd('TFile03Agent','strMaxDiversionChannelObject_ChannelNumberErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Channel number of diversion channel not more than 1000).');
  AAdd('TFile03Agent','strMaxFirmYieldAnalysesCountErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Number of channels requiring firm yield analyses not more than 300).');
  AAdd('TFile03Agent','strMaxGeneralChannelCountErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Number of general flow channels not more than 800).');
  AAdd('TFile03Agent','strMaxGeneralChannelObject_ChannelNumberErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Channel number for general flow channel not more than 1000).');
  AAdd('TFile03Agent','strMaxInflowChannelCountErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Number of specified inflow channels not more than 100).');
  AAdd('TFile03Agent','strMaxInflowChannelObject_ChannelNumberErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Channel number for specified inflow channel not more than 1000).');
  AAdd('TFile03Agent','strMaxIrrigationChannelErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Number of irrigation areas not more than 20).');
  AAdd('TFile03Agent','strMaxIrrigationBlockChannelErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Number of irrigation blocks not more than 200).');
  AAdd('TFile03Agent','strMaxWetlandChannelErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Number of wetlands not more than 100).');
  AAdd('TFile03Agent','strMaxDemandCentreErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Number of demand centres not more than 100).');
  AAdd('TFile03Agent','strMaxLossChannelCountErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Number of loss channels not more than 100).');
  AAdd('TFile03Agent','strMaxLossChannelObject_ChannelNumberErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Channel number of loss channel not more than 1000).');
  AAdd('TFile03Agent','strMaxMasterChannelCountErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents (Number of master control channels not more than 2).');
  AAdd('TFile03Agent','strMaxMasterChannelObject_ChannelNumberErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents (Master control channel number not more than 1000)).');
  AAdd('TFile03Agent','strMaxMinFlowChannelCountErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Number of minimum flow channels not more than 100).');
  AAdd('TFile03Agent','strMaxMinFlowChannelObject_ChannelNumberErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Channel number of minimum flow channel not more than= 1000).');
  AAdd('TFile03Agent','strMaxMultiPurposeChannelCountErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Number of multi-purpose min-max channels not more than 800).');
  AAdd('TFile03Agent','strMaxMultiPurposeChannelObject_ChannelNumberErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Channel number of min-max channel not more than 1000).');
  AAdd('TFile03Agent','strMaxPenaltyChannelObject_ArcCountErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents (Number of arcs used to represent the channel  not more than 5 ).');
  AAdd('TFile03Agent','strMaxPenaltyStructureCountErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents (Total number of channel penalty types  not more than 50 ).');
  AAdd('TFile03Agent','strMaxPowerChannelCountErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents (Number of power channels not more than 20).');
  AAdd('TFile03Agent','strMaxPowerChannelObject_ChannelNumberErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents (Power generation channel number not more than 1000).');
  AAdd('TFile03Agent','strMaxPowerChannelObject_SpillChannelNumberErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Spill channel number not more than= 1000).');
  AAdd('TFile03Agent','strMaxPumpingChannelCountErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Number of pumping channels not more than 20).');
  AAdd('TFile03Agent','strMaxPumpingChannelObject_ChannelNumberErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Channel number of pumping channel not more than 1000).');
  AAdd('TFile03Agent','strMaxSummaryChannelCountErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Number of channels specified for summary printout).');
  AAdd('TFile03Agent','strMinFlowChannelCountErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Number of minimum flow channels (max = 100)).');
  AAdd('TFile03Agent','strMinFlowChannelObject_ChannelNumberErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Channel number of minimum flow channel (max = 1000)).');
  AAdd('TFile03Agent','strMinFlowChannelObject_DownNodeNumberErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Downstream Node Number).');
  AAdd('TFile03Agent','strMinFlowChannelObject_PenaltyStructTypeErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Penalty structure type for minimum flow channel).');
  AAdd('TFile03Agent','strMultiPurposeChannelCountErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Number of multi-purpose min-max channels (max = 75)).');
  AAdd('TFile03Agent','strMultiPurposeChannelObject_ChannelNumberErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Channel number of min-max channel (max = 1000)).');
  AAdd('TFile03Agent','strMultiPurposeChannelObject_DownNodeNumberErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Downstream node/reservoir number).');
  AAdd('TFile03Agent','strMultiPurposeChannelObject_PenaltyStructTypeErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Penalty structure type for min-max channel).');
  AAdd('TFile03Agent','strMultiPurposeChannelObject_UpNodeNumberErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Upstream node/reservoir number).');
  AAdd('TFile03Agent','strPenaltyChannelCountErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents Total number of channel penalty types (max = 50).');
  AAdd('TFile03Agent','strPenaltyChannelObject_ArcPenaltyErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain a float that represents(Penalty associated with the flow in each arc)');
  AAdd('TFile03Agent','strPenaltyChannelObject_PenaltyTypeErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents (Channel penalty structure type ).');
  AAdd('TFile03Agent','strPowerChannelCountErrr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents (Number of power channels (max = 20)).');
  AAdd('TFile03Agent','strPowerChannelObject_ChannelNumberErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents (Power generation channel number (max = 1000)).');
  AAdd('TFile03Agent','strPowerChannelObject_DownNodeNumberErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents( Downstream node number).');
  AAdd('TFile03Agent','strPowerChannelObject_DownStreamPowerChannelCountErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Downstream Power Channel count).');
  AAdd('TFile03Agent','strPowerChannelObject_DownStreamPowerChannelsErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Channel numbers of downstream power channels along path of normal routing).');
  AAdd('TFile03Agent','strPowerChannelObject_PenaltyStructTypeErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Penalty structure type).');
  AAdd('TFile03Agent','strPowerChannelObject_SpillChannelNumberErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Spill channel number (max = 1000).');
  AAdd('TFile03Agent','strPowerChannelObject_SpillDownNodeNumberErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Downstream node number for spill channel).');
  AAdd('TFile03Agent','strPowerChannelObject_SpillPenaltyStructTypeErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Penalty structure type for spill channel).');
  AAdd('TFile03Agent','strPowerChannelObject_SpillUpNodeNumberErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Upstream node number for spill channel).');
  AAdd('TFile03Agent','strPowerChannelObject_UpNodeNumberErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents( Upstream node number).');
  AAdd('TFile03Agent','strPumpingChannelCountErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Number of pumping channels (Max = 20)).');
  AAdd('TFile03Agent','strPumpingChannelObject_ChannelNumberErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Channel number of pumping channel (max = 1000)).');
  AAdd('TFile03Agent','strPumpingChannelObject_DownNodeNumberErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Downstream node/reservoir number).');
  AAdd('TFile03Agent','strPumpingChannelObject_EfficiencyErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Pumping efficiency (proportion) eg 0.85).');
  AAdd('TFile03Agent','strPumpingChannelObject_PenaltyStructTypeErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Penalty structure type for pumping channel).');
  AAdd('TFile03Agent','strPumpingChannelObject_PumpingHeadErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Pumping head in metres).');
  AAdd('TFile03Agent','strPumpingChannelObject_UpNodeNumberErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Upstream node/reservoir number).');
  AAdd('TFile03Agent','strReadingCompleted','Validating of file (%s) as file F03.dat completed successfully.');
  AAdd('TFile03Agent','strReadingStarted','Started validating file (%s) as file F03.dat.');
  AAdd('TFile03Agent','strMinFlowChannelObject_UpNodeNumberErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Upstream node number).');
  AAdd('TFile03Agent','strSummaryChannelCountErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Number of channels specified for summary printout).');
  AAdd('TFile03Agent','strWritingCompleted','Writing of file (%s) as file F03.dat completed successfully.');
  AAdd('TFile03Agent','strWritingStarted','Started Writing file (%s) as file F03.dat');
  AAdd('TFile03Agent','trPenaltyChannelObject_ArcCountErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents (Number of arcs used to represent the channel (1 to 5).');

  AAdd('TFile03Agent','strIrrigationBlockCountErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Number of irrigation blocks. Max 100).');
  AAdd('TFile03Agent','strIrrigationBlockUpstreamNodeNrErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Upstream node number for irrigation block abstraction channel).');
  AAdd('TFile03Agent','strIrrigationBlockDownstreamNodeNrErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Downstream node number for irrigation block return flow channel).');
  AAdd('TFile03Agent','strIrrigationBlockAbstractionChannelNrErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Irrigation block abstraction channel number).');
  AAdd('TFile03Agent','strIrrigationBlockAbstractionPenaltyErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Penalty structure type for abstraction channel).');
  AAdd('TFile03Agent','strIrrigationBlockReturnFlowChannelNrErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Irrigation block return flow channel number).');
  AAdd('TFile03Agent','strIrrigationBlockReturnFlowPenaltyErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Penalty structure type for return flow channel).');
  AAdd('TFile03Agent','strIrrigationBlockBlockNumber','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Irrigation block number).');

  AAdd('TFile03Agent','strWetlandCountErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Number of wetlands Max 100).');
  AAdd('TFile03Agent','strWetlandNodeNumberErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Wetland node number).');
  AAdd('TFile03Agent','strWetlandUpNodeNumberErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Upstream node number for wetland inflow channel).');
  AAdd('TFile03Agent','strWetlandDownNodeNumberErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Downstream node number for wetland outflow channel).');
  AAdd('TFile03Agent','strWetlandInflowChannelNrErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Wetland inflow channel number).');
  AAdd('TFile03Agent','strWetlandInflowPenaltyTypeErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Penalty structure type for wetland inflow channel).');
  AAdd('TFile03Agent','strWetlandOutflowChannelNrErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Wetland outflow channel number).');
  AAdd('TFile03Agent','strWetlandOutflowPenaltyTypeErr','Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Penalty structure type for wetland outflow channel).');

  AAdd('TFile03Agent','strDemandCentreCountErr'       ,'Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Number of demand centres <= 100)).');
  AAdd('TFile03Agent','strCentreNodeNoErr'            ,'Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Demand centre node number).');
  AAdd('TFile03Agent','strConsumptiveChannelNrErr'    ,'Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Demand centre consumptive water use channel number).');
  AAdd('TFile03Agent','strNoOfReturnFlowChannelsErr'  ,'Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Number of demand centre return flow channels <= 20)).');
  AAdd('TFile03Agent','strNrOfPlantLossChannelsErr'   ,'Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Number of reclamation plant loss channels).');
  AAdd('TFile03Agent','strReturnFlowChannelNrErr'     ,'Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Demand centre return flow channel number).');
  AAdd('TFile03Agent','strReturnFlowDownNodeNrErr'    ,'Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Downstream node number for return flow channel).');
  AAdd('TFile03Agent','strReturnFlowPenaltyStructErr' ,'Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Penalty structure type for return flow channel).');
  AAdd('TFile03Agent','strPlantLossChannelNrErr'      ,'Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Reclamation plant loss channel number).');
  AAdd('TFile03Agent','strPlantLossDownNodeNrErr'     ,'Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Downstream node number for loss channel).');
  AAdd('TFile03Agent','strPlantLossPenaltyStructErr'  ,'Error: Line No:(%d) is not valid.Column %d to %d  should contain an integer that represents(Penalty structure type for loss channel).');

  AAdd('TFile03DatabaseAgent','strNoDataReturned','No data was found.');
  AAdd('TFile03DatabaseAgent','strReadEnded','Updating F03 data completed successfully');
  AAdd('TFile03DatabaseAgent','strReadStarted','Started updating F03 file data.');
  AAdd('TFile03DatabaseAgent','strWriteEnded','Writing F03 file data to database completed successfully.');
  AAdd('TFile03DatabaseAgent','strWriteStarted','Started writing F03 file data to database.');

  AAdd('TDDTSDailyDataFileAgent','strReadingStarted','Started validating file (%s)');
  AAdd('TDDTSDailyDataFileAgent','strFileNoExist','File (%s)  does not exist. Loading file failed.');
  AAdd('TDDTSDailyDataFileAgent','strNoDataReturned','No data was found.');
  AAdd('TDDTSDailyDataFileAgent','strDateIsEmpty','Error: Line No:(%d) is not valid.Column %d to %d should contain date in the format(YYYY/MM/DD).');
  AAdd('TDDTSDailyDataFileAgent','strGapsInDailyData','Error: Line No:(%d) has gaps daily dates.Check that the date is a day after the previous line.).');
  AAdd('TDDTSDailyDataFileAgent','strNullValue','Error: Line No:(%d) is not valid.Column %d to %d should contain an real number.');
  AAdd('TDDTSDailyDataFileAgent','strReadingCompleted','Validating of file (%s) completed successfully.');
  AAdd('TDDTSDailyDataFileAgent','strWritingStarted','Started Writing file (%s)');
  AAdd('TDDTSDailyDataFileAgent','strWritingCompleted','Writing of file (%s) completed successfully.');

  AAdd('TDDTSDailyDataDatabaseAgent','strNoDataReturned','There is no data for file in the database.');
  AAdd('TDDTSDailyDataDatabaseAgent','strReadEnded','Updating data completed successfully');
  AAdd('TDDTSDailyDataDatabaseAgent','strReadStarted','Started updating file data.');
  AAdd('TDDTSDailyDataDatabaseAgent','strWriteEnded','Writing file data to database completed successfully.');
  AAdd('TDDTSDailyDataDatabaseAgent','strWriteStarted','Started writing file data to database.');

  AAdd('TDDTSOutputCSVFileAgent','strReadingStarted','Started validating file (%s)');
  AAdd('TDDTSOutputCSVFileAgent','strFileNoExist','File (%s)  does not exist. Loading file failed.');
  AAdd('TDDTSOutputCSVFileAgent','strReadingCompleted','Reading of file (%s) completed successfully.');

  AAdd('TDDTSOutputCSVFileAgent','strWritingStarted','Started Writing file (%s)');
  AAdd('TDDTSOutputCSVFileAgent','strWritingCompleted','Writing of file (%s) completed successfully.');


end;

end.
